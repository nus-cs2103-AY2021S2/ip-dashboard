[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"# Popo"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"## Personal Task Manager"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"A personal task list manager that keeps track of multiple types of task."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"## Example"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"![example.png](readme_example_img.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"## Notes"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"A Java greenfield project for NUS software engineering students"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"## Credits"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"Images by [omatian](https://omatian.sg/)"}],"authorContributionMap":{"w2vgd":11,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    mainClassName \u003d \"popo.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    archiveBaseName \u003d \"popo\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"w2vgd":17}},{"path":"src/main/java/popo/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * The main entry point to the application."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Entry point of the application."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":17}},{"path":"src/main/java/popo/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import popo.storage.InvalidStorageFilePathException;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import popo.ui.Ui;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * The main entry point to the chatbot application."},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" * Initializes the application and starts user interaction."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private Ui ui;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    private TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void init() throws Exception {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        super.init();"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        // Get the command line argument"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        Application.Parameters applicationParameters \u003d getParameters();"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e parameters \u003d applicationParameters.getUnnamed();"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        String[] args \u003d parameters.toArray(new String[0]);"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        // Initialize the required components"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        initialize(args);"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        // Start the ui and show the GUI"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        ui.start(primaryStage);"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * Initializes the required components and prints the welcome greeting."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    private void initialize(String[] args) {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            // Initialize the required components"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            storage \u003d initializeStorage(args);"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            taskList \u003d storage.loadTasks();"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            ui \u003d new Ui(storage, taskList);"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidStorageFilePathException | IOException ex) {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"            // Exit the application if there is an error loading the storage file or reading from the file"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            System.exit(1);"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     * Initializes the storage using the specified filepath. If user did not specify a filepath,"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * then the default filepath will be used."},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Storage} object that is used to read and write to a file."},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the specified filepath is invalid."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    private Storage initializeStorage(String[] args) throws InvalidStorageFilePathException {"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        if (args.length \u003e 0) {"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"            // User has specified a file path for the storage"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"            return new Storage(args[0]);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"            // Using the default file path as user did not specify a file path"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            return new Storage();"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":74}},{"path":"src/main/java/popo/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Exits the application."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Exit the program\\n\""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: bye\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(true);"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":16}},{"path":"src/main/java/popo/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Represents a user command."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    protected TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Sets the current instance of task list that the command will operate on."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     * @param taskList The current instance of task list."},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public void setTaskList(TaskList taskList) {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Executes the command."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @return Result command."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public abstract CommandResult execute();"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":26}},{"path":"src/main/java/popo/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Represents the result of a command after execution."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class CommandResult {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    private final TaskList updatedTaskList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private final boolean isExiting;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private final String messageForUser;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code CommandResult} object with a message for the user, without an updated task list,"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * and sets whether the application will be exiting after the command."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * @param isExiting Boolean that sets whether the application is exiting."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * @param messages Arguments that represent the messages to show to user."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public CommandResult(boolean isExiting, String... messages) {"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        updatedTaskList \u003d null;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        this.isExiting \u003d isExiting;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        StringBuilder fullMessage \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        for (String msg : messages) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"            fullMessage.append(msg);"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        messageForUser \u003d fullMessage.toString();"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code CommandResult} object with a message for the user and an updated task list,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * and sets whether the application will be exiting after the command."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param updatedTaskList Updated task list after execution of a command."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param isExiting Boolean that sets whether the application is exiting."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param messages Arguments that represent the messages to show to user."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public CommandResult(TaskList updatedTaskList, boolean isExiting, String... messages) {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        this.updatedTaskList \u003d updatedTaskList;"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        this.isExiting \u003d isExiting;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        StringBuilder fullMessage \u003d new StringBuilder();"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        for (String msg : messages) {"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            fullMessage.append(msg);"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        messageForUser \u003d fullMessage.toString();"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * Returns the message to be printed to the user."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * @return Message for the user."},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public String getMessageForUser() {"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        return messageForUser;"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     * Returns the updated task list after the execution of a command."},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * @return The updated task list."},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public TaskList getUpdatedTaskList() {"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        return updatedTaskList;"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * Returns whether the application is exiting after the command."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"     * @return True if application is exiting after command, otherwise false."},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public boolean isExitingProgram() {"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        return isExiting;"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * Compares this {@code CommandResult} to the specified object. The result if true if and only if the"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     * argument is not null and is a {@code CommandResult} object that has the same message for user and"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * the same updated taskList."},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     * @param obj The object to compare this {@code CommandResult} against."},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"     * @return True if the given object represents a {@code CommandResult} equivalent to this CommandResult,"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"     *         false otherwise."},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d obj) {"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            return true;"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        if (!(obj instanceof CommandResult)) {"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"            return false;"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        CommandResult objCommandResult \u003d (CommandResult) obj;"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        if (!messageForUser.equals(objCommandResult.messageForUser)) {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            return false;"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        if (updatedTaskList !\u003d null \u0026\u0026 objCommandResult.updatedTaskList !\u003d null) {"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"            return updatedTaskList.equals(objCommandResult.updatedTaskList);"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        return updatedTaskList \u003d\u003d null \u0026\u0026 objCommandResult.updatedTaskList \u003d\u003d null;"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":102}},{"path":"src/main/java/popo/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DeadlineTask;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" * Creates a Deadline task."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a deadline task with a date component and an optional time component\\n\""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 1: deadline \u003ctask_description\u003e /by dd/mm/yyyy\\n\""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 1 /by 31/1/2021\\n\""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 2: deadline \u003ctask_description\u003e /by dd/mm/yyyy HHHH\\n\""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 1 /by 31/1/2021 1800\\n\""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 2 /by 28/10/2021, 2359\";"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate deadlineDate;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private final LocalTime deadlineTime;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineCommand} object with a deadline date component only."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * @param taskName     Name of the task."},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public DeadlineCommand(String taskName, LocalDate deadlineDate) {"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineCommand} object with the given task name, deadline date and time components."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @param taskName     Name of the task."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public DeadlineCommand(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        DeadlineTask task \u003d new DeadlineTask(taskName, deadlineDate, deadlineTime);"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":62}},{"path":"src/main/java/popo/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_DELETED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_INDEX;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Deletes a task."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Delete a task\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: delete \u003ctask_number\u003e\\n\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Example: delete 2\";"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final int index;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeleteCommand} object with the index of the task in the task list to be deleted."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be deleted."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.index \u003d index;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d taskList.getTask(index);"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"            taskList.deleteTask(index);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(taskList, false,"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                    MESSAGE_DELETED_TASK + \"\\n\","},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                    task.toString() + \"\\n\","},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"                    String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_INVALID_INDEX);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":43}},{"path":"src/main/java/popo/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_DONE_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_INDEX;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Completes a task."},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Mark a task as completed\\n\""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: done \u003ctask_number\u003e\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Example: done 2\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    private final int index;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DoneCommand} object with the index of the task in the task list to be marked as done."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be marked as done."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public DoneCommand(int index) {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        this.index \u003d index;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            taskList.completeTask(index);"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(taskList, false,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"                    MESSAGE_DONE_TASK + \"\\n\","},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"                    taskList.getTask(index).toString());"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_INVALID_INDEX);"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":38}},{"path":"src/main/java/popo/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.EventTask;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Creates an Event task."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class EventCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"event\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add an event task\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: event \u003ctask_description\u003e /at \u003cevent_time\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Example: event Project Meeting /at NUS SoC COM1-0210\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final String eventTime;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventCommand} object with the given task name and description of the event time."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param taskName Name of the task."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime Description of the event time."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public EventCommand(String taskName, String eventTime) {"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        EventTask task \u003d new EventTask(taskName, eventTime);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":41}},{"path":"src/main/java/popo/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_FOUND_TASKS;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDEX_TASK_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_NO_MATCHES;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Finds tasks that contains specific keywords or phrases."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Find tasks that contains specific keywords or phrases\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: find \u003ckeyword_or_phrase\u003e\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Example: find book\";"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final String searchWord;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code FindCommand} object with the given search word or phrase."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param searchWord Keyword or phrase to be used for filtering."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public FindCommand(String searchWord) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.searchWord \u003d searchWord;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        StringBuilder tasksWithSearchWord \u003d new StringBuilder();"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d taskList.getTask(i - 1);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"            if (task.getName().contains(searchWord)) {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                tasksWithSearchWord.append(String.format(MESSAGE_INDEX_TASK_FORMAT, i, taskList.getTask(i - 1)));"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                tasksWithSearchWord.append(\"\\n\");"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        if (tasksWithSearchWord.length() \u003d\u003d 0) {"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_NO_MATCHES);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        tasksWithSearchWord.deleteCharAt(tasksWithSearchWord.length() - 1);"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_FOUND_TASKS + \"\\n\","},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"                tasksWithSearchWord.toString());"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":49}},{"path":"src/main/java/popo/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_HELP;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Show help menu to user."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class HelpCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"help\";"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Print available commands\\n\""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: help\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_HELP + \"\\n\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"                HelpCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"                ByeCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                ListCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"                ToDoCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                DeadlineCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"                EventCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"                DoneCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                DeleteCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"                FindCommand.MESSAGE_USAGE);"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":28}},{"path":"src/main/java/popo/commands/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid user command."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/commands/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid description for the command."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public InvalidDescriptionException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_EMPTY_TASKLIST;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDEX_TASK_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_SHOW_TASKLIST;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Lists the current tasks."},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Print the list of current tasks\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: list\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_EMPTY_TASKLIST);"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        StringBuilder taskListAsString \u003d new StringBuilder();"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"            taskListAsString.append(String.format(MESSAGE_INDEX_TASK_FORMAT, i, taskList.getTask(i - 1)));"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"            if (i !\u003d taskList.size()) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                taskListAsString.append(\"\\n\");"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_SHOW_TASKLIST + \"\\n\","},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"                taskListAsString.toString());"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":32}},{"path":"src/main/java/popo/commands/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an empty description."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class NoDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public NoDescriptionException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.ToDoTask;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Creates a ToDo task."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a todo task\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: todo \u003ctask_description\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Example: todo Go CNY shopping\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoCommand} with the given task name."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param taskName Name of the task."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public ToDoCommand(String taskName) {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        ToDoTask task \u003d new ToDoTask(taskName);"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":38}},{"path":"src/main/java/popo/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.parser;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_EMPTY_DESCRIPTION;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ENTER_COMMAND;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_FOLLOW_USAGE;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDICATE_TASK;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_COMMAND;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_DATE_FORMAT;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_SYNTAX;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_TASK_INDEX;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_TIME_FORMAT;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_MISSING_SEARCH_WORD;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Matcher;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Pattern;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ByeCommand;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import popo.commands.Command;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DeadlineCommand;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DeleteCommand;"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DoneCommand;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import popo.commands.EventCommand;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import popo.commands.FindCommand;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import popo.commands.HelpCommand;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import popo.commands.InvalidCommandException;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import popo.commands.InvalidDescriptionException;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ListCommand;"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import popo.commands.NoDescriptionException;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ToDoCommand;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"import popo.utils.InputDateTimeFormat;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":" * Parses user input."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"public class Parser {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     * Regex to separate the command word and arguments."},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    public static final Pattern USER_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * Parses user input into a command."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     * @param userInput Full user input string."},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * @return A user command."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidCommandException     If the user pass in an unrecognized command."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the arguments do not match the command."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the arguments is empty when further information is required."},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public Command parseCommand(String userInput) throws InvalidCommandException,"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException, NoDescriptionException {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        Matcher matcher \u003d USER_COMMAND_FORMAT.matcher(userInput.strip());"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        if (!matcher.matches()) {"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidCommandException(MESSAGE_ENTER_COMMAND);"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        // Get the command word as captured by the named-capturing group"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        String command \u003d matcher.group(\"command\");"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        // Get the arguments as captured by the named-capturing group"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        String arguments \u003d matcher.group(\"arguments\").strip();"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        switch (command) {"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        case ToDoCommand.COMMAND_WORD:"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForToDo(arguments);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        case DeadlineCommand.COMMAND_WORD:"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDeadline(arguments);"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        case EventCommand.COMMAND_WORD:"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForEvent(arguments);"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        case ByeCommand.COMMAND_WORD:"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"            return new ByeCommand();"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        case DoneCommand.COMMAND_WORD:"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDone(arguments);"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDelete(arguments);"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"            return new ListCommand();"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"            return new HelpCommand();"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        case FindCommand.COMMAND_WORD:"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForFind(arguments);"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        default:"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidCommandException(MESSAGE_INVALID_COMMAND);"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the todo command."},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"     * @return {@code ToDoCommand}."},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException If the description of the task is empty."},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForToDo(String arguments) throws NoDescriptionException {"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        return new ToDoCommand(arguments);"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the deadline command."},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DeadlineCommand}."},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the deadline is invalid."},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDeadline(String arguments) throws NoDescriptionException,"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/by\")) {"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"                    + DeadlineCommand.MESSAGE_USAGE);"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        // Split the user input into the task name and the datetime string"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        String[] deadlineInputArr \u003d arguments.split(\"/by\", 2);"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"        String deadlineTaskName \u003d deadlineInputArr[0].strip();"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        String userInputDateTime \u003d deadlineInputArr[1].strip();"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"        // Split the datetime string into a date string and a time string (if available)"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        String[] userInputDateTimeArr \u003d userInputDateTime.split(\"\\\\s*,*\\\\s+|\\\\s*,\\\\s*\", 2);"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"        String userInputDate \u003d userInputDateTimeArr[0].strip();"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        LocalDate deadlineDate \u003d parseDate(userInputDate);"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        if (userInputDateTimeArr.length \u003d\u003d 1) {"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"            // User did not enter a time string"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"            return new DeadlineCommand(deadlineTaskName, deadlineDate);"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"            // User entered a time string"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"            String userInputTime \u003d userInputDateTimeArr[1].strip();"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"            LocalTime deadlineTime \u003d parseTime(userInputTime);"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"            return new DeadlineCommand(deadlineTaskName, deadlineDate, deadlineTime);"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"     * Parses the input date string format into a {@code LocalDate} object."},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"     * @param dateString User input date string."},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"     * @return {@code LocalDate} object representing the date."},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the date is invalid."},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"    private static LocalDate parseDate(String dateString) throws InvalidDescriptionException {"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"            return LocalDate.parse(dateString, InputDateTimeFormat.INPUT_DATE_FORMAT);"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_DATE_FORMAT + \"\\n\""},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"                    + DeadlineCommand.MESSAGE_USAGE);"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"     * Parses the input time string format into a {@code LocalTime} object."},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"     * @param timeString User input time string."},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"     * @return {@code LocalTime} object representing the time."},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the time is invalid."},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"    private static LocalTime parseTime(String timeString) throws InvalidDescriptionException {"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"            return LocalTime.parse(timeString, InputDateTimeFormat.INPUT_TIME_FORMAT);"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TIME_FORMAT + \"\\n\""},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"                    + DeadlineCommand.MESSAGE_USAGE);"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the event command."},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"     * @return {@code EventCommand}."},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the event time is invalid."},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForEvent(String arguments) throws NoDescriptionException,"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/at\")) {"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"                    + EventCommand.MESSAGE_USAGE);"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        String[] eventInputArr \u003d arguments.split(\"/at\");"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"        String eventTaskName \u003d eventInputArr[0].strip();"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"        String eventTime \u003d eventInputArr[1].strip();"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"        return new EventCommand(eventTaskName, eventTime);"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the done command."},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DoneCommand}."},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the description is not a valid index."},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the task number is missing."},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"     * @throws IndexOutOfBoundsException   If the specified task number is outside of range."},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDone(String arguments) throws InvalidDescriptionException,"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"            NoDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_INDICATE_TASK);"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1; // Account for 0-based indexing"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"            return new DoneCommand(index);"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TASK_INDEX);"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the delete command."},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DeleteCommand}."},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the description is not a valid index."},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the task number is missing."},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"     * @throws IndexOutOfBoundsException   If the specified task number is outside of range."},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDelete(String arguments) throws InvalidDescriptionException,"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"            NoDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_INDICATE_TASK);"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1; // Account for 0-based indexing"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"            return new DeleteCommand(index);"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TASK_INDEX);"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the find command."},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"     * @return {@code FindCommand}."},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException If the search word is missing."},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForFind(String arguments) throws NoDescriptionException {"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_MISSING_SEARCH_WORD);"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"        return new FindCommand(arguments);"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":258}},{"path":"src/main/java/popo/storage/InvalidStorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid file path for storage."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidStorageFilePathException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public InvalidStorageFilePathException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/popo/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DeadlineTask;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.EventTask;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.ToDoTask;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import popo.utils.OutputDateTimeFormat;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":" * Used to read and write to a file."},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"./data/popo.txt\";"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_INVALID_FILEPATH \u003d \"The file path of a storage file should end with \u0027.txt\u0027\";"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_FAILED_INITIALIZATION \u003d \"Failed to initialize storage.\" + \"\\n\""},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"            + \"This error could be due to an invalid file path.\" + \"\\n\""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"            + \"Exiting...\";"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_ERROR_WRITING_TO_FILE \u003d \"Error writing data to file: \";"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    private final Path path;"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Storage} object with the default file path."},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the default file path is invalid."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    public Storage() throws InvalidStorageFilePathException {"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        this(DEFAULT_FILEPATH);"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Storage} object with the given file path."},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * @param filePath File path to read or write to."},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the file path is invalid."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        if (!isValidFilePath(filePath)) {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidStorageFilePathException(MESSAGE_INVALID_FILEPATH);"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"            path \u003d Path.of(filePath);"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidPathException ex) {"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidStorageFilePathException(MESSAGE_FAILED_INITIALIZATION);"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * Checks if a file indicated by the given file path is text file."},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     * @param filePath File path to be checked."},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * @return True if the file path ends with \u0027.txt\u0027, else false."},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    private static boolean isValidFilePath(String filePath) {"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        return filePath.endsWith(\".txt\");"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"     * Saves the list of tasks by writing into the file if the list if updated by the previous command."},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Updated task list."},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while writing to the file."},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    public void saveTasksIfPresent(TaskList taskList) throws StorageException {"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        if (taskList \u003d\u003d null) {"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"            return;"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            // Create directories in the file path that do not exist yet"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"            Path pathToParentDirectory \u003d path.getParent();"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"            if (pathToParentDirectory !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"                Files.createDirectories(pathToParentDirectory);"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"            List\u003cString\u003e taskStrings \u003d Storage.convertAllTasksToString(taskList);"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"            Files.write(path, taskStrings);"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_WRITING_TO_FILE + path);"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"     * Loads the list of tasks found in the file and parses the tasks into an operational format."},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"     * @return {@code TaskList} that represents the current list of tasks in the file."},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"     * @throws IOException If an error occurs while reading from the file."},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"    public TaskList loadTasks() throws IOException {"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"            return taskList;"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e taskStrings \u003d Files.readAllLines(path);"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        for (String s : taskStrings) {"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"            taskList.addTask(Storage.convertStringToTask(s));"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"        return taskList;"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"     * Converts a task string into a {@code Task} object."},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"     * @param taskString Task string to be converted."},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"     * @return {@code Task}."},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"    public static Task convertStringToTask(String taskString) {"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        String[] arr \u003d taskString.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        String taskType \u003d arr[0];"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"        String taskStatus \u003d arr[1];"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"        String taskName \u003d arr[2];"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"        boolean isTaskCompleted \u003d taskStatus.equals(\"1\");"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        Task task;"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"        switch (taskType) {"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        case ToDoTask.IDENTIFIER:"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"            task \u003d new ToDoTask(taskName, isTaskCompleted);"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        case DeadlineTask.IDENTIFIER:"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"            String deadlineTaskDescription \u003d arr[3];"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"            String[] deadlineTaskDescriptionArr \u003d deadlineTaskDescription.split(\",\");"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"            String deadlineDateString \u003d deadlineTaskDescriptionArr[0].strip();"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString, OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"            if (deadlineTaskDescriptionArr.length \u003d\u003d 1) {"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"                // There is no time component"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"                task \u003d new DeadlineTask(taskName, isTaskCompleted, deadlineDate);"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"            } else {"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"                // There is a time component"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"                String deadlineTimeString \u003d deadlineTaskDescriptionArr[1].strip();"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"                LocalTime deadlineTime \u003d LocalTime.parse(deadlineTimeString, OutputDateTimeFormat.OUTPUT_TIME_FORMAT);"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"                task \u003d new DeadlineTask(taskName, isTaskCompleted, deadlineDate, deadlineTime);"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        case EventTask.IDENTIFIER:"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"            String eventTaskDescription \u003d arr[3];"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"            task \u003d new EventTask(taskName, isTaskCompleted, eventTaskDescription);"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"        default:"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"            // Should not reach here"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"            throw new RuntimeException();"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"        return task;"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"     * Converts a list of tasks into a list of strings formatted to be stored in a file."},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Task list to be converted."},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"     * @return A list of formatted task strings."},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"    public static List\u003cString\u003e convertAllTasksToString(TaskList taskList) {"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d taskList.getTask(i);"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"            taskStrings.add(Storage.convertTaskToString(task));"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"        return taskStrings;"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"     * Converts a {@code Task} into a formatted task string."},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"     * String format: \"taskType | taskStatus | taskName\", with an additional \" | additionalInfo]\""},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"     * depending on the type of the task."},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"     * @param task Task object to be converted."},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted string describing the task."},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"    public static String convertTaskToString(Task task) {"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"        StringBuilder encodedTaskString \u003d new StringBuilder();"},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(task.getTaskType());"},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(\" | \");"},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(task.isDone() ? \"1\" : \"0\");"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(\" | \");"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(task.getName());"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"        switch (task.getTaskType()) {"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"        case DeadlineTask.IDENTIFIER:"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) task;"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \");"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(deadlineTask.getDeadline());"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"            return encodedTaskString.toString();"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"        case EventTask.IDENTIFIER:"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"            EventTask eventTask \u003d (EventTask) task;"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \");"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(eventTask.getEventTime());"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"            return encodedTaskString.toString();"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"        default:"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"            return encodedTaskString.toString();"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":203}},{"path":"src/main/java/popo/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an error writing to file."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class StorageException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public StorageException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/popo/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.utils.OutputDateTimeFormat;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Represents a task with a deadline."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate deadlineDate;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private final LocalTime deadlineTime;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date component,"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Fate component of deadline."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, LocalDate deadlineDate) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date and time components,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date component,"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted  Boolean indicating whether the task has been completed."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, boolean isCompleted, LocalDate deadlineDate) {"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date and time components,"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted  Boolean indicating whether the task has been completed."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, boolean isCompleted, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * Returns the deadline in a nicely formatted string."},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted deadline string."},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public String getDeadline() {"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        StringBuilder deadline \u003d new StringBuilder();"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        deadline.append(deadlineDate.format(OutputDateTimeFormat.OUTPUT_DATE_FORMAT));"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        if (deadlineTime !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"            deadline.append(\", \");"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            deadline.append(deadlineTime.format(OutputDateTimeFormat.OUTPUT_TIME_FORMAT));"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        return deadline.toString();"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() + \")\";"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":97}},{"path":"src/main/java/popo/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a task with an event time."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"E\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    private final String eventTime;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventTask} object with the given task name and event time,"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * @param name      Name of the task."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime String denoting the event time."},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public EventTask(String name, String eventTime) {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventTask} object with the given task name and event time,"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime   String denoting the event time."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public EventTask(String name, boolean isCompleted, String eventTime) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Returns the event time."},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * @return Event time."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    public String getEventTime() {"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        return eventTime;"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":54}},{"path":"src/main/java/popo/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    protected final String taskType;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    protected final String name;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    protected boolean isCompleted;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Constructor to create a {@code Task} object with the given task type and task name,"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * @param taskType Identifier of the task type."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     * @param name     Name of the task."},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public Task(String taskType, String name) {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        isCompleted \u003d false;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * Constructor to create a {@code Task} object with the given task type and task name,"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @param taskType    Identifier of the task type."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public Task(String taskType, String name, boolean isCompleted) {"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * Returns the name of the task."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * @return Name of the task."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public String getName() {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        return name;"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Returns the identifier of the type of task."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @return Identifier of task type."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public abstract String getTaskType();"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * Checks if the task is already completed."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * @return True if task is completed, else false."},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    public boolean isDone() {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        return isCompleted;"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * Marks a task as completed."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public void completeTask() {"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        isCompleted \u003d true;"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        return String.format(\"[%s] %s\", (isCompleted ? \"X\" : \" \"), name);"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":74}},{"path":"src/main/java/popo/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Represents a list of {@code Task}."},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * Checks if the list of tasks is empty."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * @return True if there are no tasks in the list, else false."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public boolean isEmpty() {"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        return taskList.isEmpty();"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     * Returns the number of tasks in the list of tasks."},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @return Number of tasks in task list."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public int size() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        return taskList.size();"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * @param task task to be added."},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public void addTask(Task task) {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        taskList.add(task);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * Deletes a task from the list of tasks."},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be removed in the list."},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public void deleteTask(int index) {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        taskList.remove(index);"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"     * Returns a task from the list of tasks according to the index specified."},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be retrieved."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     * @return {@code Task}."},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public Task getTask(int index) {"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        return taskList.get(index);"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * Marks a task in the list of tasks as completed."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be marked as completed."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public void completeTask(int index) {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        taskList.get(index).completeTask();"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        if (this \u003d\u003d obj) {"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"            return true;"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        if (!(obj instanceof TaskList)) {"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"            return false;"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        TaskList otherTaskList \u003d (TaskList) obj;"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        if (taskList !\u003d null \u0026\u0026 otherTaskList.taskList !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"            return taskList.equals(otherTaskList.taskList);"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        return taskList \u003d\u003d null \u0026\u0026 otherTaskList.taskList \u003d\u003d null;"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":86}},{"path":"src/main/java/popo/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a normal task."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"T\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoTask} object with the given task name,"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * @param name name of the task"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public ToDoTask(String name) {"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoTask} object with the given task name,"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public ToDoTask(String name, boolean isCompleted) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":39}},{"path":"src/main/java/popo/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":" * Represents a dialogue box containing an avatar icon and the text message."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"public class DialogBox extends HBox {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    private Label dialog;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    private ImageView displayPicture;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.load();"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            ex.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        Color backgroundColor \u003d Color.rgb(250, 200, 200, 0.9);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        CornerRadii cornerRadii \u003d new CornerRadii(5);"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        Insets insets \u003d new Insets(-4);"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(backgroundColor, cornerRadii, insets);"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        dialog.setBackground(background);"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        dialog.setText(text);"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        displayPicture.setImage(img);"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     * Creates a user dialogue box with the given user message text and the avatar icon."},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"     * @param text Text message."},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * @param img Avatar icon image."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DialogBox} representing a user command."},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        return new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * Creates a dialogue box with the given message text and the avatar icon."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @param text Text message."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     * @param img Avatar icon image."},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DialogBox} representing a reply."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    public static DialogBox getPopoDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        db.flip();"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        return db;"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    private void flip() {"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        Collections.reverse(tmp);"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":81}},{"path":"src/main/java/popo/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Insets;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import popo.commands.Command;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import popo.commands.CommandResult;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import popo.commands.InvalidCommandException;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import popo.commands.InvalidDescriptionException;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import popo.commands.NoDescriptionException;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import popo.parser.Parser;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import popo.storage.StorageException;"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":" * The Main Window. Provides the basic application layout."},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"public class MainWindow extends VBox {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    private Storage storage;"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private TaskList taskList;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    private Stage primaryStage;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    private VBox dialogContainer;"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    private TextField userInput;"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    private Button sendButton;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    private HBox bottomContainer;"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    private Image userImage;"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    private Image popoImage;"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Initializes the required components and sets up the avatar icons."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public void initialize() {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        userImage \u003d new Image(getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        popoImage \u003d new Image(getClass().getResourceAsStream(\"/images/popo.png\"));"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        // Set the scroll pane to automatically scroll down when the text reaches the bottom"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTPINK, CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        bottomContainer.setBackground(background);"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * Sets up the required components for the MainWindow."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     * @param storage {@code Storage} object that handles file operations."},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * @param taskList The loaded task list from storage."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     * @param primaryStage The primary stage of the application."},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    public void setComponents(Storage storage, TaskList taskList, Stage primaryStage) {"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        this.storage \u003d storage;"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        loadAdditionalConstraints();"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * Sets the size of the primary stage that show the application and"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     * adds the welcome message label."},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    public void loadAdditionalConstraints() {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        String welcomeMsg \u003d \"Hello! I\u0027m Popo, a personal assistant for managing task.\\nWhat can I do for you?\";"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        dialogContainer.getChildren().add(DialogBox.getPopoDialog(welcomeMsg, popoImage));"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setTitle(\"Popo\");"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setMinWidth(500.0);"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setMinHeight(400.0);"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    private void handleUserInput() {"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"                DialogBox.getPopoDialog(response, popoImage)"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        );"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        userInput.clear();"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"    private String getResponse(String input) {"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"            // Parse the user input into an executable command"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"            Command command \u003d new Parser().parseCommand(input);"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"            // Execute the command"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"            CommandResult commandResult \u003d executeCommand(command);"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"            // If the command is to exit the program"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"            if (commandResult.isExitingProgram()) {"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"                handleExit();"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"            // Update the cached task list and save it to file"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"            storage.saveTasksIfPresent(commandResult.getUpdatedTaskList());"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"            updateTaskListIfPresent(commandResult.getUpdatedTaskList());"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"            // Return the message for the user"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            return commandResult.getMessageForUser();"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidCommandException | StorageException | InvalidDescriptionException"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"                | NoDescriptionException ex) {"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"            return ex.getMessage();"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"     * Executes the command and return a CommandResult instance."},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"     * @param command User command."},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"     * @return Result command."},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"    private CommandResult executeCommand(Command command) {"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        command.setTaskList(taskList);"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"        return command.execute();"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"     * Updates the cached task list if it was modified by the previous command."},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Updated task list."},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"    private void updateTaskListIfPresent(TaskList taskList) {"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        if (taskList !\u003d null) {"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"            this.taskList \u003d taskList;"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"    private void handleExit() {"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        primaryStage.hide();"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"        System.exit(0);"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":152}},{"path":"src/main/java/popo/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.Main;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * Manages the UI component of the application."},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class Ui {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private final Storage storage;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Ui} object that handles the GUI."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param storage {@code Storage} object that handles file operations."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param taskList The loaded task list from storage."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public Ui(Storage storage, TaskList taskList) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.storage \u003d storage;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * Starts the GUI."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param primaryStage The primary stage of the application."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"            VBox vBox \u003d fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            Scene scene \u003d new Scene(vBox);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setComponents(storage, taskList, primaryStage);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/view/Styles.css\").toExternalForm());"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            primaryStage.setScene(scene);"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"            primaryStage.show();"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            ex.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":49}},{"path":"src/main/java/popo/utils/InputDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Specify the date time formats used as input."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class InputDateTimeFormat {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * User input date format, e.g. 23/1/2021"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/y\");"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * User input time format in 24-hour clock, e.g. 1800"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":18}},{"path":"src/main/java/popo/utils/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Container for messages to be shown to user."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EXIT \u003d \"Exiting...\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DONE_TASK \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_FOUND_TASKS \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_NO_MATCHES \u003d \"Sorry, there are no matching tasks in your list\";"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INDEX_TASK_FORMAT \u003d \"%d.%s\";"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_TASKLIST_SIZE_FORMAT \u003d \"Now you have %d tasks in your list.\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Please enter a valid index!\";"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EMPTY_TASKLIST \u003d \"You do not have anything to do at the moment!\";"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_SHOW_TASKLIST \u003d \"Here are the tasks in your list:\";"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_HELP \u003d \"Here are the list of available commands:\";"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"OOPS!!! The description of a task cannot be empty.\";"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_ENTER_COMMAND \u003d \"Please enter a command.\";"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_SYNTAX \u003d \"Invalid description syntax.\";"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_FOLLOW_USAGE \u003d \"Please follow the usage as shown below:\";"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Unable to parse date.\";"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_TIME_FORMAT \u003d \"Unable to parse time.\";"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INDICATE_TASK \u003d \"Please indicate a task number.\";"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"Please enter a valid task number\";"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_MISSING_SEARCH_WORD \u003d \"Please enter a search word or phrase!\";"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":35}},{"path":"src/main/java/popo/utils/OutputDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Specify the date time formats used as output."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class OutputDateTimeFormat {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Output date format, e.g. Jan 23 2021"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d y\");"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * Output time format, e.g. 7:33PM"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mma\");"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"10.0\""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"w2vgd":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"popo.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"                fitToWidth\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        \u003ccontent\u003e"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        \u003c/content\u003e"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    \u003cHBox fx:id\u003d\"bottomContainer\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" spacing\u003d\"2\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            \u003cInsets top\u003d\"2\" right\u003d\"2\" bottom\u003d\"2\" left\u003d\"2\"/\u003e"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" promptText\u003d\"Enter a command\""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                   HBox.hgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"                prefWidth\u003d\"70.0\" text\u003d\"Send\" HBox.hgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    \u003c/HBox\u003e"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"w2vgd":26}},{"path":"src/test/java/popo/commands/CommandResultTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class CommandResultTest {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void getMessageForUser_emptyMessage_success() {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new CommandResult(false).getMessageForUser());"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void getMessageForUser_nonEmptyMessage_success() {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Good\", new CommandResult(false, \"Good\").getMessageForUser());"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public void getUpdatedTaskList_nullTaskList_nullReturned() {"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertNull(new CommandResult(false).getUpdatedTaskList());"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public void getUpdatedTaskList_emptyTaskList_success() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        TaskListStub taskListStub \u003d new TaskListStub();"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertEquals(taskListStub, new CommandResult(taskListStub, false).getUpdatedTaskList());"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public void isExitingProgram_exiting_true() {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new CommandResult(true).isExitingProgram());"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public void isExitingProgram_notExiting_false() {"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new CommandResult(false).isExitingProgram());"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    public void equals() {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        CommandResult commandResult \u003d new CommandResult(false, \"Message: completed\");"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        assertTrue(commandResult.equals(new CommandResult(false, \"Message: completed\")));"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        assertFalse(commandResult.equals(new CommandResult(false, \"Message: not completed\")));"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assertFalse(commandResult.equals(new CommandResult(new TaskListStub(), false,"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"                \"Message: completed\")));"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertFalse(commandResult.equals(1));"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    class TaskListStub extends TaskList {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        private final List\u003cTask\u003e taskList;"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        public TaskListStub() {"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"            this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        @Override"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        public boolean equals(Object obj) {"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"            return this \u003d\u003d obj;"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":72}},{"path":"src/test/java/popo/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTaskTest {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Return Book\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private static final LocalDate DEADLINE_DATE \u003d LocalDate.parse(\"24/1/2021\","},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d/M/y\"));"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final LocalTime DEADLINE_TIME \u003d LocalTime.parse(\"1800\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021)\","},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, DEADLINE_DATE).toString());"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][X] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, true, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new DeadlineTask(\"\", DEADLINE_DATE, DEADLINE_TIME).getName());"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assertEquals(TASK_NAME, new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).getName());"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_deadlineTask_success() {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"D\", new DeadlineTask(\"\", DEADLINE_DATE, DEADLINE_TIME).getTaskType());"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new DeadlineTask(TASK_NAME, true, DEADLINE_DATE).isDone());"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new DeadlineTask(TASK_NAME, true, DEADLINE_DATE, DEADLINE_TIME).isDone());"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new DeadlineTask(TASK_NAME, false, DEADLINE_DATE).isDone());"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME).isDone());"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME);"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        deadlineTask.completeTask();"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        assertTrue(deadlineTask.isDone());"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public void getDeadline_deadlineTask_success() {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24 2021\", new DeadlineTask(TASK_NAME, DEADLINE_DATE).getDeadline());"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24 2021, 6:00PM\", new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).getDeadline());"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":71}},{"path":"src/test/java/popo/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class EventTaskTest {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Project Meeting\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private static final String EVENT_TIME \u003d \"Friday 2-4pm\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][ ] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, EVENT_TIME).toString());"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][ ] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, false, EVENT_TIME).toString());"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][X] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, true, EVENT_TIME).toString());"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new EventTask(\"\", EVENT_TIME).getName());"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Project Meeting\", new EventTask(TASK_NAME, EVENT_TIME).getName());"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_eventTask_success() {"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"E\", new EventTask(\"\", EVENT_TIME).getTaskType());"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new EventTask(TASK_NAME, true, EVENT_TIME).isDone());"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new EventTask(TASK_NAME, false, EVENT_TIME).isDone());"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        EventTask eventTask \u003d new EventTask(TASK_NAME, false, EVENT_TIME);"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        eventTask.completeTask();"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        assertTrue(eventTask.isDone());"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public void getEventTime_eventTask_success() {"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Friday 2-4pm\", new EventTask(TASK_NAME, EVENT_TIME).getEventTime());"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":59}},{"path":"src/test/java/popo/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class ToDoTaskTest {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Read Book\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][ ] Read Book\", new ToDoTask(TASK_NAME).toString());"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][ ] Read Book\", new ToDoTask(TASK_NAME, false).toString());"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][X] Read Book\", new ToDoTask(TASK_NAME, true).toString());"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new ToDoTask(\"\").getName());"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        assertEquals(TASK_NAME, new ToDoTask(TASK_NAME).getName());"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_toDoTask_success() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"T\", new ToDoTask(\"\").getTaskType());"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new ToDoTask(TASK_NAME, true).isDone());"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new ToDoTask(TASK_NAME, false).isDone());"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        ToDoTask toDoTask \u003d new ToDoTask(TASK_NAME, false);"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        toDoTask.completeTask();"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        assertTrue(toDoTask.isDone());"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"help"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"todo read book"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"deadline return book /by 24/1/2021 1800"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"event project meeting for cs2103t /at next friday 2-4pm"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"deadline"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1/2021,2401"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1/2021,1400"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"done "},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"done read book"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"done 100"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"done 4"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"blah"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"delete"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"delete 2"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"delete 3"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"deadline book review /by 31/1/2021, 2359"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"find book"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"find read book"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"find random"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"bye"}],"authorContributionMap":{"w2vgd":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\popo\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"java -classpath ..\\bin popo.Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"w2vgd":2}}]
