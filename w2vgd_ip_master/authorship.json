[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public enum Command {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    BYE, "},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    LIST, "},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"    DONE, "},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    DELETE, "},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"    TODO, "},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    DEADLINE, "},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    EVENT,"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    HELP"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    private String deadline;"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, String deadline) {"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"    private final Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    private final List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"    private State state;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public Duke() {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        this.state \u003d State.ONLINE;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public void run() {"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"        // Print greeting"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        printGreeting();"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        // Run infinite loop asking for user command until user enter exit command"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        runLoop();"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        // Print exit message"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        printExitMessage();"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    private void runLoop() {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        while (isOnline()) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"                printHorizontalLine();"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"                Command command \u003d Parser.parseCommand(sc.next());"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"                String arguments \u003d sc.nextLine();"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"                executeCommand(command, arguments);"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            } catch (InvalidCommandException ex) {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"                printHorizontalLine();"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"                System.out.println(ex.getMessage());"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    private boolean isOnline() {"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        return this.state \u003d\u003d State.ONLINE;"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    private void off() {"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        this.state \u003d State.OFF;"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    private void printGreeting() {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        printHorizontalLine();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Hello! I\u0027m\");"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        System.out.println(logo);"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    private void printExitMessage() {"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        printHorizontalLine();"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    private void printHorizontalLine() {"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 0; i \u003c 60; i++) {"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"            System.out.print(\u0027-\u0027);"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    private void executeCommand(Command command, String arguments) {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            printHorizontalLine();"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"            switch (command) {"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"                case BYE:"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"                    off();"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"                case LIST:"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"                    printAllTasks();"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"                case DONE:"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"                    markTaskAsDone(arguments);"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"                case TODO:"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"                case DEADLINE:"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"                case EVENT:"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"                    createTask(command, arguments);"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"                case DELETE:"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"                    deleteTask(arguments);"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"                case HELP:"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"                    printHelp();"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"                    break;"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        } catch (NoDescriptionException | InvalidDescriptionException ex) {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            System.out.println(ex.getMessage());"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    private void printAllTasks() {"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        if (database.isEmpty()) {"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"            System.out.println(\"You do not have anything to do at the moment!\");"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"            for (int i \u003d 1; i \u003c\u003d database.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"                System.out.printf(\"%d.%s\\n\", i, database.get(i - 1).toString());"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"    private void createTask(Command taskType, String taskDescription) throws NoDescriptionException {"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"        if (taskDescription.isBlank()) {"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(\"OOPS!!! The description of a task cannot be empty.\");"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        Task task \u003d null;"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"        switch (taskType) {"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"            case TODO:"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"                task \u003d createToDoTask(taskDescription.strip());"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            case DEADLINE:"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"                task \u003d createDeadlineTask(taskDescription.strip());"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"            case EVENT:"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"                task \u003d createEventTask(taskDescription.strip());"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        if (task !\u003d null) {"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"            addTask(task);"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"    private Task createToDoTask(String taskDescription) {"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        return new ToDoTask(taskDescription);"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"    private Task createDeadlineTask(String taskDescription) {"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        String[] deadlineInputArr \u003d taskDescription.split(\"/by\");"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"        String deadlineTaskName \u003d deadlineInputArr[0].strip();"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        String deadline \u003d deadlineInputArr[1].strip();"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"        return new DeadlineTask(deadlineTaskName, deadline);"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"    private Task createEventTask(String taskDescription) {"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        String[] eventInputArr \u003d taskDescription.split(\"/at\");"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"        String eventTaskName \u003d eventInputArr[0].strip();"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"        String eventTime \u003d eventInputArr[1].strip();"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"        return new EventTask(eventTaskName, eventTime);"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"    private void markTaskAsDone(String arguments) throws NoDescriptionException, "},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(\"Please indicate a task number to be marked as done.\");"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1;  // Account for 0-based indexing"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d database.get(index);"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"            task.completeTask();"},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"            printMarkedAsDoneMessage(task);"},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(\"Please enter a valid task number\");"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(\"Please enter a valid index!\");"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"    private void printMarkedAsDoneMessage(Task task) {"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"        System.out.printf(\"  [X] %s\\n\", task.getName());"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"    private void addTask(Task task) {"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"        database.add(task);"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"        printAddedMessage(task);"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"    private void printAddedMessage(Task task) {"},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"        System.out.printf(\"Now you have %d tasks in your list.\\n\", database.size());"},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"    private void deleteTask(String arguments) throws NoDescriptionException, "},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(\"Please indicate a task number to be deleted.\");"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1;  // Account for 0-based indexing"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d database.get(index);"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"            database.remove(index);"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"            printDeletedMessage(task);"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(\"Please enter a valid task number\");"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(\"Please enter a valid index!\");"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"    private void printDeletedMessage(Task task) {"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"  \" + task.toString());"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"        System.out.printf(\"Now you have %d tasks in your list.\\n\", database.size());"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"    private void printHelp() {"},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"Here are the list of available commands:\");"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"BYE:\\nExit the program\\nUsage: \u0027bye\u0027\");"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"LIST:\\nPrint the list of current tasks\\nUsage: \u0027list\u0027\");"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"DONE:\\nMark a task as completed\\nUsage: \u0027done \u003ctask_number\u003e\u0027\");"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"DELETE:\\nDelete a task\\nUsage: \u0027delete \u003ctask_number\u003e\u0027\");"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"TODO:\\nAdd a todo task\\nUsage: \u0027todo \u003ctask_description\u003e\u0027\");"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"DEADLINE:\\nAdd a deadline task\\nUsage: \u0027deadline \u003ctask_description\u003e /by \u003cdeadline\u003e\u0027\");"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"EVENT:\\nAdd an event task\\nUsage: \u0027event \u003ctask_description\u003e /at \u003cevent_time\u003e\u0027\");"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"        System.out.println();"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"        System.out.println(\"HELP:\\nPrint available commands\\nUsage: \u0027help\u0027\");"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":215,"-":8}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class EventTask extends Task {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    private String eventTime;"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"    public EventTask(String name, String eventTime) {"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":13}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":6}},{"path":"src/main/java/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class InvalidDescriptionException extends Exception {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public InvalidDescriptionException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":6}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class Main {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public static void main(String[] args) {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        Duke chatbot \u003d new Duke();"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"        chatbot.run();"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"}"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""}],"authorContributionMap":{"w2vgd":8}},{"path":"src/main/java/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class NoDescriptionException extends Exception {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public NoDescriptionException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":6}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public static Command parseCommand(String userInputCommand) throws InvalidCommandException {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"            return Command.valueOf(userInputCommand.toUpperCase());"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/State.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public enum State {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    ONLINE, OFF;"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":3}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"    private String name;"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    private boolean isCompleted;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    "},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public String getName() {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"        return name;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        return isCompleted;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void completeTask() {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        String str \u003d String.format(\"[%s] %s\", (isCompleted ? \"X\" : \" \"), name);"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        return str;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":27}},{"path":"src/main/java/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"public class ToDoTask extends Task {"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"    public ToDoTask(String name) {"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"        super(name);"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"deadline return book /by Sunday, 24th Jan"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"event project meeting for cs2103t /at next friday 2-4pm"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"deadline"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"deadline cs2103t luminus quiz 2 /by friday 2pm"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"done "},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"done read book"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"done 100"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"done 4"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"blah"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"delete read book"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"delete 2"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"delete 3"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"bye"}],"authorContributionMap":{"w2vgd":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"w2vgd":1}}]
