[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nicholastanvis":14,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"### Terminate Application"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"### List Tasks"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"### Add Tasks (To-do, Event, Deadline)"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"### Delete Tasks"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"### Complete Tasks"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"### Find Tasks"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"### `bye`"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"Terminate the application"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"### `list`"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"List all the tasks in the task list."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"Example of usage:"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"`list`"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"Sonia: Here are your tasks!"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"  1. [X] Todo: start doing iP"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"  2. [ ] Deadline: this iP by 19 Feb 2021"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"  3. [ ] Event: midterms at 06 Mar 2021"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"### `todo NAME`"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"Add a to-do into the task list."},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"Example of usage:"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"`todo do homework`"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"Sonia: I have added the task to the task list!"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"### `event NAME /at DATE`"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"Add an event into the task list."},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"Example of usage:"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"`event someone\u0027s wedding /at 2021-06-09`"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"Sonia: I have added the task to the task list!"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"### `deadline NAME /by DATE`"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"Add a deadline into the task list"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"`deadline this iP /by 2021-02-19`"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"Expected outcome:"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"I have added the task to the task list!"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"### `delete INDEX`"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"Delete the task specified by the index."},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"Example of usage:"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"`delete 1`"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"I have deleted that task from the task list!"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"### `find QUERY`"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"Find the tasks that match the search query."},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":"Example of usage:"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"`find iP`"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"```"},{"lineNumber":90,"author":{"gitId":"nicholastanvis"},"content":"Sonia: Here are your tasks!"},{"lineNumber":91,"author":{"gitId":"nicholastanvis"},"content":"  1. [X] Todo: start doing iP"},{"lineNumber":92,"author":{"gitId":"nicholastanvis"},"content":"  2. [ ] Deadline: this iP by 19 Feb 2021"},{"lineNumber":93,"author":{"gitId":"nicholastanvis"},"content":"```"}],"authorContributionMap":{"nicholastanvis":74,"-":19}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"/** Describes what a command does based on its CommandType. */"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"public class Command {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    public CommandType type;"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    public ArrayList\u003cString\u003e args;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Command object that takes no arguments."},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"     * @param t The command type"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"    public Command(CommandType t) {"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"        type \u003d t;"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"        args \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Command object that takes an argument."},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     * @param t The command type"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"     * @param xs The only argument that the command takes"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    public Command(CommandType t, String xs) {"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        type \u003d t;"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        args \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        args.add(xs);"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Command object that takes two arguments."},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"     * @param t The command type"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"     * @param xs The first argument that the command takes"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"     * @param ys The second argument that the command takes"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"    public Command(CommandType t, String xs, String ys) {"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"        type \u003d t;"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"        args \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"        args.add(xs);"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"        args.add(ys);"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":43}},{"path":"src/main/java/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Describes every possible type of a command. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"public enum CommandType {"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"    ADD_TODO,"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    ADD_EVENT,"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    ADD_DEADLINE,"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    COMPLETE_TASK,"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"    DELETE_TASK,"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    FIND_TASKS,"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"    LIST_TASKS,"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"    TERMINATE,"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    UNKNOWN"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":12}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the \"deadline\" variation of the Task class. */"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    private LocalDate timestamp;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Deadline object that takes in two arguments."},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"     * @param n The name of the task"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"     * @param t The string representation of the timestamp"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    public Deadline(String n, String t) {"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"        isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"        name \u003d n;"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"        timestamp \u003d LocalDate.parse(t);"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     * Returns the string representation of the task for storage purposes."},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"     * @return the string representation"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    public String toText() {"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        String d \u003d isDone ? \"+\" : \"-\";"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        return String.format(\"D | %1$s | %2$s | %3$s\", d, name, timestamp);"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"        var df \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"        String t \u003d timestamp.format(df);"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"        return (isDone ? \"[X]\" : \"[ ]\")"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"            + \" Deadline: \""},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"            + name"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"            + \" by \""},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"            + t;"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":39}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import javafx.geometry.Pos;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.control.Label;"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.text.Font;"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.text.FontPosture;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.text.FontWeight;"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    private Label text;"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"    private ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"        displayPicture \u003d iv;"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"        text \u003d l;"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"        text.setFont(Font.font("},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"                \"Arial\","},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"                FontWeight.BLACK,"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"                FontPosture.REGULAR,"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"                24"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"        ));"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"        text.setWrapText(true);"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        this.getChildren().addAll(displayPicture, text);"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"import java.util.ArrayList;"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the main class. */"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"public class Duke extends Application {"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"    private Scene scene;"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    private Storage storage;"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"    private TaskList tasks;"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"    private Ui ui;"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    private Image sparkling \u003d new Image(this.getClass().getResourceAsStream(\"/images/Sparkling.png\"));"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    public void start(Stage stage) {"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"        userInput \u003d new TextField();"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        stage.setScene(scene);"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"        stage.show();"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"        stage.setTitle(\"Sonia\");"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"        stage.setResizable(false);"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"        stage.setMinWidth(750.0);"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"        mainLayout.setPrefSize(750.0, 600.0);"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setPrefSize(735, 535);"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"        dialogContainer.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"        userInput.setPrefWidth(735.0);"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"            userInput.clear();"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"        });"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"            userInput.clear();"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"        });"},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"            handleUserInput();"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"        });"},{"lineNumber":88,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":90,"author":{"gitId":"nicholastanvis"},"content":"            handleUserInput();"},{"lineNumber":91,"author":{"gitId":"nicholastanvis"},"content":"        });"},{"lineNumber":92,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":93,"author":{"gitId":"nicholastanvis"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":94,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":96,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"nicholastanvis"},"content":"     * Iteration 1:"},{"lineNumber":98,"author":{"gitId":"nicholastanvis"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":99,"author":{"gitId":"nicholastanvis"},"content":"     * @param text String containing text to add"},{"lineNumber":100,"author":{"gitId":"nicholastanvis"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":101,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"nicholastanvis"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":103,"author":{"gitId":"nicholastanvis"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":104,"author":{"gitId":"nicholastanvis"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":105,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":106,"author":{"gitId":"nicholastanvis"},"content":"        return textToAdd;"},{"lineNumber":107,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":109,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"nicholastanvis"},"content":"     * Iteration 2:"},{"lineNumber":111,"author":{"gitId":"nicholastanvis"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":112,"author":{"gitId":"nicholastanvis"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":113,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"nicholastanvis"},"content":"    private void handleUserInput() {"},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"        String[] inputs \u003d userInput.getText().split(\" \");"},{"lineNumber":116,"author":{"gitId":"nicholastanvis"},"content":"        Command c \u003d Parser.parse(inputs);"},{"lineNumber":117,"author":{"gitId":"nicholastanvis"},"content":"        String response \u003d this.executeCommand(c);"},{"lineNumber":118,"author":{"gitId":"nicholastanvis"},"content":"        Label responseText \u003d new Label(response);"},{"lineNumber":119,"author":{"gitId":"nicholastanvis"},"content":"        responseText.setWrapText(true);"},{"lineNumber":120,"author":{"gitId":"nicholastanvis"},"content":"        dialogContainer.getChildren().add(new DialogBox(responseText, new ImageView(sparkling)));"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"        userInput.clear();"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"    public Duke() {"},{"lineNumber":128,"author":{"gitId":"nicholastanvis"},"content":"        this(\"./data.txt\");"},{"lineNumber":129,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Duke object that takes in a file path."},{"lineNumber":132,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"nicholastanvis"},"content":"     * @param path The path to the storage file"},{"lineNumber":134,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"nicholastanvis"},"content":"    public Duke(String path) {"},{"lineNumber":136,"author":{"gitId":"nicholastanvis"},"content":"        storage \u003d new Storage(path);"},{"lineNumber":137,"author":{"gitId":"nicholastanvis"},"content":"        ui \u003d new Ui(\"Sonia\");"},{"lineNumber":138,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":139,"author":{"gitId":"nicholastanvis"},"content":"        try {"},{"lineNumber":140,"author":{"gitId":"nicholastanvis"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":141,"author":{"gitId":"nicholastanvis"},"content":"        } catch (Exception e) {"},{"lineNumber":142,"author":{"gitId":"nicholastanvis"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":143,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":146,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"nicholastanvis"},"content":"     * Executes the given command."},{"lineNumber":148,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"nicholastanvis"},"content":"     * @param c The command object"},{"lineNumber":150,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"nicholastanvis"},"content":"    public String executeCommand(Command c) {"},{"lineNumber":152,"author":{"gitId":"nicholastanvis"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"nicholastanvis"},"content":"            if (c.type \u003d\u003d CommandType.ADD_TODO) {"},{"lineNumber":154,"author":{"gitId":"nicholastanvis"},"content":"                if (c.args.size() !\u003d 1) {"},{"lineNumber":155,"author":{"gitId":"nicholastanvis"},"content":"                    throw new DukeInvalidArgumentException();"},{"lineNumber":156,"author":{"gitId":"nicholastanvis"},"content":"                }"},{"lineNumber":157,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":158,"author":{"gitId":"nicholastanvis"},"content":"                tasks.addTodo(c.args.get(0));"},{"lineNumber":159,"author":{"gitId":"nicholastanvis"},"content":"                return ui.echo(ui.ADD_TASK);"},{"lineNumber":160,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.ADD_DEADLINE) {"},{"lineNumber":161,"author":{"gitId":"nicholastanvis"},"content":"                if (c.args.size() !\u003d 2) {"},{"lineNumber":162,"author":{"gitId":"nicholastanvis"},"content":"                    throw new DukeInvalidArgumentException();"},{"lineNumber":163,"author":{"gitId":"nicholastanvis"},"content":"                }"},{"lineNumber":164,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":165,"author":{"gitId":"nicholastanvis"},"content":"                tasks.addDeadline(c.args.get(0), c.args.get(1));"},{"lineNumber":166,"author":{"gitId":"nicholastanvis"},"content":"                return ui.echo(ui.ADD_TASK);"},{"lineNumber":167,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.ADD_EVENT) {"},{"lineNumber":168,"author":{"gitId":"nicholastanvis"},"content":"                if (c.args.size() !\u003d 2) {"},{"lineNumber":169,"author":{"gitId":"nicholastanvis"},"content":"                    throw new DukeInvalidArgumentException();"},{"lineNumber":170,"author":{"gitId":"nicholastanvis"},"content":"                }"},{"lineNumber":171,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":172,"author":{"gitId":"nicholastanvis"},"content":"                tasks.addEvent(c.args.get(0), c.args.get(1));"},{"lineNumber":173,"author":{"gitId":"nicholastanvis"},"content":"                return ui.echo(ui.ADD_TASK);"},{"lineNumber":174,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.COMPLETE_TASK) {"},{"lineNumber":175,"author":{"gitId":"nicholastanvis"},"content":"                int id \u003d Integer.parseInt(c.args.get(0));"},{"lineNumber":176,"author":{"gitId":"nicholastanvis"},"content":"                tasks.completeTask(id);"},{"lineNumber":177,"author":{"gitId":"nicholastanvis"},"content":"                return ui.echo(ui.COMPLETE_TASK);"},{"lineNumber":178,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.DELETE_TASK) {"},{"lineNumber":179,"author":{"gitId":"nicholastanvis"},"content":"                int id \u003d Integer.parseInt(c.args.get(0));"},{"lineNumber":180,"author":{"gitId":"nicholastanvis"},"content":"                tasks.deleteTask(id);"},{"lineNumber":181,"author":{"gitId":"nicholastanvis"},"content":"                return ui.echo(ui.DELETE_TASK);"},{"lineNumber":182,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.FIND_TASKS) {"},{"lineNumber":183,"author":{"gitId":"nicholastanvis"},"content":"                return tasks.findTasks(c.args.get(0));"},{"lineNumber":184,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.LIST_TASKS) {"},{"lineNumber":185,"author":{"gitId":"nicholastanvis"},"content":"                return tasks.showTasks();"},{"lineNumber":186,"author":{"gitId":"nicholastanvis"},"content":"            } else if (c.type \u003d\u003d CommandType.TERMINATE) {"},{"lineNumber":187,"author":{"gitId":"nicholastanvis"},"content":"                this.terminate();"},{"lineNumber":188,"author":{"gitId":"nicholastanvis"},"content":"            } else {"},{"lineNumber":189,"author":{"gitId":"nicholastanvis"},"content":"                throw new DukeInvalidCommandException();"},{"lineNumber":190,"author":{"gitId":"nicholastanvis"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"nicholastanvis"},"content":"        } catch (DukeInvalidArgumentException e) {"},{"lineNumber":192,"author":{"gitId":"nicholastanvis"},"content":"            return ui.echo(ui.INVALID_ARGUMENT);"},{"lineNumber":193,"author":{"gitId":"nicholastanvis"},"content":"        } catch (DukeInvalidCommandException e) {"},{"lineNumber":194,"author":{"gitId":"nicholastanvis"},"content":"            return ui.echo(ui.INVALID_COMMAND);"},{"lineNumber":195,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"nicholastanvis"},"content":"        return \"\";"},{"lineNumber":197,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":199,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"nicholastanvis"},"content":"     * Immediately stops the program."},{"lineNumber":201,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"nicholastanvis"},"content":"    public void terminate() {"},{"lineNumber":203,"author":{"gitId":"nicholastanvis"},"content":"        storage.save(tasks);"},{"lineNumber":204,"author":{"gitId":"nicholastanvis"},"content":"        System.exit(0);"},{"lineNumber":205,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":207,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"nicholastanvis"},"content":"     * The starting point of the class"},{"lineNumber":209,"author":{"gitId":"nicholastanvis"},"content":"     * @param args Default arguments supplied"},{"lineNumber":210,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":212,"author":{"gitId":"nicholastanvis"},"content":"        Duke sonia \u003d new Duke(\"./data.txt\");"},{"lineNumber":213,"author":{"gitId":"nicholastanvis"},"content":"        sonia.ui.greeting();"},{"lineNumber":214,"author":{"gitId":"nicholastanvis"},"content":"        System.out.print(\"You: \");"},{"lineNumber":215,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":216,"author":{"gitId":"nicholastanvis"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":217,"author":{"gitId":"nicholastanvis"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":218,"author":{"gitId":"nicholastanvis"},"content":"            Command c \u003d sonia.ui.prompt(sc);"},{"lineNumber":219,"author":{"gitId":"nicholastanvis"},"content":"            sonia.executeCommand(c);"},{"lineNumber":220,"author":{"gitId":"nicholastanvis"},"content":"            System.out.print(\"You: \");"},{"lineNumber":221,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":222,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nicholastanvis":221,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Describes all possibles exceptions from Duke. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"public class DukeException extends Exception {}"}],"authorContributionMap":{"nicholastanvis":2}},{"path":"src/main/java/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Inherits DukeException to describe invalid arguments. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"public class DukeInvalidArgumentException extends DukeException {"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"        return \"Sorry, you have supplied invalid arguments!\";"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":7}},{"path":"src/main/java/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Inherits DukeException to describe invalid commands. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"public class DukeInvalidCommandException extends DukeException {"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"        return \"Sorry, I don\u0027t understand the command!\";"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the \"event\" variation of the Task class. */"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    private LocalDate timestamp;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     * Returns an Event object that takes in two arguments."},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"     * @param n The name of the task"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"     * @param t The string representation of the timestamp"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    public Event(String n, String t) {"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"        isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"        name \u003d n;"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"        timestamp \u003d LocalDate.parse(t);"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     * Returns the string representation of the task for storage purposes."},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"     * @return the string representation"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    public String toText() {"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        String d \u003d isDone ? \"+\" : \"-\";"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        return String.format(\"E | %1$s | %2$s | %3$s\", d, name, timestamp);"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"        var df \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"        String t \u003d timestamp.format(df);"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"        return (isDone ? \"[X]\" : \"[ ]\")"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"            + \" Event: \""},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"            + name"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"            + \" at \""},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"            + t;"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":39}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"/** Parses the user inputs and returns Command objects. */"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"     * Begins parsing the input tokens."},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"     * @param input User input split by spaces"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     * @return The Command object to be executed"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    public static Command parse(String[] input) {"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"        assert input.length \u003e 0;"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"        String command \u003d input[0];"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"        String[] args \u003d Arrays.copyOfRange(input, 1, input.length);"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.TERMINATE);"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.LIST_TASKS);"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.COMPLETE_TASK, args[0]);"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"find\")) {"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"            String xs \u003d String.join(\" \", args);"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.FIND_TASKS, xs);"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"todo\")) {"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"            String xs \u003d String.join(\" \", args);"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.ADD_TODO, xs);"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"            String xs \u003d String.join(\" \", args);"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"            args \u003d xs.split(\" /by \");"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.ADD_DEADLINE, args[0], args[1]);"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"            String xs \u003d String.join(\" \", args);"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"            args \u003d xs.split(\" /at \");"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.ADD_EVENT, args[0], args[1]);"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.DELETE_TASK, args[0]);"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"            return new Command(CommandType.UNKNOWN);"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":42}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the class that handles file I/O. */"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"    private String path;"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Storage object that takes in an argument."},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"     * @param p The path to the storage file"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    public Storage(String p) {"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"        path \u003d p;"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"    private void ensureFileExists() {"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"        File file \u003d new File(path);"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"        if (file.exists()) {"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"            return;"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"            file.createNewFile();"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"    private Task fromText(String str) {"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"        String[] xs \u003d str.split(\" \\\\| \");"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"        Task t;"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"        if (xs[0].equals(\"T\")) {"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"            t \u003d new Todo(xs[2]);"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"        } else if (xs[0].equals(\"D\")) {"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"            t \u003d new Deadline(xs[2], xs[3]);"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"            t \u003d new Event(xs[2], xs[3]);"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":"        if (xs[1].equals(\"+\")) t.markAsDone();"},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"        return t;"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"     * Loads from the storage file"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"     * @return An ArrayList of the Task objects"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"    public ArrayList\u003cTask\u003e load() {"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"            File file \u003d new File(path);"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":"            Scanner reader \u003d new Scanner(file);"},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":"                tasks.add(fromText(reader.nextLine()));"},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"            return tasks;"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"     * Saves to the storage file"},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":"     * @param xs The TaskList object"},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":"    public void save(TaskList xs) {"},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"        this.ensureFileExists();"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"            PrintWriter writer \u003d new PrintWriter(path);"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"            for (Task t : xs.data) {"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"                writer.println(t.toText());"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":"            writer.close();"},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Describes generic Task objects. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"abstract public class Task {"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"    protected String name;"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    public abstract String toText();"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     * Marks the task as done."},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    public void markAsDone() {"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"        isDone \u003d true;"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":14}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"/** Describes a wrapper to perform on Task objects. */"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    public ArrayList\u003cTask\u003e data;"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a TaskList object."},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"     * @param xs The ArrayList of tasks"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"    public TaskList(ArrayList\u003cTask\u003e xs) {"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"        data \u003d xs;"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"     * Adds Todo objects to the task list."},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"     * @param name The name of the todo"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"     * @throws DukeInvalidArgumentException"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    public void addTodo(String name) throws DukeInvalidArgumentException {"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"        if (name.length() \u003d\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"            throw new DukeInvalidArgumentException();"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        Task t \u003d new Todo(name);"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"        if (!hasDuplicates(t)) data.add(t);"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":"     * Adds Deadline objects to the task list."},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"     * @param name The name of the deadline"},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"     * @param timestamp The string representation of the timestamp"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"     * @throws DukeInvalidArgumentException"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"    public void addDeadline(String name, String timestamp) throws DukeInvalidArgumentException {"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":"        if (name.length() * timestamp.length() \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"            throw new DukeInvalidArgumentException();"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"        Task t \u003d new Deadline(name, timestamp);"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        if (!hasDuplicates(t)) data.add(t);"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"     * Adds Event objects to the task list."},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"     * @param name The name of the event"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"     * @param timestamp The string representation of the timestamp"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"     * @throws DukeInvalidArgumentException"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"    public void addEvent(String name, String timestamp) throws DukeInvalidArgumentException {"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"        if (name.length() * timestamp.length() \u003d\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"            throw new DukeInvalidArgumentException();"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":59,"author":{"gitId":"nicholastanvis"},"content":"        Task t \u003d new Event(name, timestamp);"},{"lineNumber":60,"author":{"gitId":"nicholastanvis"},"content":"        if (!hasDuplicates(t)) data.add(t);"},{"lineNumber":61,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":63,"author":{"gitId":"nicholastanvis"},"content":"    public boolean hasDuplicates(Task t) {"},{"lineNumber":64,"author":{"gitId":"nicholastanvis"},"content":"        for (var d : data) {"},{"lineNumber":65,"author":{"gitId":"nicholastanvis"},"content":"            if (d.toText().equals(t.toText())) return true;"},{"lineNumber":66,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":68,"author":{"gitId":"nicholastanvis"},"content":"        return false;"},{"lineNumber":69,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":71,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"nicholastanvis"},"content":"     * Marks a task as complete."},{"lineNumber":73,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"nicholastanvis"},"content":"     * @param id The id of the task in the task list"},{"lineNumber":75,"author":{"gitId":"nicholastanvis"},"content":"     * @throws DukeInvalidArgumentException"},{"lineNumber":76,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"nicholastanvis"},"content":"    public void completeTask(int id) throws DukeInvalidArgumentException {"},{"lineNumber":78,"author":{"gitId":"nicholastanvis"},"content":"        if (id \u003e data.size()) throw new DukeInvalidArgumentException();"},{"lineNumber":79,"author":{"gitId":"nicholastanvis"},"content":"        Task t \u003d data.get(id - 1);"},{"lineNumber":80,"author":{"gitId":"nicholastanvis"},"content":"        t.markAsDone();"},{"lineNumber":81,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":83,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"nicholastanvis"},"content":"     * Deletes a task from the task list."},{"lineNumber":85,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"nicholastanvis"},"content":"     * @param id The id of the task in the task list"},{"lineNumber":87,"author":{"gitId":"nicholastanvis"},"content":"     * @throws DukeInvalidArgumentException"},{"lineNumber":88,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"nicholastanvis"},"content":"    public void deleteTask(int id) throws DukeInvalidArgumentException {"},{"lineNumber":90,"author":{"gitId":"nicholastanvis"},"content":"        if (id \u003e data.size()) throw new DukeInvalidArgumentException();"},{"lineNumber":91,"author":{"gitId":"nicholastanvis"},"content":"        data.remove(id - 1);"},{"lineNumber":92,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":94,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"nicholastanvis"},"content":"     * Prints all the tasks in the task list matching the search keyword."},{"lineNumber":96,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"nicholastanvis"},"content":"    public String findTasks(String keyword) {"},{"lineNumber":98,"author":{"gitId":"nicholastanvis"},"content":"        String response \u003d \"Sonia: Here are your tasks!\\n\";"},{"lineNumber":99,"author":{"gitId":"nicholastanvis"},"content":"        if (data.size() \u003e 0){"},{"lineNumber":100,"author":{"gitId":"nicholastanvis"},"content":"            for (int i \u003d 1; i \u003c\u003d data.size(); i++) {"},{"lineNumber":101,"author":{"gitId":"nicholastanvis"},"content":"                Task t \u003d data.get(i - 1);"},{"lineNumber":102,"author":{"gitId":"nicholastanvis"},"content":"                if (t.name.contains(keyword)) {"},{"lineNumber":103,"author":{"gitId":"nicholastanvis"},"content":"                    response +\u003d \"   \" + i + \": \" + t + \"\\n\";"},{"lineNumber":104,"author":{"gitId":"nicholastanvis"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"nicholastanvis"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"nicholastanvis"},"content":"        } else {"},{"lineNumber":107,"author":{"gitId":"nicholastanvis"},"content":"            response \u003d \"   Looks like you haven\u0027t added any tasks.\";"},{"lineNumber":108,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":110,"author":{"gitId":"nicholastanvis"},"content":"        return response.substring(0, response.length() - 1);"},{"lineNumber":111,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":113,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"nicholastanvis"},"content":"     * Prints all the tasks in the task list."},{"lineNumber":115,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"nicholastanvis"},"content":"    public String showTasks() {"},{"lineNumber":117,"author":{"gitId":"nicholastanvis"},"content":"        String response \u003d \"Sonia: Here are your tasks!\\n\";"},{"lineNumber":118,"author":{"gitId":"nicholastanvis"},"content":"        if (data.size() \u003e 0) {"},{"lineNumber":119,"author":{"gitId":"nicholastanvis"},"content":"            for (int i \u003d 1; i \u003c\u003d data.size(); i++) {"},{"lineNumber":120,"author":{"gitId":"nicholastanvis"},"content":"                response +\u003d \"   \" + i + \": \" + data.get(i - 1) + \"\\n\";"},{"lineNumber":121,"author":{"gitId":"nicholastanvis"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"nicholastanvis"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"nicholastanvis"},"content":"            response \u003d \"   Looks like you haven\u0027t added any tasks.\";"},{"lineNumber":124,"author":{"gitId":"nicholastanvis"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":126,"author":{"gitId":"nicholastanvis"},"content":"        return response.substring(0, response.length() - 1);"},{"lineNumber":127,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":128}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the \"to-do\" variation of the Task class. */"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"public class Todo extends Task {"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a Todo object that takes in one argument"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"     * @param n The name of the task"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    public Todo(String n) {"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"        isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"        name \u003d n;"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"     * Returns the string representation of the task for storage purposes."},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"     * @return the string representation"},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    public String toText() {"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"        String d \u003d isDone ? \"+\" : \"-\";"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"        return String.format(\"T | %1$s | %2$s\", d, name);"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"        return (isDone ? \"[X]\" : \"[ ]\")"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"             + \" Todo: \""},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"             + name;"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":28}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"/** Describes the wrapper class for handling UI. */"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"    public final String INVALID_ARGUMENT \u003d \"Sorry, you have supplied invalid arguments.\";"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"    public final String INVALID_COMMAND \u003d \"Sorry, I don\u0027t understand the command.\";"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"    public final String ADD_TASK \u003d \"I have added the task to the task list!\";"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"    public final String SHOW_TASKS \u003d \"Here are your tasks!\";"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"    public final String COMPLETE_TASK \u003d \"I have marked that task as done!\";"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"    public final String DELETE_TASK \u003d \"I have deleted that task from the task list!\";"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    public final String FIND_TASKS \u003d \"Finding tasks that match your search keyword...\";"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"    private String name;"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":"     * Returns a UI object with a customised name."},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"     * @param n The name of the Duke object used in conversation"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"    public Ui(String n) {"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"        name \u003d n;"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"     * Prints the message supplied with the name prepended."},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"     * @param message The message to echo"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    public String echo(String message) {"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"        assert message.length() \u003e 0;"},{"lineNumber":30,"author":{"gitId":"nicholastanvis"},"content":"        return name + \": \" + message;"},{"lineNumber":31,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":33,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"nicholastanvis"},"content":"     * Greets by echoing the greeting message."},{"lineNumber":35,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"nicholastanvis"},"content":"    public String greeting() {"},{"lineNumber":37,"author":{"gitId":"nicholastanvis"},"content":"        return this.echo(\"Hi, I am \" + name + \"! How can I help you?\");"},{"lineNumber":38,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":40,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"nicholastanvis"},"content":"     * Says goodbye by echoing the closing message."},{"lineNumber":42,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"nicholastanvis"},"content":"    public String closing() {"},{"lineNumber":44,"author":{"gitId":"nicholastanvis"},"content":"        return this.echo(\"Goodbye!\");"},{"lineNumber":45,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":47,"author":{"gitId":"nicholastanvis"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"nicholastanvis"},"content":"     * Prompts the user and scans the input to pass to the parser."},{"lineNumber":49,"author":{"gitId":"nicholastanvis"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"nicholastanvis"},"content":"     * @param sc The Scanner object to read user input"},{"lineNumber":51,"author":{"gitId":"nicholastanvis"},"content":"     * @return A Command object from the parser"},{"lineNumber":52,"author":{"gitId":"nicholastanvis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"nicholastanvis"},"content":"    public Command prompt(Scanner sc) {"},{"lineNumber":54,"author":{"gitId":"nicholastanvis"},"content":"        String[] input \u003d sc.nextLine().split(\" \");"},{"lineNumber":55,"author":{"gitId":"nicholastanvis"},"content":"        return Parser.parse(input);"},{"lineNumber":56,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":57}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"public class DukeTest {"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"    public void dukeCtor_fileNotFound_fileCreated() {"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"        new File(\"./data.txt\").delete();"},{"lineNumber":13,"author":{"gitId":"nicholastanvis"},"content":"        assertDoesNotThrow(() -\u003e new Duke(\"./data.txt\"));"},{"lineNumber":14,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":16,"author":{"gitId":"nicholastanvis"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"nicholastanvis"},"content":"    public void executeCommand_invalidArg_exceptionCaught() {"},{"lineNumber":18,"author":{"gitId":"nicholastanvis"},"content":"        Duke sonia \u003d new Duke(\"./data.txt\");"},{"lineNumber":19,"author":{"gitId":"nicholastanvis"},"content":"        ArrayList\u003cString\u003e args \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"nicholastanvis"},"content":"        Command c \u003d new Command(CommandType.ADD_DEADLINE);"},{"lineNumber":21,"author":{"gitId":"nicholastanvis"},"content":"        assertDoesNotThrow(() -\u003e sonia.executeCommand(c));"},{"lineNumber":22,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nicholastanvis"},"content":""},{"lineNumber":24,"author":{"gitId":"nicholastanvis"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"nicholastanvis"},"content":"    public void deleteTask_outOfBoundsIndex_exceptionThrown() {"},{"lineNumber":26,"author":{"gitId":"nicholastanvis"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":27,"author":{"gitId":"nicholastanvis"},"content":"        assertThrows(DukeInvalidArgumentException.class, () -\u003e tasks.deleteTask(1));"},{"lineNumber":28,"author":{"gitId":"nicholastanvis"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nicholastanvis"},"content":"}"}],"authorContributionMap":{"nicholastanvis":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nicholastanvis"},"content":"list"},{"lineNumber":2,"author":{"gitId":"nicholastanvis"},"content":"todo a"},{"lineNumber":3,"author":{"gitId":"nicholastanvis"},"content":"list"},{"lineNumber":4,"author":{"gitId":"nicholastanvis"},"content":"deadline b /by c"},{"lineNumber":5,"author":{"gitId":"nicholastanvis"},"content":"deadline d /by e"},{"lineNumber":6,"author":{"gitId":"nicholastanvis"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"nicholastanvis"},"content":"list"},{"lineNumber":8,"author":{"gitId":"nicholastanvis"},"content":"event f /at g"},{"lineNumber":9,"author":{"gitId":"nicholastanvis"},"content":"event h /at i"},{"lineNumber":10,"author":{"gitId":"nicholastanvis"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"nicholastanvis"},"content":"list"},{"lineNumber":12,"author":{"gitId":"nicholastanvis"},"content":"bye"}],"authorContributionMap":{"nicholastanvis":12}}]
