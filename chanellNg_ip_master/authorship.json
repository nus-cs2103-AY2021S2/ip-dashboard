[{"path":"src/main/java/ip/src/main/java/A_MoreOOP.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"/** A-More OOP class that demonstrates OOP by having classes such as Task, Event etc."},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"public class A_MoreOOP {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    /** Returns a Duke bot that has loaded the tasks from the file given."},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * @param filePath Location of the file with the tasks information."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     * @param bot The Duke bot to be updated with the tasks from the file."},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * @throws FileNotFoundException"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    private static void createBot(String filePath, Duke bot) throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        Storage storage \u003d new Storage(filePath, bot);"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"        while (s.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"            storage.loadTask(s.nextLine());"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"     * Overwrites the file with the updated tasks everytime a user gives a command/input."},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * @param filePath The location of the file to be updated."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     * @param bot The bot with the new tasks to be written to the file."},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     * @throws IOException"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    private static void updateFile(String filePath, Duke bot) throws IOException {"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        Storage storage \u003d new Storage(filePath, bot);"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        storage.updateFile();"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        try{"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"            File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            f.getParentFile().mkdirs();"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"            if(f.createNewFile()){"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"File created\");"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"            }else {"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"                createBot(\"data/duke.txt\", bot);"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        }catch (IOException e){"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Error in creating file\");"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"        Ui ui \u003d new Ui(bot);"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"                String command \u003d parser.getCommand(input);"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d parser.getId(input);"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"                        ui.doneCommand(id);"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"                            input \u003d parser.toDoTask(input);"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"                            ui.toDoCommand(input);"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d parser.eventTaskContent(input);"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d parser.eventTaskAt(input);"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"                        ui.eventCommand(content, at);"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d parser.deadlineTaskContent(input);"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d parser.deadlineTaskBy(input);"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"                        ui.deadlineCommand(content, by);"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"                    }else if(command.equals(\"delete\")){"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d parser.getId(input);"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"                        ui.deleteCommand(id);"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"            try {"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"                updateFile(\"data/duke.txt\", bot);"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"            }catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"Unable to update file\");"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":127}},{"path":"src/main/java/ip/src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.text.DateFormat;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":" * Deadline is a type of Task with attributes String content and a Date stored as a Date object."},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"public class Deadline extends Task{"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    protected Date by;"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * Constructor for Deadline Class."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * @param content String content given by user."},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     * @param by_str Deadline date given by user, parsed into a Date object with the format dd/MM/yyyy HH:mm."},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    public Deadline(String content,String by_str) {"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        super(content);"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        DateFormat sourceFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"            Date by \u003d sourceFormat.parse(by_str);"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"            this.by \u003d by;"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"        } catch (ParseException e) {"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Date and Time is not in correct format DD/MM/YYYY HH:MM\");"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * toString() of Deadline Class."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     * @return toString() representation of a Deadline object with its done status, content and date."},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        DateFormat sourceFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        String strDate \u003d sourceFormat.format(this.by);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        if(!this.done){"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"            return \"D | 0 | \" + super.toString() + \" | \" + strDate;"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        }else {"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"            return \"D | 1 | \" + super.toString() + \" | \" + strDate;"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":53}},{"path":"src/main/java/ip/src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Returns a Duke bot that stores the tasks given by the user."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"    /** Tasks stored in this task list object */"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"    TaskList list;"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    public Duke(){"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"        this.list \u003d new TaskList();"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     * Sends a greeting to the user."},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    public void greet(){"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"     * Echos the user input."},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"     * @param input User input given."},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    public void echo(String input){"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        System.out.println(input);"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"     * Adds the given task to the Duke bot list, informs the user and prints the number of tasks in the bot list."},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * @param task Task object created from user input."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"    public void addToList(Task task){"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        this.list.addTask(task);"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"    \" + task);"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Now you have \" + String.valueOf(this.list.size()) + \" tasks in the list.\");"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"     * Adds the given task to the Duke bot list quietly."},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"     * @param task Task object created from user input."},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    public void addToBot(Task task){"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"        this.list.addTask(task);"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"     * Prints the tasks in the bot list."},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    public void printList(){"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"        if(this.list.Empty()){"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"There are no tasks!\");"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        this.list.printTasks();"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"     * Marks a task specified in the bot list as done."},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"     * @param id The position ,1-th based, of the task to be marked done in the bot list."},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"    public void markTaskAsDone(int id){"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"        Task task \u003d this.list.getTask(id-1);"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"        task.markDone();"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"  [X] \"+ task.content);"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"     * Deletes a task specified in the bot list."},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"     * @param id The position ,1-th based, of the task to be marked done in the bot list."},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"    public void deleteTask(int id){"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"        Task task \u003d this.list.getTask(id-1);"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"        this.list.remove(id-1);"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"    \" + task);"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Now you have \" + String.valueOf(this.list.size()) + \" tasks in the list.\");"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"     * Prints all the tasks with content that contain the keyword."},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"     * @param keyword The keyword given by the user."},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"    public void findMatchingTasks(String keyword){"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"        TaskList matchingTasks \u003d this.list.findTasks(keyword);"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"        matchingTasks.printTasks();"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"chanellNg":103,"-":10}},{"path":"src/main/java/ip/src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Customized Exception Class for Duke."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"public class DukeException extends Exception{"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"    public DukeException(String message){"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    public String toString(){"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"        return this.getMessage();"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":16}},{"path":"src/main/java/ip/src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.text.ParseException;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.text.DateFormat;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":" * Event is a type of Task with attributes String content and a Date stored as a Date object."},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"public class Event extends Task{"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    protected Date at;"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     * Constructor for Event Class."},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * @param content String content given by user."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     * @param at_str Event date given by user, parsed into a Date object with the format dd/MM/yyyy HH:mm."},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public Event(String content,String at_str) {"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        super(content);"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        DateFormat sourceFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"            Date at \u003d sourceFormat.parse(at_str);"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"            this.at \u003d at;"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"        } catch (ParseException e) {"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Date and Time is not in correct format DD/MM/YYYY HH:MM\");"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"     * toString() of Event Class."},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * @return toString() representation of a Event object with its done status, content and date."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        DateFormat sourceFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        String strDate \u003d sourceFormat.format(this.at);"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"            if(!this.done){"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            return \"E | 0 | \" + super.toString() + \" | \" + strDate;"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        }else {"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"            return \"E | 1 | \" + super.toString() + \" | \" + strDate;"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":50}},{"path":"src/main/java/ip/src/main/java/Level_1.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_1 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.next();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"        while(!(input.equals(\"bye\"))){"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"            bot.echo(input);"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.next();"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":19}},{"path":"src/main/java/ip/src/main/java/Level_2.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_2 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        //int counter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        while(!(input.equals(\"bye\"))) {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            }else{"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"                Task newTask \u003d new Task(input);"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"                bot.addToList(newTask);"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                //counter++;"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":26}},{"path":"src/main/java/ip/src/main/java/Level_3.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_3 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        //int counter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        while(!(input.equals(\"bye\"))) {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            }else{"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"                if(command.equals(\"done\")){"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                    int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                    bot.markTaskAsDone(id);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                }else {"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"                    Task newTask \u003d new Task(input);"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                    bot.addToList(newTask);"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                    //counter++;"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":33}},{"path":"src/main/java/ip/src/main/java/Level_4.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_4 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        //int counter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        while(!(input.equals(\"bye\"))) {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            }else{"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"                if(command.equals(\"done\")){"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                    int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                    bot.markTaskAsDone(id);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                }else if(command.equals(\"todo\")) {"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"                    input \u003d input.split(\" \",2)[1];"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                    ToDo newTask \u003d new ToDo(input);"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                    bot.addToList(newTask);"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                    //counter++;"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                }else if(command.equals(\"event\")){"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"                    input \u003d input.split(\" \",2)[1];"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"                    String content \u003d input.split(\"/at\")[0];"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"                    String at \u003d input.split(\"/at\")[1];"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"                    Event newTask \u003d new Event(content,at);"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                    bot.addToList(newTask);"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                }else{"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"                    input \u003d input.split(\" \",2)[1];"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"                    String content \u003d input.split(\"/by\")[0];"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"                    String by\u003d input.split(\"/by\")[1];"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"                    Deadline newTask \u003d new Deadline(content,by);"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                    bot.addToList(newTask);"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":47}},{"path":"src/main/java/ip/src/main/java/Level_5.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_5 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        //int counter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                        bot.markTaskAsDone(id);"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                            input \u003d input.split(\" \", 2)[1];"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                            ToDo newTask \u003d new ToDo(input);"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                            bot.addToList(newTask);"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"                            //counter++;"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/at\")[0];"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d input.split(\"/at\")[1];"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"                        Event newTask \u003d new Event(content, at);"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/by\")[0];"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d input.split(\"/by\")[1];"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"                        Deadline newTask \u003d new Deadline(content, by);"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":60}},{"path":"src/main/java/ip/src/main/java/Level_6.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"public class Level_6 {"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        //int counter \u003d 1;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                        bot.markTaskAsDone(id);"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                            input \u003d input.split(\" \", 2)[1];"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                            ToDo newTask \u003d new ToDo(input);"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                            bot.addToList(newTask);"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"                            //counter++;"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/at\")[0];"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d input.split(\"/at\")[1];"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"                        Event newTask \u003d new Event(content, at);"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/by\")[0];"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d input.split(\"/by\")[1];"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"                        Deadline newTask \u003d new Deadline(content, by);"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"                    }else if(command.equals(\"delete\")){"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"                        bot.deleteTask(id);"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":66}},{"path":"src/main/java/ip/src/main/java/Level_7.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class Level_7 {"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    private static void createBot(String filePath, Duke bot) throws FileNotFoundException {"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"        while (s.hasNext()) {"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"            String[] taskData \u003d s.nextLine().split(\" \\\\| \");"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            String type \u003d taskData[0];"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"            String doneStatus \u003d taskData[1];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"                String details \u003d taskData[2];"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new ToDo(details);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            } else if (type.equals(\"E\")) {"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                String at \u003d taskData[3];"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Event(content, at);"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"                String by \u003d taskData[3];"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Deadline(content, by);"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"            if (doneStatus \u003d\u003d \" 1 \") {"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"                newTask.markDone();"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    private static void updateFile(String filePath, Duke bot) throws IOException {"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        for(Task element:bot.list.list) {"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"            fw.write(element.toString() + \"\\n\");"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        fw.close();"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        try{"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"            File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"            f.getParentFile().mkdirs();"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"            if(f.createNewFile()){"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"File created\");"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"            }else {"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"                createBot(\"data/duke.txt\", bot);"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"        }catch (IOException e){"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Error in creating file\");"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"                        bot.markTaskAsDone(id);"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"                            input \u003d input.split(\" \", 2)[1];"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"                            ToDo newTask \u003d new ToDo(input);"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                            bot.addToList(newTask);"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"                            //counter++;"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/at\")[0];"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d input.split(\"/at\")[1];"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"                        Event newTask \u003d new Event(content, at);"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/by\")[0];"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d input.split(\"/by\")[1];"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"                        Deadline newTask \u003d new Deadline(content, by);"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"                    }else if(command.equals(\"delete\")){"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"                        bot.deleteTask(id);"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"            try {"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"                updateFile(\"data/duke.txt\", bot);"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"            }catch (IOException e) {"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"Unable to update file\");"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":129,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":133}},{"path":"src/main/java/ip/src/main/java/Level_8.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"public class Level_8 {"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    private static void createBot(String filePath, Duke bot) throws FileNotFoundException {"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"        while (s.hasNext()) {"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"            String[] taskData \u003d s.nextLine().split(\" \\\\| \");"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"            String type \u003d taskData[0];"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"            String doneStatus \u003d taskData[1];"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"                String details \u003d taskData[2];"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new ToDo(details);"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"            } else if (type.equals(\"E\")) {"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"                String at \u003d taskData[3];"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Event(content, at);"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"                String by \u003d taskData[3];"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Deadline(content, by);"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"            if (doneStatus \u003d\u003d \" 1 \") {"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                newTask.markDone();"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"    private static void updateFile(String filePath, Duke bot) throws IOException {"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        for(Task element:bot.list.list) {"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"            fw.write(element.toString() + \"\\n\");"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        fw.close();"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        try{"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"            File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"            f.getParentFile().mkdirs();"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"            if(f.createNewFile()){"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"File created\");"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"            }else {"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"                createBot(\"data/duke.txt\", bot);"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        }catch (IOException e){"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Error in creating file\");"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"                String command \u003d input.split(\" \")[0];"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"                        bot.markTaskAsDone(id);"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"                            input \u003d input.split(\" \", 2)[1];"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                            ToDo newTask \u003d new ToDo(input);"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"                            bot.addToList(newTask);"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"                            //counter++;"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/at\")[0];"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d input.split(\" /at \")[1];"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"                        Event newTask \u003d new Event(content, at);"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"                        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d input.split(\"/by\")[0];"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d input.split(\" /by \")[1];"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"                        System.out.println(by);"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"                        Deadline newTask \u003d new Deadline(content, by);"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"                        bot.addToList(newTask);"},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"                    }else if(command.equals(\"delete\")){"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"                        bot.deleteTask(id);"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"            try {"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"                updateFile(\"data/duke.txt\", bot);"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"            }catch (IOException e) {"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"Unable to update file\");"},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":129,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":130,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":131,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":132,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":133,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":134,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":135,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":135}},{"path":"src/main/java/ip/src/main/java/Level_9.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"/** A-More OOP class that demonstrates OOP by having classes such as Task, Event etc."},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"public class Level_9 {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    /** Returns a Duke bot that has loaded the tasks from the file given."},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * @param filePath Location of the file with the tasks information."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     * @param bot The Duke bot to be updated with the tasks from the file."},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * @throws FileNotFoundException"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    private static void createBot(String filePath, Duke bot) throws FileNotFoundException {"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"        File f \u003d new File(filePath); // create a File for the given file path"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"        Storage storage \u003d new Storage(filePath, bot);"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"        while (s.hasNext()) {"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"            storage.loadTask(s.nextLine());"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"     * Overwrites the file with the updated tasks everytime a user gives a command/input."},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * @param filePath The location of the file to be updated."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     * @param bot The bot with the new tasks to be written to the file."},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     * @throws IOException"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"    private static void updateFile(String filePath, Duke bot) throws IOException {"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"        Storage storage \u003d new Storage(filePath, bot);"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        storage.updateFile();"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"    public static void main(String[] args) throws DukeException {"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"        Duke bot \u003d new Duke();"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"        try{"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"            File f \u003d new File(\"data/duke.txt\");"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            f.getParentFile().mkdirs();"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"            if(f.createNewFile()){"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"File created\");"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"            }else {"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"                createBot(\"data/duke.txt\", bot);"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        }catch (IOException e){"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"            System.out.println(\"Error in creating file\");"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"        Ui ui \u003d new Ui(bot);"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        while (!(input.equals(\"bye\"))) {"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"            if (input.equals(\"list\")) {"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"                bot.printList();"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"                String command \u003d parser.getCommand(input);"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"                try {"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"                    if (command.equals(\"done\")) {"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d parser.getId(input);"},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"                        ui.doneCommand(id);"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"find\")) {"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"                        String keyword \u003d parser.getKeyword(input);"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"                        bot.findMatchingTasks(keyword);"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"todo\")) {"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"                        try {"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"                            input \u003d parser.toDoTask(input);"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                            ui.toDoCommand(input);"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"                        } catch (Exception e) {"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"                            throw new DukeException((\"OOPS!!! The description cannot be empty.\"));"},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"event\")) {"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d parser.eventTaskContent(input);"},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"                        String at \u003d parser.eventTaskAt(input);"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":"                        ui.eventCommand(content, at);"},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"                    } else if (command.equals(\"deadline\")) {"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"                        String content \u003d parser.deadlineTaskContent(input);"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"                        String by \u003d parser.deadlineTaskBy(input);"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":"                        ui.deadlineCommand(content, by);"},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"                    }else if(command.equals(\"delete\")){"},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"                        int id \u003d parser.getId(input);"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"                        ui.deleteCommand(id);"},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"                    } else {"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":"                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-{\");"},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"                    }"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"                } catch (DukeException e1) {"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"                    System.out.println(e1);"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":"            try {"},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"                updateFile(\"data/duke.txt\", bot);"},{"lineNumber":115,"author":{"gitId":"chanellNg"},"content":"            }catch (IOException e) {"},{"lineNumber":116,"author":{"gitId":"chanellNg"},"content":"                System.out.println(\"Unable to update file\");"},{"lineNumber":117,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"chanellNg"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":119,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":121,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":122,"author":{"gitId":"chanellNg"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":123,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":125,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":126,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":127,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":128,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":128}},{"path":"src/main/java/ip/src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Parser is a class that parsers user input to retrieve user commands, information to create Task objects etc."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    Parser(){"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the command entered by the user."},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     * @param input Input entered by user."},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * @return Returns the first word that represents the command given by the user."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"    public String getCommand(String input) {"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        String command \u003d input.split(\" \")[0];"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"        return command;"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the information needed from the user input for a ToDo object."},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"     * @return String content needed to create a ToDo Object."},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public String toDoTask(String input){"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"        return input;"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the information needed from the user input for a Event object."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     * @return String content needed to create a Event Object."},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"    public String eventTaskContent(String input) {"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        String content \u003d input.split(\"/at\")[0];"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"        return content;"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the information needed from the user input for a Event object."},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"     * @return String date needed to create a Event Object."},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    public String eventTaskAt(String input) {"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        String at \u003d input.split(\"/at\")[1];"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        return at;"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the information needed from the user input for a Deadline object."},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":"     * @return String content needed to create a Deadline Object."},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"    public String deadlineTaskContent(String input) {"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"        String content \u003d input.split(\"/by\")[0];"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        return content;"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the information needed from the user input for a Deadline object."},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"     * @return String date needed to create a Deadline Object."},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"    public String deadlineTaskBy(String input) {"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":"        input \u003d input.split(\" \", 2)[1];"},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"        String by \u003d input.split(\"/by\")[1];"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"        return by;"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":"     * Gives the ID (position) of the task to be manipulated in the TaskList."},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"     * @return Integer ID that represents the position (1-th based) of the task in the TaskList."},{"lineNumber":93,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":95,"author":{"gitId":"chanellNg"},"content":"    public int getId(String input){"},{"lineNumber":96,"author":{"gitId":"chanellNg"},"content":"        int id \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":97,"author":{"gitId":"chanellNg"},"content":"        return id;"},{"lineNumber":98,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":100,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"chanellNg"},"content":"     * Retrieves the keyword from the user input to for the find task method."},{"lineNumber":102,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"chanellNg"},"content":"     * @param input User input."},{"lineNumber":104,"author":{"gitId":"chanellNg"},"content":"     * @return The keyword used to find the matching tasks in the Task list."},{"lineNumber":105,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":107,"author":{"gitId":"chanellNg"},"content":"    public String getKeyword(String input){"},{"lineNumber":108,"author":{"gitId":"chanellNg"},"content":"        String keyword \u003d input.split(\" \", 2)[1];"},{"lineNumber":109,"author":{"gitId":"chanellNg"},"content":"        return keyword;"},{"lineNumber":110,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":112,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":113,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":114,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":114}},{"path":"src/main/java/ip/src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.io.File;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":" * Storage class that deals with loading and updating the tasks in the given file."},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    protected String filePath;"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    protected Duke bot;"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"    Storage(String filePath, Duke bot){"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"        this.bot \u003d bot;"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"     * Updates the Duke bot with the tasks by loading the tasks in the file."},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"     * @param TaskData The task from the file."},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"     * @throws FileNotFoundException"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"    public void loadTask(String TaskData) throws FileNotFoundException {"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"        File f \u003d new File(this.filePath); // create a File for the given file path"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        Task newTask \u003d new Task(\"\");"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        String[] taskData \u003d TaskData.split(\" \\\\| \");"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"            String type \u003d taskData[0];"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"            String doneStatus \u003d taskData[1];"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"                String details \u003d taskData[2];"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new ToDo(details);"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"            } else if (type.equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"                String at \u003d taskData[3];"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Event(content, at);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"            } else {"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"                String content \u003d taskData[2];"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"                String by \u003d taskData[3];"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"                newTask \u003d new Deadline(content, by);"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"                bot.addToBot(newTask);"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"            if (doneStatus \u003d\u003d \" 1 \") {"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"                newTask.markDone();"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"     * Updates the file with the bot current TaskList."},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"     * @throws IOException"},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    public void updateFile() throws IOException {"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        FileWriter fw \u003d new FileWriter(this.filePath);"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"        for(Task element:this.bot.list.list) {"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":"            fw.write(element.toString() + \"\\n\");"},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"        fw.close();"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":76}},{"path":"src/main/java/ip/src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Task class that stores Task details and Task status."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    //int id;"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    String content;"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    public boolean done \u003d false;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    public Task(String content) {"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"        //this.id \u003d id;"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"        this.content \u003d content;"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     * Updates the Task Status to completed."},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    public void markDone(){"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        this.done \u003d true;"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     * Checks if Task content has matching keyword."},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"     * @return Returns True if task content has keyword."},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    public boolean isMatch(String keyword){"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"        return this.content.contains(keyword);"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"    public String toString(){"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"        return this.content;"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"}"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":""}],"authorContributionMap":{"chanellNg":45}},{"path":"src/main/java/ip/src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" * TaskList stores and manipulate the tasks in a List."},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    protected List\u003cTask\u003e list;"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    TaskList() {"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     * Adds a Task to the list."},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"     * @param task New Task to be added to list."},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    public void addTask(Task task) {"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        this.list.add(task);"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"     * Checks if list is empty."},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":"     * @return Boolean to indicate if list is empty."},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"    public boolean Empty() {"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"        return this.list.isEmpty();"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     * Prints the tasks in the list in order."},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":"    public void printTasks() {"},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"        int counter \u003d 1;"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        for (Task element : this.list) {"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"            System.out.println(String.valueOf(counter) + \". \" + element);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":"            counter++;"},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"     * Gets the task at a specified position in the list."},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"     * @param id The position of the task to be retrieved in the list."},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"     * @return A task in the list."},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"    public Task getTask(int id) {"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        return this.list.get(id);"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"     * Removes a task at a specified position in the list."},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"     * @param id The position of the task to be removed from the list."},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    public void remove(int id) {"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        this.list.remove(id);"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":"     * Returns size of the Task list."},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":"     * @return The number of tasks in the list."},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":"    public int size(){"},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"        return this.list.size();"},{"lineNumber":79,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":81,"author":{"gitId":"chanellNg"},"content":"    public TaskList findTasks(String keyword){"},{"lineNumber":82,"author":{"gitId":"chanellNg"},"content":"        TaskList taskListWithMatches \u003d new TaskList();"},{"lineNumber":83,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":84,"author":{"gitId":"chanellNg"},"content":"        for(Task task: this.list){"},{"lineNumber":85,"author":{"gitId":"chanellNg"},"content":"            if(task.isMatch(keyword)){"},{"lineNumber":86,"author":{"gitId":"chanellNg"},"content":"                taskListWithMatches.addTask(task);"},{"lineNumber":87,"author":{"gitId":"chanellNg"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":90,"author":{"gitId":"chanellNg"},"content":"        return taskListWithMatches;"},{"lineNumber":91,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":92}},{"path":"src/main/java/ip/src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * ToDo class is a type of Task that has attribute String content."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class ToDo extends Task{"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":"    public ToDo(String content){"},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"        super(content);"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     * toString() of ToDo Class."},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     * @return toString() representation of a ToDo object with its done status and content."},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        if(!this.done){"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"            return \"T | 0 | \" + super.toString();"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":"        }else {"},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"            return \"T | 1 | \" + super.toString();"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":28}},{"path":"src/main/java/ip/src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"package ip.src.main.java;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":" * Ui class deals with user interactions."},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":" *"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":" */"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"    protected Duke bot;"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"    Ui(Duke bot) {"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"        this.bot \u003d bot;"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"     * Deals with the done command by the user by telling the bot to mark a specified task as done."},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"     * @param id The specified position of the task which status is to be updated as done in the Task List."},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    public void doneCommand(int id) {"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"        this.bot.markTaskAsDone(id);"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":25,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"chanellNg"},"content":"     * Deals with the ToDo command. Creates a ToDo task from the input and tells the bot to add the new task to its Task list."},{"lineNumber":27,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"chanellNg"},"content":"     * @param content Content of the ToDo object."},{"lineNumber":29,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":31,"author":{"gitId":"chanellNg"},"content":"    public void toDoCommand(String content) {"},{"lineNumber":32,"author":{"gitId":"chanellNg"},"content":"        ToDo newTask \u003d new ToDo(content);"},{"lineNumber":33,"author":{"gitId":"chanellNg"},"content":"        this.bot.addToList(newTask);"},{"lineNumber":34,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":36,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"chanellNg"},"content":"     * Deals with the Event command. Creates a Event task from the input and tells the bot to add the new task to its Task list."},{"lineNumber":38,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"chanellNg"},"content":"     * @param content Content of the Event object."},{"lineNumber":40,"author":{"gitId":"chanellNg"},"content":"     * @param at Date of the Event object."},{"lineNumber":41,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":43,"author":{"gitId":"chanellNg"},"content":"    public void eventCommand(String content, String at) {"},{"lineNumber":44,"author":{"gitId":"chanellNg"},"content":"        Event newTask \u003d new Event(content, at);"},{"lineNumber":45,"author":{"gitId":"chanellNg"},"content":"        this.bot.addToList(newTask);"},{"lineNumber":46,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":47,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":49,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"chanellNg"},"content":"     * Deals with the Deadline command. Creates a Deadline task from the input and tells the bot to add the new task to its Task list."},{"lineNumber":51,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"chanellNg"},"content":"     * @param content Content of the Event object."},{"lineNumber":53,"author":{"gitId":"chanellNg"},"content":"     * @param by Date of the Event object."},{"lineNumber":54,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":56,"author":{"gitId":"chanellNg"},"content":"    public void deadlineCommand(String content, String by) {"},{"lineNumber":57,"author":{"gitId":"chanellNg"},"content":"        Deadline newTask \u003d new Deadline(content, by);"},{"lineNumber":58,"author":{"gitId":"chanellNg"},"content":"        this.bot.addToList(newTask);"},{"lineNumber":59,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":61,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"chanellNg"},"content":"     * Deals with the Delete command. Tells the bot to remove a task from its Task list."},{"lineNumber":63,"author":{"gitId":"chanellNg"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"chanellNg"},"content":"     * @param id The specified position of the task to be removed from the bot Task List."},{"lineNumber":65,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":67,"author":{"gitId":"chanellNg"},"content":"    public void deleteCommand(int id){"},{"lineNumber":68,"author":{"gitId":"chanellNg"},"content":"        this.bot.deleteTask(id);"},{"lineNumber":69,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":71,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":72,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":73,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":74,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":75,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":76,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":77,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":78,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":78}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Deadline;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Duke;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Task;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.ToDo;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"public class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"     * Tests the toString() method of the Deadline class to see if deadline object is represented as expected."},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    public void deadlineToStringTest(){"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"        Deadline deadline \u003d new Deadline(\"Test\",\"12/2/2019 18:00\");"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"        String deadlineToString \u003d deadline.toString();"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"        String expectedString \u003d  \"D | 0 | \" + \"Test\" + \" | \" + \"12/02/2019 18:00\";"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        assertEquals(expectedString, deadlineToString);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":23}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Event;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Duke;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Task;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.ToDo;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"     * Tests the toString() method of the Event class to see if deadline object is represented as expected."},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    public void eventToStringTest(){"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"        Event event \u003d new Event(\"Test\",\"12/2/2019 18:00\");"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"        String eventToString \u003d event.toString();"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"        String expectedString \u003d  \"E | 0 | \" + \"Test\" + \" | \" + \"12/02/2019 18:00\";"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":"        assertEquals(expectedString, eventToString);"},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":23}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Duke;"},{"lineNumber":2,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.Task;"},{"lineNumber":3,"author":{"gitId":"chanellNg"},"content":"import ip.src.main.java.ToDo;"},{"lineNumber":4,"author":{"gitId":"chanellNg"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"chanellNg"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"chanellNg"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":8,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"chanellNg"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":10,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":11,"author":{"gitId":"chanellNg"},"content":"public class TaskTest {"},{"lineNumber":12,"author":{"gitId":"chanellNg"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"chanellNg"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"chanellNg"},"content":"     * Tests if the markdone() method in the Task class behaves as expected."},{"lineNumber":15,"author":{"gitId":"chanellNg"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"chanellNg"},"content":"    public void taskDoneTest(){"},{"lineNumber":17,"author":{"gitId":"chanellNg"},"content":"        Task task \u003d new Task(\"Test\");"},{"lineNumber":18,"author":{"gitId":"chanellNg"},"content":"        task.markDone();"},{"lineNumber":19,"author":{"gitId":"chanellNg"},"content":"        assertTrue(task.done \u003d\u003d true);"},{"lineNumber":20,"author":{"gitId":"chanellNg"},"content":""},{"lineNumber":21,"author":{"gitId":"chanellNg"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"chanellNg"},"content":"}"}],"authorContributionMap":{"chanellNg":22}}]
