[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"  protected String deadline;"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"  public Deadline(String description, String deadline) {"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"    super(description);"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    this.deadline \u003d deadline;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"  @Override"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"  public String toString() {"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    return String.format(\"[D]%s (by: %s)\", super.toString(), deadline);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"        greeting();"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"        "},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        "},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"        String userInput \u003d sc.nextLine();"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"            if (userInput.equals(\"list\")) {"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"                taskList.show();"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"            } else {"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"                String[] splitInput \u003d userInput.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"                try {"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"                    switch (splitInput[0]) {"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"                        case \"done\":"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The task index is missing.\");"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"                            } else if (Integer.parseInt(splitInput[1]) \u003e taskList.size()) {"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The task index is out of range.\");"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"                            } else {"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"                                taskList.markDone(Integer.parseInt(splitInput[1]));"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"                            }"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"                            break;"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"                        case \"delete\":"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The task index is missing.\");"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"                            } else if (Integer.parseInt(splitInput[1]) \u003e taskList.size()) {"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The task index is out of range.\");"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"                            } else {"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"                                taskList.delete(Integer.parseInt(splitInput[1]));"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"                            }"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"                            break;"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"                        case \"todo\":"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"                            } else {"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"                                taskList.add(new Todo(splitInput[1]));"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"                            }"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"                            break;"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"                        case \"deadline\":"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"                            } else {"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"                                String[] splitDeadlineInput \u003d splitInput[1].split(\" /by \");"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"                                if (splitDeadlineInput.length \u003c 2) {"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"                                    throw new DukeException(\"Insufficient info given for a deadline.\");"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"                                } else {"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"                                    taskList.add(new Deadline(splitDeadlineInput[0], splitDeadlineInput[1]));"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"                                }"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"                            }"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"                            break;"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"                        case \"event\":"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"                            if (splitInput.length \u003c 2) {"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"                                throw new DukeException(\"The description of an event cannot be empty.\");"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"                            } else {"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"                                String[] splitEventInput \u003d splitInput[1].split(\" /at \");"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"                                if (splitEventInput.length \u003c 2) {"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"                                    throw new DukeException(\"Insufficient info given for a deadline.\");"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"                                } else {"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"                                    taskList.add(new Event(splitEventInput[0], splitEventInput[1]));"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"                                }"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"                            }"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"                            break;"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"                        default:"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"                } catch (DukeException e) {"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"                    printLineBreak();"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"                    printIndented(e.toString());"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"                    printLineBreak();"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"        exit();"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"        sc.close();"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"    public static void printLineBreak() {"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"        System.out.println(\"  ____________________________________________________________\");"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"    public static void printIndented(String text) {"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"        System.out.println(String.format(\"    %s\", text));"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":91,"author":{"gitId":"picasdan9"},"content":"    public static void greeting() {"},{"lineNumber":92,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":93,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"Hello! I\u0027m Duke\");"},{"lineNumber":94,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"What can I do for you?\");"},{"lineNumber":95,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":96,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":98,"author":{"gitId":"picasdan9"},"content":"    public static void exit() {"},{"lineNumber":99,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":100,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"Bye. Hope to see you again soon!\");"},{"lineNumber":101,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"picasdan9":99,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"import java.lang.Exception;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"  private static final long serialVersionUID \u003d 7526472295622776147L;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"  public DukeException() {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    super();"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"  public DukeException(String msg) {"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    super(msg);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"  @Override"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"  public String toString() {"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    return String.format(\"☹ OOPS!!! %s\", super.getMessage());"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"  protected String time;"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"  public Event(String description, String time) {"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"    super(description);"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    this.time \u003d time;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"  @Override"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"  public String toString() {"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    return String.format(\"[E]%s (at: %s)\", super.toString(), time);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"  protected String description;"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"  protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"  public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"      this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"      this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"  @Override"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"  public String toString() {"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"  public void setDone() {"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":18}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"  private List\u003cTask\u003e taskList;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"  public TaskList() {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"  public void add(Task task) {"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    taskList.add(task);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(String.format(\"  %s\", task));"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"  public void delete(int idx) {"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    Task deleted \u003d taskList.remove(idx-1);"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(String.format(\"  %s\", deleted));"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"  public void markDone(int idx) {"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    taskList.get(idx-1).setDone();"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(\"Nice! I\u0027ve marked this task as done\");"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(taskList.get(idx-1).toString());"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"  public void show() {"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    Duke.printIndented(\"Here are the tasks in your list:\");"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"      Duke.printIndented(String.format(\"%d.%s\", i+1, taskList.get(i).toString()));"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    Duke.printLineBreak();"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"  public int size() {"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    return taskList.size();"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":48}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"  public Todo(String description) {"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"    super(description);"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"  @Override"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  public String toString() {"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    return String.format(\"[T]%s\", super.toString());"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"list"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"bye"}],"authorContributionMap":{"picasdan9":9}}]
