[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"    id \u0027java\u0027"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"}"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"jar {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    manifest {"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"\t\tattributes("},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"\t\t\t\u0027Main-Class\u0027: \u0027duke.Duke\u0027"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"\t\t)"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"\t}"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"}"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"repositories {"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"\tmavenCentral()"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"}"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"dependencies {"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"\ttestImplementation(platform(\u0027org.junit:junit-bom:5.7.0\u0027))"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"\ttestImplementation(\u0027org.junit.jupiter:junit-jupiter\u0027)"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"}"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"test {"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"\tuseJUnitPlatform()"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"\ttestLogging {"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"\t\tevents \"passed\", \"skipped\", \"failed\""},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"\t}"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":28}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":":end"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":":omega"}],"authorContributionMap":{"picasdan9":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":" *"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":" *"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":" * in the user manual at https://docs.gradle.org/6.8.1/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":" */"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"picasdan9":10}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    private TaskList taskList;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    public Duke(String filePath) throws IOException {"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"        ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"            taskList \u003d storage.load();"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"            ui.showLoadFileError();"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    public void run() {"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"        ui.greeting();"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"        boolean isExit \u003d false;"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        while (!isExit) {"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"                ui.printLineBreak();"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"                c.execute(taskList, ui, storage);"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"            } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"                ui.showError(e);"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"            } finally {"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"                ui.printLineBreak();"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"     * Runs Duke programm with data file at data/duke.txt"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"     * @param args"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"     * @throws IOException"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        new Duke(\"data/duke.txt\").run();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"picasdan9":49,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.lang.Exception;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"public class DukeException extends Exception {"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    private static final long serialVersionUID \u003d 7526472295622776147L;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    public DukeException() {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"        super();"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    public DukeException(String msg) {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        super(msg);"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * Returns the message string of the error"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"☹ OOPS!!! %s\", super.getMessage());"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import duke.command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import duke.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"import duke.task.Todo;"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"public class Parser {"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     * Returns a command based on user input"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * @param userInput"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * @return Command"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    public static final Command parse(String userInput) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"        if (userInput.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"            return new ListCommand();"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"        } else if (userInput.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"            return new ExitCommand();"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"            String[] splitInput \u003d userInput.split(\" \", 2);"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"            "},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"            switch (splitInput[0]) {"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"            case \"done\":"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"                    throw new DukeException(\"The task index is missing.\");"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"                    return new DoneCommand(Integer.parseInt(splitInput[1]));"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"            case \"delete\":"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"                    throw new DukeException(\"The task index is missing.\");"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"                    return new DeleteCommand(Integer.parseInt(splitInput[1]));"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"            case \"todo\":"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"                    throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"                    return new AddCommand(new Todo(splitInput[1]));"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"            case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"                    throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"                    String[] splitDeadlineInput \u003d splitInput[1].split(\" /by \");"},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"                    if (splitDeadlineInput.length \u003c 2) {"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"                        throw new DukeException(\"Insufficient info given for a deadline.\");"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"                    } else {"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"                        return new AddCommand(new Deadline(splitDeadlineInput[0], splitDeadlineInput[1]));"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"            case \"event\":"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"                    throw new DukeException(\"The description of an event cannot be empty.\");"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"                    String[] splitEventInput \u003d splitInput[1].split(\" /at \");"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"                    if (splitEventInput.length \u003c 2) {"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"                        throw new DukeException(\"Insufficient info given for a deadline.\");"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"                    } else {"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"                        return new AddCommand(new Event(splitEventInput[0], splitEventInput[1]));"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"            case \"find\":"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"                if (splitInput.length \u003c 2) {"},{"lineNumber":80,"author":{"gitId":"picasdan9"},"content":"                  throw new DukeException(\"Keyword is missing\");"},{"lineNumber":81,"author":{"gitId":"picasdan9"},"content":"                } else {"},{"lineNumber":82,"author":{"gitId":"picasdan9"},"content":"                  return new FindCommand(splitInput[1]);"},{"lineNumber":83,"author":{"gitId":"picasdan9"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":85,"author":{"gitId":"picasdan9"},"content":"            default:"},{"lineNumber":86,"author":{"gitId":"picasdan9"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":87,"author":{"gitId":"picasdan9"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":90}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import duke.task.Event;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import duke.task.Todo;"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    private File file;"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"        file \u003d new File(filePath);"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * Returns a TaskList created from the data given in file"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     * @return TaskList"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    public TaskList load() throws DukeException {"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"            String[] taskData \u003d sc.nextLine().split(\" \\\\| \");"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"            switch (taskData[0]) {"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"            case \"T\":"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"                taskList.add(new Todo(taskData[2], taskData[1].equals(\"1\")));"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"            case \"D\":"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"                taskList.add(new Deadline(taskData[2], taskData[1].equals(\"1\"), taskData[3]));"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"                break;"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"            case \"E\":"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"                taskList.add(new Event(taskData[2], taskData[1].equals(\"1\"), taskData[3]));"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"        sc.close();"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"        return taskList;"},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"        "},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"            throw new DukeException(\"Unable to load data file.\");"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"     * Writes data to file"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"     * @param text"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"    public void write(String text) throws DukeException {"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"            fw.write(text);"},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"            fw.close();"},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"            throw new DukeException(\"Unable to write task list to file.\");"},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":71}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    private Scanner sc;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    public Ui() {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"     * Returns the command string input by user"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    public String readCommand() {"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"        return sc.nextLine();"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    public void showLoadFileError() {"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"Unable to load task list from file. A new task list is created.\");"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"     * Prints to console the DukeException"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"     * @param e"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    public void showError(DukeException e) {"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"        printIndented(e.toString());"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    public void printLineBreak() {"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"        System.out.println(\"  ____________________________________________________________\");"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"     * Print to console text with indentation"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"     * @param text"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"    public void printIndented(String text) {"},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"        System.out.println(String.format(\"    %s\", text));"},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"    public void greeting() {"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"Hello! I\u0027m Duke\");"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        printIndented(\"What can I do for you?\");"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"        printLineBreak();"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":55}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"public class AddCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    private Task task;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    public AddCommand(Task task) {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        super(false);"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"        this.task \u003d task;"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * Adds a new task to taskList"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @param storage"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        taskList.add(task);"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(String.format(\"    %s\", task));"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        storage.write(taskList.toDataString());"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    private boolean isExit;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    public Command(boolean isExit) {"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     * Executes the command"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * s"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @param isExit("},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"     * Returns whether the current command is going to exit the programme"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"     * @return boolean"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        return isExit;"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":35}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    private int idx;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    public DeleteCommand(int idx) {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        super(false);"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * Deletes task at index idx from taskList"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @param storage"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        Task deleted \u003d taskList.remove(idx - 1);"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(String.format(\"  %s\", deleted));"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        storage.write(taskList.toDataString());"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":33}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    private int idx;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    public DoneCommand(int idx) {"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"        super(false);"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        this.idx \u003d idx - 1;"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * Marks task at index idx of taskList as done"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * @param storage"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"        taskList.markDone(idx);"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":28}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"public class ExitCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    public ExitCommand() {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        super(true);"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    /**   "},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"     * Exits programme"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * @param storage"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(\"Bye. Hope to see you again soon!\");"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    private String kw;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    public FindCommand(String kw) {"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"        super(false);"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        this.kw \u003d kw;"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(\"Here are the matching tasks in your list:\");"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"        int count \u003d 0;"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"            if (taskList.get(i).contains(kw)) {"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"                count++;"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"                ui.printIndented(String.format(\"%d.%s\", count, taskList.get(i).toString()));"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":26}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        super(false);"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"     * Lists all tasks in taskList"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"     * @param taskList"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     * @param ui"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * @param storage"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * @throws DukeException"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"        ui.printIndented(\"Here are the tasks in your list:\");"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"            ui.printIndented(String.format(\"%d.%s\", i + 1, taskList.get(i).toString()));"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":27}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    protected LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    public Deadline(String description, boolean isDone, String deadline) {"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Deadline"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Deadline to be saved in data file"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    public String toSavedString() {"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"D | %d | %s | %s\", super.isDone ? 1 : 0, super.description, deadline);"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    protected LocalDate time;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    public Event(String description, String time) {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    public Event(String description, boolean isDone, String time) {"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Event"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Event to be saved in data file"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"    public String toSavedString() {"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"E | %d | %s | %s\", super.isDone ? 1 : 0, super.description, time);"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"            this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"            this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"}"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of task"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", description);"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"    public void setDone() {"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"        isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"     * Returns true if description contains kw, false otherwise"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"     * @param kw"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"     * @return boolean"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    public boolean contains(String kw) {"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        return description.contains(kw);"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    public abstract String toSavedString();"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":44}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"     * Returns task as index i"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     * @param i index of task to get"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"     * @return Task"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    public Task get(int i) {"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"        return taskList.get(i);"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     * Adds a new task to taskList"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"     * @param task"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"    public void add(Task task) {"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"        taskList.add(task);"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":"     * Removes task at index idx from taskList"},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"     * @param idx index of task to remove"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"     * @return Task"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    public Task remove(int idx) {"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"        return taskList.remove(idx);"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":45,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":46,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":47,"author":{"gitId":"picasdan9"},"content":"     * Marks task at index idx as done"},{"lineNumber":48,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":49,"author":{"gitId":"picasdan9"},"content":"     * @param idx index of task to mark done"},{"lineNumber":50,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"picasdan9"},"content":"    public void markDone(int idx) {"},{"lineNumber":52,"author":{"gitId":"picasdan9"},"content":"        taskList.get(idx).setDone();"},{"lineNumber":53,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":55,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":56,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":57,"author":{"gitId":"picasdan9"},"content":"     * Returns the size of current taskList"},{"lineNumber":58,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":59,"author":{"gitId":"picasdan9"},"content":"     * @return int"},{"lineNumber":60,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"picasdan9"},"content":"    public int size() {"},{"lineNumber":62,"author":{"gitId":"picasdan9"},"content":"        return taskList.size();"},{"lineNumber":63,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":65,"author":{"gitId":"picasdan9"},"content":"  "},{"lineNumber":66,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":67,"author":{"gitId":"picasdan9"},"content":"     * Returns the string representation of taskList to be saved in data file"},{"lineNumber":68,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":69,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":70,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"picasdan9"},"content":"    public String toDataString() {"},{"lineNumber":72,"author":{"gitId":"picasdan9"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":73,"author":{"gitId":"picasdan9"},"content":"        for (Task task : taskList) {"},{"lineNumber":74,"author":{"gitId":"picasdan9"},"content":"        sb.append(task.toSavedString());"},{"lineNumber":75,"author":{"gitId":"picasdan9"},"content":"        sb.append(\"\\n\");"},{"lineNumber":76,"author":{"gitId":"picasdan9"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"picasdan9"},"content":"        return sb.toString();"},{"lineNumber":78,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":79}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"        super(description, isDone);"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Todo"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    "},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"    /** "},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"     * Returns a string representation of Todo to be saved in data file"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"     * "},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"     * @return String"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    public String toSavedString() {"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"        return String.format(\"T | %d | %s\", super.isDone ? 1 : 0, super.description);"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":32}},{"path":"src/test/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"public class StorageStub extends Storage {"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"    public StorageStub() throws IOException {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"        super(\"data/test.txt\");"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    public void write(String text) {}"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":12}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.io.PrintStream;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":"public class UiTest {"},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"  private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"  private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"  private final PrintStream originalOut \u003d System.out;"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"  private final PrintStream originalErr \u003d System.err;"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":"  @BeforeEach"},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"  public void setUpStreams() {"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    System.setOut(new PrintStream(outContent));"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    System.setErr(new PrintStream(errContent));"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":"  @AfterEach"},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"  public void restoreStreams() {"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    System.setOut(originalOut);"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"    System.setErr(originalErr);"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":"  @Test"},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"  public void testPrintLineBreak() {"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"    ui.printLineBreak();"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"    assertEquals(\"  ____________________________________________________________\\n\", outContent.toString());"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"  @Test"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"  public void testPrintIndented() {"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"    Ui ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"    ui.printIndented(\"testing\");"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"    assertEquals(\"    testing\\n\", outContent.toString());"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":43}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"import duke.DukeException;"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"import duke.StorageStub;"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"import duke.Ui;"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"import duke.task.TaskList;"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"import duke.task.Todo;"},{"lineNumber":18,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":19,"author":{"gitId":"picasdan9"},"content":"public class AddCommandTest {"},{"lineNumber":20,"author":{"gitId":"picasdan9"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"},{"lineNumber":21,"author":{"gitId":"picasdan9"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"},{"lineNumber":22,"author":{"gitId":"picasdan9"},"content":"    private final PrintStream originalOut \u003d System.out;"},{"lineNumber":23,"author":{"gitId":"picasdan9"},"content":"    private final PrintStream originalErr \u003d System.err;"},{"lineNumber":24,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":25,"author":{"gitId":"picasdan9"},"content":"    @BeforeEach"},{"lineNumber":26,"author":{"gitId":"picasdan9"},"content":"    public void setUpStreams() {"},{"lineNumber":27,"author":{"gitId":"picasdan9"},"content":"        System.setOut(new PrintStream(outContent));"},{"lineNumber":28,"author":{"gitId":"picasdan9"},"content":"        System.setErr(new PrintStream(errContent));"},{"lineNumber":29,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":31,"author":{"gitId":"picasdan9"},"content":"    @AfterEach"},{"lineNumber":32,"author":{"gitId":"picasdan9"},"content":"    public void restoreStreams() {"},{"lineNumber":33,"author":{"gitId":"picasdan9"},"content":"        System.setOut(originalOut);"},{"lineNumber":34,"author":{"gitId":"picasdan9"},"content":"        System.setErr(originalErr);"},{"lineNumber":35,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":37,"author":{"gitId":"picasdan9"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"picasdan9"},"content":"    public void testExecute() throws DukeException, IOException {"},{"lineNumber":39,"author":{"gitId":"picasdan9"},"content":"        AddCommand addCmd \u003d new AddCommand(new Todo(\"borrow book\"));"},{"lineNumber":40,"author":{"gitId":"picasdan9"},"content":"        addCmd.execute(new TaskList(), new Ui(), new StorageStub());"},{"lineNumber":41,"author":{"gitId":"picasdan9"},"content":"        assertEquals(\"        Got it. I\u0027ve added this task:\\n            [T][ ] borrow book\\n        Now you have 1 tasks in the list.\\n\", outContent.toString());"},{"lineNumber":42,"author":{"gitId":"picasdan9"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":43}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"  @Test "},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"  public void testToSavedString() {"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"    // test case 1"},{"lineNumber":10,"author":{"gitId":"picasdan9"},"content":"    Event evt1 \u003d new Event(\"team meeting\", \"2020-10-15\");"},{"lineNumber":11,"author":{"gitId":"picasdan9"},"content":"    assertEquals(\"E | 0 | team meeting | 2020-10-15\", evt1.toSavedString());"},{"lineNumber":12,"author":{"gitId":"picasdan9"},"content":""},{"lineNumber":13,"author":{"gitId":"picasdan9"},"content":"    // test case 2"},{"lineNumber":14,"author":{"gitId":"picasdan9"},"content":"    Event evt2 \u003d new Event(\"presentation\", true, \"2020-10-15\");"},{"lineNumber":15,"author":{"gitId":"picasdan9"},"content":"    assertEquals(\"E | 1 | presentation | 2020-10-15\", evt2.toSavedString());"},{"lineNumber":16,"author":{"gitId":"picasdan9"},"content":"  }"},{"lineNumber":17,"author":{"gitId":"picasdan9"},"content":"}"}],"authorContributionMap":{"picasdan9":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"picasdan9"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"picasdan9"},"content":"list"},{"lineNumber":3,"author":{"gitId":"picasdan9"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"picasdan9"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"picasdan9"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":6,"author":{"gitId":"picasdan9"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"picasdan9"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"picasdan9"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"picasdan9"},"content":"bye"}],"authorContributionMap":{"picasdan9":9}}]
