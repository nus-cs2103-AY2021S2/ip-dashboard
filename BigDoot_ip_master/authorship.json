[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BigDoot":14,"-":46}},{"path":"myData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"[E][X] work (at: home)"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"[T][X] sleep"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"[T][ ] clean home"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"[D][ ] hw (by: 2021-02-15)"}],"authorContributionMap":{"BigDoot":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that has a certain deadline to be met."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    protected LocalDate byDate;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Deadline object."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * @param   by           Due date of task."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.byDate \u003d parseDate(by);"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    private LocalDate parseDate(String str) {"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        return LocalDate.parse(str);"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Deadline Task."},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and deadline."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" * Represents a personal chatbot that helps the user keep track of their tasks."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"public class Duke extends Application {"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    private Storage storage;"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    private TaskList tasks;"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    private Scene scene;"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"//    public Duke() {"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"//"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"//    }"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"//    /**"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"//     * Constructor for this Duke object."},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"//     * @param   filePath  File path to save task to hard disk."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"//     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    public Duke() throws IOException, DukeException {"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"            this.storage \u003d new Storage(\"./myData.txt\");"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        storage.initialise(tasks);"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        //ui.initialise();"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"        //ui.tasksLeft(tasks);"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"    public TaskList getTaskList() {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"        return this.tasks;"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"    public Storage getStorage() {"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        return this.storage;"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"    public void start(Stage stage) {"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        //Step 1. Setting up required components"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"        userInput \u003d new TextField();"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"        stage.setScene(scene);"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"        stage.show();"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"        // more code to be added here later"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"        stage.setResizable(false);"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":105,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":106,"author":{"gitId":"BigDoot"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":107,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":108,"author":{"gitId":"BigDoot"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":109,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":110,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":111,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":112,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":113,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":114,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":115,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":116,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":117,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":118,"author":{"gitId":"BigDoot"},"content":"        // more code to be added here later"},{"lineNumber":119,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":120,"author":{"gitId":"BigDoot"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":121,"author":{"gitId":"BigDoot"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":122,"author":{"gitId":"BigDoot"},"content":"            handleUserInput();"},{"lineNumber":123,"author":{"gitId":"BigDoot"},"content":"        });"},{"lineNumber":124,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":125,"author":{"gitId":"BigDoot"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":126,"author":{"gitId":"BigDoot"},"content":"            handleUserInput();"},{"lineNumber":127,"author":{"gitId":"BigDoot"},"content":"        });"},{"lineNumber":128,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":129,"author":{"gitId":"BigDoot"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":130,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":131,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":132,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":133,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"BigDoot"},"content":"     * Iteration 1:"},{"lineNumber":136,"author":{"gitId":"BigDoot"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":137,"author":{"gitId":"BigDoot"},"content":"     * @param text String containing text to add"},{"lineNumber":138,"author":{"gitId":"BigDoot"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":139,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"BigDoot"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":141,"author":{"gitId":"BigDoot"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":142,"author":{"gitId":"BigDoot"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":143,"author":{"gitId":"BigDoot"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":144,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":145,"author":{"gitId":"BigDoot"},"content":"        return textToAdd;"},{"lineNumber":146,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":148,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"BigDoot"},"content":"     * Iteration 2:"},{"lineNumber":150,"author":{"gitId":"BigDoot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":151,"author":{"gitId":"BigDoot"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":152,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"BigDoot"},"content":"//    private void handleUserInput() {"},{"lineNumber":154,"author":{"gitId":"BigDoot"},"content":"//        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":155,"author":{"gitId":"BigDoot"},"content":"//        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":156,"author":{"gitId":"BigDoot"},"content":"//        dialogContainer.getChildren().addAll("},{"lineNumber":157,"author":{"gitId":"BigDoot"},"content":"//                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":158,"author":{"gitId":"BigDoot"},"content":"//                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":159,"author":{"gitId":"BigDoot"},"content":"//        );"},{"lineNumber":160,"author":{"gitId":"BigDoot"},"content":"//        userInput.clear();"},{"lineNumber":161,"author":{"gitId":"BigDoot"},"content":"//    }"},{"lineNumber":162,"author":{"gitId":"BigDoot"},"content":"    private void handleUserInput() {"},{"lineNumber":163,"author":{"gitId":"BigDoot"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":164,"author":{"gitId":"BigDoot"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":165,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":166,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getUserDialog(input, new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"))),"},{"lineNumber":167,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(response, new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")))"},{"lineNumber":168,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":169,"author":{"gitId":"BigDoot"},"content":"        userInput.clear();"},{"lineNumber":170,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":172,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"BigDoot"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":174,"author":{"gitId":"BigDoot"},"content":"     * Replace this stub with your completed method."},{"lineNumber":175,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"BigDoot"},"content":"    public String getResponse(String input) {"},{"lineNumber":177,"author":{"gitId":"BigDoot"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":178,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"BigDoot"},"content":"     * Runs Duke, allowing it to start serving the user."},{"lineNumber":181,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":182,"author":{"gitId":"BigDoot"},"content":"    public void run() throws DukeException, IOException {"},{"lineNumber":183,"author":{"gitId":"BigDoot"},"content":"        storage.initialise(tasks);"},{"lineNumber":184,"author":{"gitId":"BigDoot"},"content":"        ui.initialise();"},{"lineNumber":185,"author":{"gitId":"BigDoot"},"content":"        ui.tasksLeft(tasks);"},{"lineNumber":186,"author":{"gitId":"BigDoot"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":187,"author":{"gitId":"BigDoot"},"content":"        String str \u003d sc.nextLine();"},{"lineNumber":188,"author":{"gitId":"BigDoot"},"content":"        while (!str.equals(\"bye\")) {"},{"lineNumber":189,"author":{"gitId":"BigDoot"},"content":"            Parser.parse(tasks, str);"},{"lineNumber":190,"author":{"gitId":"BigDoot"},"content":"            str \u003d sc.nextLine();"},{"lineNumber":191,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"BigDoot"},"content":"        storage.finalise(tasks);"},{"lineNumber":193,"author":{"gitId":"BigDoot"},"content":"        ui.finalise();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":196,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the customer."},{"lineNumber":198,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"BigDoot"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":200,"author":{"gitId":"BigDoot"},"content":"        //new Duke(\"./myData.txt\").run();"},{"lineNumber":201,"author":{"gitId":"BigDoot"},"content":"        new Duke().run();"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BigDoot":200,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Handles errors from Duke such as incorrect input from users."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Duke object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     * @param   s  Error message to be displayed."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public DukeException(String s) {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        super(s);"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is an event at a certain location."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Event object."},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * @param   at           Location of task."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Event Task."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and location."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":25}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    public Main() throws IOException, DukeException {"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(Ui.initialise(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    private void handleUserInput() throws DukeException, IOException {"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        String response \u003d Parser.parse(duke.getTaskList(), input);"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"        //String response \u003d duke.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        duke.getStorage().finalise(duke.getTaskList());"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":57}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Matcher;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Pattern;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Makes sense of user input and commands."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Parser object."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    public Parser() {"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Parses a given string such that Duke can understand commands."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     * @param  str The string to be parsed."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    public static String parse(TaskList tasks, String str) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        Pattern pDone \u003d Pattern.compile(\"^(done )([0-9]+)\");"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        Matcher mDone \u003d pDone.matcher(str);"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        Pattern pTodo \u003d Pattern.compile(\"^([Tt]odo )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        Matcher mTodo \u003d pTodo.matcher(str);"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"        Pattern pDeadline \u003d Pattern.compile(\"^([Dd]eadline )([a-zA-Z_0-9 ]*+)(\\\\/by )([a-zA-Z_0-9 -]*+)\");"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"        Matcher mDeadline \u003d pDeadline.matcher(str);"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"        Pattern pEvent \u003d Pattern.compile(\"^([Ee]vent )([a-zA-Z_0-9 ]*+)(\\\\/at )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        Matcher mEvent \u003d pEvent.matcher(str);"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        Pattern pDelete \u003d Pattern.compile(\"^(delete )([0-9]+)\");"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        Matcher mDelete \u003d pDelete.matcher(str);"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"        Pattern pFind \u003d Pattern.compile(\"^(find )([a-zA-Z_0-9 ]+)\");"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        Matcher mFind \u003d pFind.matcher((str));"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"        if (str.equals(\"list\")) {"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Here are the tasks in your tasks!\\n\";"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"            tasks.getNumItems();"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.printTasksToString();"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        } else if (mDone.find()) {"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Good job, I\u0027ve marked the task as done!\\n\";"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"            int n \u003d Integer.parseInt(mDone.group(2)) - 1;"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"            tasks.getAtInd(n).markAsDone();"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(n);"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        } else if (mTodo.find()) {"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"            output +\u003d mTodo.group(2) + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"            if (mTodo.group(2).equals(\"\")) {"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Todo cannot be empty!\");"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"            tasks.addTodo(mTodo.group(2));"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\\n\";"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\";"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"        } else if (mDeadline.find()) {"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"            if (mDeadline.group(2).equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Deadline cannot be empty!\");"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"            //output +\u003d mDeadline.group(4) + \"\\n\";"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"            tasks.addDeadline(mDeadline.group(2), mDeadline.group(4));"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\" + \"\\n\";"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\";"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"        } else if (mEvent.find()) {"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"            if (mEvent.group(2).equals(\"\")) {"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of an Event cannot be empty!\");"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"            tasks.addEvent(mEvent.group(2), mEvent.group(4));"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\" + \"\\n\";"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\";"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"        } else if (mDelete.find()) {"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Okay I have removed this task!\" + \"\\n\";"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"            int n \u003d Integer.parseInt(mDelete.group(2)) - 1;"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(n) + \"\\n\";"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"            tasks.deleteTask(n);"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks in the list.\";"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"        } else if (mFind.find()) {"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Here are the matching tasks in your list!\" + \"\\n\";"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"            String word \u003d mFind.group(2);"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.matchTasks(word);"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"            throw new DukeException(\"I don\u0027t know what that means!!!!\");"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":89}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":" * Deals with the loading and saving of tasks to the hard disk."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    protected String filePath;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    protected File saveFile;"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    protected FileWriter filewriter;"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Storage object."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     * @param   filePath  File path to save task to hard disk."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        this.saveFile \u003d new File(filePath);"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"     * Reads and adds saved tasks from the hard disk."},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"     * Creates a new save file if it does not exist."},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    public void initialise(TaskList tasks) throws IOException {"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        if (!saveFile.exists()) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"            boolean isCreated \u003d saveFile.createNewFile();"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"            if (isCreated) {"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"                System.out.println(\"New save file created!\");"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"                String taskStr \u003d fileScanner.nextLine();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"                char taskType \u003d taskStr.charAt(1);"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"                int len \u003d taskStr.length();"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"                    tasks.addTodo(taskStr.substring(7));"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027){"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (by: \");"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"                    tasks.addDeadline(taskStr.substring(7, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027){"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (at: \");"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"                    tasks.addEvent(taskStr.substring(7, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                if (taskStr.charAt(4) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"                    tasks.getAtInd(tasks.getNumItems() - 1).markAsDone();"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"     * Saves all tasks in the TaskList to the harddrive."},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"    public void finalise(TaskList tasks) throws IOException {"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumItems(); i++) {"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"            fw.write(tasks.getAtInd(i).save() + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        fw.close();"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents tasks the user wants to keep track of."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Task object."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * Checks and returns the status of the task."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * @return task status."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        return isDone ? \"[X] \" : \"[ ] \";"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * Sets the task isDone status to be true."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    public void markAsDone() {"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        return toString();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Task."},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     * @return task completion status and description."},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" * Manages a tasks of Tasks with the ability to add/remove tasks."},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected int numItems;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this TaskList object."},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    TaskList() {"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        this.numItems \u003d 0;"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * Returns the number of tasks in the TaskList."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     * @return the size of the TaskList."},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public int getNumItems() {"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        return this.numItems;"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * Adds a Todo Task to the TaskList"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public void addTodo(String str) {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Todo(str));"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"     * Adds a Deadline Task to the TaskList"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * @param  by  deadline of task."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    public void addDeadline(String str, String by) {"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Deadline(str, by));"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"     * Adds an Event Task to the TaskList"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"     * @param  at  location of Event task."},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"    public void addEvent(String str, String at) {"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Event(str, at));"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"     * Prints all tasks in the TaskList as a string"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"    public String printTasksToString() {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"            int index \u003d i + 1;"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"            output +\u003d index + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"     * Returns the task at the given index in the TaskList."},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the wanted task."},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"     * @return task at the given index in the TaskList."},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"    public Task getAtInd(int n) {"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        return tasks.get(n);"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"     * Deletes the task at the given index in the TaskList."},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the task to be deleted."},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"    public void deleteTask(int n) {"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"        tasks.remove(n);"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"        numItems--;"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"     * Prints the tasks which contain the given string."},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"     * @param str given keyword string"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"    public String matchTasks(String str) {"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"        int n \u003d 0;"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"            int index \u003d n + 1;"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"            if (tasks.get(i).toString().contains(str)) {"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"                output +\u003d index + \".\" + tasks.get(i);"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"                n++;"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":101}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is to be done without any conditions."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Todo object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Todo Task."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * @return type of task, task completion status and description."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Deals with the interactions with the user."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Ui object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    public Ui () {"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Greets the user."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public static String initialise() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"Hello I am\\n\" + logo + \"\\n\";"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"What can I do for you?\" + \"\\n\";"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"Type \\\"list\\\" to see your tasks!\" + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"---------------------------------\";"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * Tells the user how many tasks they have currently."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    public static String tasksLeft(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"You currently have \" + tasks.getNumItems() + \" tasks.\";"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     * Bids farewell to the user."},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    public void finalise() {"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"Bye friend, see you soon!\");"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"186.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateY\u003d\"30.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"BigDoot":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"768.0\" prefWidth\u003d\"532.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"458.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"456.0\" layoutY\u003d\"726.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"725.0\" prefWidth\u003d\"532.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"725.0\" prefWidth\u003d\"523.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"BigDoot":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: Dec 1 2019)\", deadline.toString());"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    public void saveTest() {"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: 2019-12-01)\", deadline.save());"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    public void getAtIndTest() {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test \");"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[T][ ] test \", taskList.getAtInd(0).toString());"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public void getNumItemsTest() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test1 \");"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test2 \");"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        assertEquals(2, taskList.getNumItems());"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"todo eat"}],"authorContributionMap":{"BigDoot":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"javac  ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"java ..\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"BigDoot":2,"-":19}}]
