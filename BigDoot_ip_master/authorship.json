[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BigDoot":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"Duke is a personal assistant that helps you keep track of your tasks! It supports the tracking of 3 kinds of tasks(todos, deadlines and events). You can use it to manage your daily tasks and check them off once done! Look below for the list of features as well as the command usage! Going through the usage guide below also serves as a quickstart guide on how to use Duke!"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"### Keep track of various tasks "},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"* Add todo tasks"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"* Add deadline tasks"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"* Add event tasks"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"### Manage your tasks"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"* List out your tasks"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"* Mark tasks as done"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"* Delete tasks"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"* Find tasks"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"* Add and look up additional information regarding tasks"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"### `todo` - Adds a todo task"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"Adds a task that you are planning to do into your list of tasks. This task should not have any restrictions on the deadline or location, else use *\u0027deadline\u0027* or *\u0027event\u0027* instead!"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"`todo (task)`"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"**Example of usage:** "},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"`todo wash clothes`"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"`Got it! I have added the following task:`"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"`[T][][] wash clothes`"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"`Now you have 1 tasks!`"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"Adds a task with a specified deadline into your list of tasks."},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"`deadline (task) /by (YYYY-MM-DD)`"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"`deadline Homework /by 2021-03-03`"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"`Got it! I have added the following task:`"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"`[D][][] Homework (by: March 3 2021)`"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"`Now you have 2 tasks!`"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"### `event` - Adds an event task"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"Adds a task with a specified location into your list of tasks."},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"`event (task) /at (location)`"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"`event dinner /at orchard road`"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"`Got it! I have added the following task:`"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"`[E][][] dinner (at: orchard road)`"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"`Now you have 3 tasks!`"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"### `list` - Lists out all your tasks"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"Shows a list of all your completed and uncompleted tasks, indexed from 1-n, where n is the total number of tasks you currently have."},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"`list`"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"`list`"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"`Here are your tasks!`"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"`1.[T][][] wash clothes`"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"`2.[D][][] Homework (by: March 3 2021)`"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"`3.[E][][] dinner (at: orchard road)`"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"### `done` - Marks a task as completed"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"Marks the specified task as completed. Specify the task using its index, which can be found by doing *\u0027list\u0027*."},{"lineNumber":105,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":106,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":107,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":108,"author":{"gitId":"BigDoot"},"content":"`done (task index)`"},{"lineNumber":109,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":110,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":111,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":112,"author":{"gitId":"BigDoot"},"content":"`done 2`"},{"lineNumber":113,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":114,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":115,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":116,"author":{"gitId":"BigDoot"},"content":"`Good job, I\u0027ve marked the task as done!`"},{"lineNumber":117,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":118,"author":{"gitId":"BigDoot"},"content":"`[D][X][] Homework (by: March 3 2021)`"},{"lineNumber":119,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":120,"author":{"gitId":"BigDoot"},"content":"### `delete` - Deletes a task"},{"lineNumber":121,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":122,"author":{"gitId":"BigDoot"},"content":"Deletes the specified task from your list. Specify the task using its index, which can be found by doing *\u0027list\u0027*."},{"lineNumber":123,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":124,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":125,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":126,"author":{"gitId":"BigDoot"},"content":"`delete (task index)`"},{"lineNumber":127,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":128,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":129,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":130,"author":{"gitId":"BigDoot"},"content":"`delete 2`"},{"lineNumber":131,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":132,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":133,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":134,"author":{"gitId":"BigDoot"},"content":"`Okay I have removed this task!`"},{"lineNumber":135,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":136,"author":{"gitId":"BigDoot"},"content":"`[D][X][] Homework (by: March 3 2021)`"},{"lineNumber":137,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":138,"author":{"gitId":"BigDoot"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":139,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":140,"author":{"gitId":"BigDoot"},"content":"### `find` - Finds and returns a task"},{"lineNumber":141,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":142,"author":{"gitId":"BigDoot"},"content":"Finds 1 or more tasks that contains the specified keyword."},{"lineNumber":143,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":144,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":145,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":146,"author":{"gitId":"BigDoot"},"content":"`find (keyword)`"},{"lineNumber":147,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":148,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":149,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":150,"author":{"gitId":"BigDoot"},"content":"`find wash`"},{"lineNumber":151,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":152,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":153,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":154,"author":{"gitId":"BigDoot"},"content":"`Here are the matching tasks in your list!`"},{"lineNumber":155,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":156,"author":{"gitId":"BigDoot"},"content":"`1.[T][][] wash clothes`"},{"lineNumber":157,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":158,"author":{"gitId":"BigDoot"},"content":"### `addinfo` - Adds additional information regard the specified task"},{"lineNumber":159,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":160,"author":{"gitId":"BigDoot"},"content":"Updates the specified task with additional information provided. Specify the task using its index, which can be found by doing *\u0027list\u0027*."},{"lineNumber":161,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":162,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":163,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":164,"author":{"gitId":"BigDoot"},"content":"`addinfo (task index) (info)`"},{"lineNumber":165,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":166,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":167,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":168,"author":{"gitId":"BigDoot"},"content":"`addinfo 1 gym clothes`"},{"lineNumber":169,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":170,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":171,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":172,"author":{"gitId":"BigDoot"},"content":"`I have added the additional info regarding this task!`"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"BigDoot"},"content":"### `info` - Retrieves additional information regarding the specified task"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"BigDoot"},"content":"Retrieves the additional information about the specified task, if any. Specify the task using its index, which can be found by doing *\u0027list\u0027*."},{"lineNumber":177,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":178,"author":{"gitId":"BigDoot"},"content":"A task that contains additional info is marked by [i] when *\u0027list\u0027* is called, as shown below:"},{"lineNumber":179,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":180,"author":{"gitId":"BigDoot"},"content":"`1.[T][][i] wash clothes`"},{"lineNumber":181,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":182,"author":{"gitId":"BigDoot"},"content":"`2.[E][][] dinner (at: orchard road)`"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"BigDoot"},"content":"**Format:**"},{"lineNumber":185,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":186,"author":{"gitId":"BigDoot"},"content":"`info (task index)`"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"BigDoot"},"content":"**Example of usage:**"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"BigDoot"},"content":"`info 1`"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"BigDoot"},"content":"**Expected outcome:**"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"BigDoot"},"content":"`Here is the additonal info regarding this task!`"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"BigDoot"},"content":"`gym clothes`"}],"authorContributionMap":{"BigDoot":179,"-":17}},{"path":"myData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"[T][X][i] eat"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" chicken"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"[D][X][i] hw (by: 2021-01-01)"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" 2103 tp"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"[E][ ][ ] bbq (at: ecp)"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"null"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"[D][ ][ ] hw (by: 2021-03-03)"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"null"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"[E][ ][ ] dinner (at: orchard road)"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"null"}],"authorContributionMap":{"BigDoot":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that has a certain deadline to be met."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected String byDeadline;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    protected LocalDate DeadlineDate;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Deadline object."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * @param   byDeadline   Due date of task."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    public Deadline(String description, String byDeadline) {"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.byDeadline \u003d byDeadline;"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        this.DeadlineDate \u003d parseDate(byDeadline);"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"     * Parses the date from a string into a LocalDate object."},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * @param str String of the deadline date of the task."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * @return LocalDate object representing the deadline of the task."},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    private LocalDate parseDate(String str) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"        return LocalDate.parse(str);"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + byDeadline + \")\";"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Deadline Task."},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and deadline."},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \""},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                + DeadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":54}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import java.util.Collections;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Deadline object."},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * @param   text  Text to be displayed."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     * @param   img   Image to be displayed."},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.load();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        dialog.setText(text);"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"    private void flip() {"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        Collections.reverse(tmp);"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"     * Returns a new DialogBox object for the user given a text and image."},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"     * @param   text  Text from the user to be displayed."},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"     * @param   img   User image to be displayed."},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        return new DialogBox(text, img);"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"     * Returns a new DialogBox object for the Duke given a text and image."},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"     * @param   text  Text from Duke to be displayed."},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"     * @param   img   Duke image to be displayed."},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"        db.flip();"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"        return db;"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":77}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":" * Represents a personal chatbot that helps the user keep track of their tasks."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"public class Duke extends Application {"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    private Storage storage;"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    private TaskList tasks;"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    private Scene scene;"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Duke object."},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    public Duke() throws IOException {"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"        this.storage \u003d new Storage(\"./myData.txt\");"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"        storage.initialise(tasks);"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    public TaskList getTaskList() {"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        return this.tasks;"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    public Storage getStorage() {"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        return this.storage;"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"    public void start(Stage stage) {"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        //Step 1. Setting up required components"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"        userInput \u003d new TextField();"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        stage.setScene(scene);"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        stage.show();"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"        stage.setResizable(false);"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"        // more code to be added here later"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"            handleUserInput();"},{"lineNumber":105,"author":{"gitId":"BigDoot"},"content":"        });"},{"lineNumber":106,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":107,"author":{"gitId":"BigDoot"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":108,"author":{"gitId":"BigDoot"},"content":"            handleUserInput();"},{"lineNumber":109,"author":{"gitId":"BigDoot"},"content":"        });"},{"lineNumber":110,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":111,"author":{"gitId":"BigDoot"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":112,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":113,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":115,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"BigDoot"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":117,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"BigDoot"},"content":"     * @param text String containing text to add"},{"lineNumber":119,"author":{"gitId":"BigDoot"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":120,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"BigDoot"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":122,"author":{"gitId":"BigDoot"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":123,"author":{"gitId":"BigDoot"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":124,"author":{"gitId":"BigDoot"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":125,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":126,"author":{"gitId":"BigDoot"},"content":"        return textToAdd;"},{"lineNumber":127,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":129,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"BigDoot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":131,"author":{"gitId":"BigDoot"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":132,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"BigDoot"},"content":"    private void handleUserInput() {"},{"lineNumber":134,"author":{"gitId":"BigDoot"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":135,"author":{"gitId":"BigDoot"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":136,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":137,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getUserDialog(input, new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"))),"},{"lineNumber":138,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(response, new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")))"},{"lineNumber":139,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":140,"author":{"gitId":"BigDoot"},"content":"        userInput.clear();"},{"lineNumber":141,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":143,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"BigDoot"},"content":"     * Allows Duke to response with the same input text."},{"lineNumber":145,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"BigDoot"},"content":"    public String getResponse(String input) {"},{"lineNumber":147,"author":{"gitId":"BigDoot"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":148,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":150,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"BigDoot"},"content":"     * Runs Duke, allowing it to start serving the user."},{"lineNumber":152,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"BigDoot"},"content":"    public void run() throws DukeException, IOException {"},{"lineNumber":154,"author":{"gitId":"BigDoot"},"content":"        storage.initialise(tasks);"},{"lineNumber":155,"author":{"gitId":"BigDoot"},"content":"        ui.initialise();"},{"lineNumber":156,"author":{"gitId":"BigDoot"},"content":"        ui.tasksLeft(tasks);"},{"lineNumber":157,"author":{"gitId":"BigDoot"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":158,"author":{"gitId":"BigDoot"},"content":"        String str \u003d sc.nextLine();"},{"lineNumber":159,"author":{"gitId":"BigDoot"},"content":"        while (!str.equals(\"bye\")) {"},{"lineNumber":160,"author":{"gitId":"BigDoot"},"content":"            Parser.parse(tasks, str);"},{"lineNumber":161,"author":{"gitId":"BigDoot"},"content":"            str \u003d sc.nextLine();"},{"lineNumber":162,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"BigDoot"},"content":"        storage.finalise(tasks);"},{"lineNumber":164,"author":{"gitId":"BigDoot"},"content":"        ui.finalise();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":167,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the customer."},{"lineNumber":169,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"BigDoot"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":171,"author":{"gitId":"BigDoot"},"content":"        new Duke().run();"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BigDoot":170,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Handles errors from Duke such as incorrect input from users."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Duke object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     * "},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     * @param   s  Error message to be displayed."},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    public DukeException(String s) {"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        super(s);"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is an event at a certain location."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Event object."},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     * @param   EventLocation           Location of task."},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    public Event(String description, String EventLocation) {"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        this.at \u003d EventLocation;"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Event Task."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and location."},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":27}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    public Main() throws IOException {"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(Ui.initialise(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    private void handleUserInput() throws DukeException, IOException {"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        String response \u003d Parser.parse(duke.getTaskList(), input);"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"        duke.getStorage().finalise(duke.getTaskList());"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":56}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Matcher;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Pattern;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Makes sense of user input and commands."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Parser object."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    public Parser() {"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Parses a given string such that Duke can understand commands."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * @param  str The string to be parsed."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    public static String parse(TaskList tasks, String str) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        Pattern pDone \u003d Pattern.compile(\"^(done )([0-9]+)\");"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        Matcher mDone \u003d pDone.matcher(str);"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        Pattern pTodo \u003d Pattern.compile(\"^([Tt]odo )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"        Matcher mTodo \u003d pTodo.matcher(str);"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"        Pattern pDeadline \u003d Pattern.compile(\"^([Dd]eadline )([a-zA-Z_0-9 ]*+)(\\\\/by )([a-zA-Z_0-9 -]*+)\");"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        Matcher mDeadline \u003d pDeadline.matcher(str);"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        Pattern pEvent \u003d Pattern.compile(\"^([Ee]vent )([a-zA-Z_0-9 ]*+)(\\\\/at )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        Matcher mEvent \u003d pEvent.matcher(str);"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        Pattern pDelete \u003d Pattern.compile(\"^(delete )([0-9]+)\");"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        Matcher mDelete \u003d pDelete.matcher(str);"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        Pattern pFind \u003d Pattern.compile(\"^(find )([a-zA-Z_0-9 ]+)\");"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        Matcher mFind \u003d pFind.matcher((str));"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"        Pattern pInfo \u003d Pattern.compile(\"^(info )([0-9]+)\");"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        Matcher mInfo \u003d pInfo.matcher((str));"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"        Pattern pAddInfo \u003d Pattern.compile(\"^(addinfo )([0-9]+)([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"        Matcher mAddInfo \u003d pAddInfo.matcher((str));"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        assert !str.isBlank() : \"No command given!\";"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        if (str.equals(\"list\")) {"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Here are your tasks!\\n\";"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"            tasks.getNumItems();"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.printTasksToString();"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        } else if (mDone.find()) {"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Good job, I\u0027ve marked the task as done!\\n\";"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"            int n \u003d Integer.parseInt(mDone.group(2)) - 1;"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"            tasks.getAtInd(n).markAsDone();"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(n);"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        } else if (mTodo.find()) {"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"            output +\u003d mTodo.group(2) + \"\\n\";"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"            if (mTodo.group(2).equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Todo cannot be empty!\");"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"            tasks.addTodo(mTodo.group(2));"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\\n\";"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks!\";"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"        } else if (mDeadline.find()) {"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"            if (mDeadline.group(2).equals(\"\")) {"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Deadline cannot be empty!\");"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"            tasks.addDeadline(mDeadline.group(2), mDeadline.group(4));"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\" + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks!\";"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        } else if (mEvent.find()) {"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"            if (mEvent.group(2).equals(\"\")) {"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of an Event cannot be empty!\");"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"            tasks.addEvent(mEvent.group(2), mEvent.group(4));"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Got it!. I have added the following task:\" + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(tasks.getNumItems() - 1) + \"\\n\";"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks!\";"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"        } else if (mDelete.find()) {"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Okay I have removed this task!\" + \"\\n\";"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"            int index \u003d Integer.parseInt(mDelete.group(2)) - 1;"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(index) + \"\\n\";"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"            tasks.deleteTask(index);"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Now you have \" + tasks.getNumItems() + \" tasks!\";"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"        } else if (mFind.find()) {"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Here are the matching tasks in your list!\" + \"\\n\";"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"            String word \u003d mFind.group(2);"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.matchTasks(word);"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"        } else if (mInfo.find()) {"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"Here is the additional info regarding this task!\" + \"\\n\";"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"            int index \u003d Integer.parseInt(mInfo.group(2)) - 1;"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"            output +\u003d tasks.getAtInd(index).getAdditionalInfo() + \"\\n\";"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"        } else if (mAddInfo.find()) {"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"I have added the additional info regarding this task!\" + \"\\n\";"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"            int index \u003d Integer.parseInt(mAddInfo.group(2)) - 1;"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"            tasks.getAtInd(index).moreInfo \u003d mAddInfo.group(3);"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"            output +\u003d \"I do not understand what that means!\";"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":104}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":" * Deals with the loading and saving of tasks to the hard disk."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    protected String filePath;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    protected File saveFile;"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Storage object."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     * @param   filePath  File path to save task to hard disk."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public Storage(String filePath) {"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        this.saveFile \u003d new File(filePath);"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"     * Reads and adds saved tasks from the hard disk."},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"     * Creates a new save file if it does not exist."},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    public void initialise(TaskList tasks) throws IOException {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"        if (!saveFile.exists()) {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"            boolean isCreated \u003d saveFile.createNewFile();"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"            if (isCreated) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"                System.out.println(\"New save file created!\");"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"                String taskStr \u003d fileScanner.nextLine();"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"                String taskInfo \u003d fileScanner.nextLine();"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"                char taskType \u003d taskStr.charAt(1);"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"                int len \u003d taskStr.length();"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"                    tasks.addTodo(taskStr.substring(10));"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027){"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (by: \");"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"                    tasks.addDeadline(taskStr.substring(10, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027){"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (at: \");"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"                    tasks.addEvent(taskStr.substring(10, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                if (taskStr.charAt(7) \u003d\u003d \u0027i\u0027) {"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                    tasks.getAtInd(tasks.getNumItems() - 1).moreInfo \u003d taskInfo;"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"                if (taskStr.charAt(4) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"                    tasks.getAtInd(tasks.getNumItems() - 1).markAsDone();"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"     * Saves all tasks in the TaskList to the hard drive."},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"    public void finalise(TaskList tasks) throws IOException {"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        assert !filePath.isBlank() : \"No file path specified\";"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumItems(); i++) {"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"            fw.write(tasks.getAtInd(i).save() + \"\\n\");"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"            fw.write(tasks.getAtInd(i).moreInfo + \"\\n\");"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        fw.close();"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents tasks the user wants to keep track of."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    protected String moreInfo;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Task object."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     * Checks and returns the status of the task."},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"     * @return task status."},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * Returns the additional info of the task."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"     * @return additional info of task."},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    public String getAdditionalInfo() {"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        return moreInfo \u003d\u003d null ? \"No additional info.\" : moreInfo;"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * Sets the task isDone status to be true."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    public void markAsDone() {"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"        return toString();"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Task."},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"     * @return task completion status and description."},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"        if (this.moreInfo !\u003d null) {"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"            return this.getStatusIcon() + \"[i] \" + this.description;"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"            return this.getStatusIcon() + \"[ ] \" + this.description;"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":65}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" * Manages a tasks of Tasks with the ability to add/remove tasks."},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected int numItems;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this TaskList object."},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    TaskList() {"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        this.numItems \u003d 0;"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * Returns the number of tasks in the TaskList."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"     * @return the size of the TaskList."},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    public int getNumItems() {"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        return this.numItems;"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * Adds a Todo Task to the TaskList."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    public void addTodo(String str) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Todo(str));"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * Adds a Deadline Task to the TaskList."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"     * @param  by  deadline of task."},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    public void addDeadline(String str, String by) {"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Deadline(str, by));"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"     * Adds an Event Task to the TaskList."},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"     * @param  at  location of Event task."},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"    public void addEvent(String str, String at) {"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Event(str, at));"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"     * Prints all tasks in the TaskList as a string."},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"    public String printTasksToString() {"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"            int index \u003d i + 1;"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"            output +\u003d index + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"     * Returns the task at the given index in the TaskList."},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the wanted task."},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"     * @return task at the given index in the TaskList."},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"    public Task getAtInd(int n) {"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        assert n \u003c tasks.size();"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"        return tasks.get(n);"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"     * Deletes the task at the given index in the TaskList."},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the task to be deleted."},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"    public void deleteTask(int n) {"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"        assert n \u003c tasks.size();"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"        tasks.remove(n);"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"        numItems--;"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"     * Prints the tasks which contain the given string."},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"BigDoot"},"content":"     * @param str given keyword string"},{"lineNumber":97,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"BigDoot"},"content":"    public String matchTasks(String str) {"},{"lineNumber":99,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":100,"author":{"gitId":"BigDoot"},"content":"        int n \u003d 0;"},{"lineNumber":101,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":102,"author":{"gitId":"BigDoot"},"content":"            int index \u003d n + 1;"},{"lineNumber":103,"author":{"gitId":"BigDoot"},"content":"            if (tasks.get(i).toString().contains(str)) {"},{"lineNumber":104,"author":{"gitId":"BigDoot"},"content":"                output +\u003d index + \".\" + tasks.get(i);"},{"lineNumber":105,"author":{"gitId":"BigDoot"},"content":"                n++;"},{"lineNumber":106,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":109,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":110}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is to be done without any conditions."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Todo object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Todo Task."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     * @return type of task, task completion status and description."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":23}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Deals with the interactions with the user."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Ui object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    public Ui () {"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Greets the user."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public static String initialise() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"Hello I am\\n\" + logo + \"\\n\";"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"What can I do for you?\" + \"\\n\";"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"Type \\\"list\\\" to see your tasks!\" + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"---------------------------------\";"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * Tells the user how many tasks they have currently."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    public static String tasksLeft(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        String output \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        output +\u003d \"You currently have \" + tasks.getNumItems() + \" tasks.\";"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        return output;"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     * Bids farewell to the user."},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    public void finalise() {"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"Bye friend, see you soon!\");"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"186.0\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" translateY\u003d\"30.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"BigDoot":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"768.0\" prefWidth\u003d\"532.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"458.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"456.0\" layoutY\u003d\"726.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"725.0\" prefWidth\u003d\"532.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"725.0\" prefWidth\u003d\"523.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"BigDoot":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class DeadlineTest {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    public void toStringTest() {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: Dec 1 2019)\", deadline.toString());"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    public void saveTest() {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: 2019-12-01)\", deadline.save());"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":16}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    public void getAtIndTest() {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test \");"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[T][ ] test \", taskList.getAtInd(0).toString());"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public void getNumItemsTest() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test1 \");"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test2 \");"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        assertEquals(2, taskList.getNumItems());"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"todo eat"}],"authorContributionMap":{"BigDoot":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"javac  ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"java ..\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"BigDoot":2,"-":19}}]
