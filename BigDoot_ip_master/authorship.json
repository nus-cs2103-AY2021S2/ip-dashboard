[{"path":"myData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"[T][X] cry"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"[T][X] shout"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"[D][X] hw (by: 2019-12-01)"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"[T][X] eat"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"[E][ ] work (at: home)"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"[T][ ] sleep"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"[T][X] cry more"}],"authorContributionMap":{"BigDoot":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that has a certain deadline to be met."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    protected LocalDate byDate;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Deadline object."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * @param   by           Due date of task."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.byDate \u003d parseDate(by);"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    private LocalDate parseDate(String str) {"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        return LocalDate.parse(str);"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Deadline Task."},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and deadline."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Represents a personal chatbot that helps the user keep track of their tasks."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Duke object."},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * @param   filePath  File path to save task to hard disk."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    public Duke(String filePath) {"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"            this.storage \u003d new Storage(filePath);"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        } catch (IOException e) {"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"            e.printStackTrace();"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * Runs Duke, allowing it to start serving the user."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public void run() throws DukeException, IOException {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        storage.initialise(tasks);"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        ui.initialise();"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        ui.tasksLeft(tasks);"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        String str \u003d sc.nextLine();"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"        while (!str.equals(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"            Parser.parse(tasks, str);"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"            str \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"        storage.finalise(tasks);"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        ui.finalise();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the customer."},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"    public static void main(String[] args) throws DukeException, IOException {"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"        new Duke(\"./myData.txt\").run();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"BigDoot":46,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Handles errors from Duke such as incorrect input from users."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Duke object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     * @param   s  Error message to be displayed."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public DukeException(String s) {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        super(s);"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is an event at a certain location."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Event object."},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * @param   at           Location of task."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    public Event(String description, String at) {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.at \u003d at;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Event Task."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * @return the type of task, task completion status, and location."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":25}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Matcher;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.util.regex.Pattern;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" * Makes sense of user input and commands."},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Parser object."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    public Parser() {"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Parses a given string such that Duke can understand commands."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     * @param  str The string to be parsed."},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    public static void parse(TaskList tasks, String str) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        Pattern pDone \u003d Pattern.compile(\"^(done )([0-9]+)\");"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        Matcher mDone \u003d pDone.matcher(str);"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        Pattern pTodo \u003d Pattern.compile(\"^([Tt]odo )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"        Matcher mTodo \u003d pTodo.matcher(str);"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"        Pattern pDeadline \u003d Pattern.compile(\"^([Dd]eadline )([a-zA-Z_0-9 ]*+)(\\\\/by )([a-zA-Z_0-9 -]*+)\");"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"        Matcher mDeadline \u003d pDeadline.matcher(str);"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        Pattern pEvent \u003d Pattern.compile(\"^([Ee]vent )([a-zA-Z_0-9 ]*+)(\\\\/at )([a-zA-Z_0-9 ]*+)\");"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"        Matcher mEvent \u003d pEvent.matcher(str);"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        Pattern pDelete \u003d Pattern.compile(\"^(delete )([0-9]+)\");"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"        Matcher mDelete \u003d pDelete.matcher(str);"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"        Pattern pFind \u003d Pattern.compile(\"^(find )([a-zA-Z_0-9 ]+)\");"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"        Matcher mFind \u003d pFind.matcher((str));"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"        if (str.equals(\"list\")) {"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Here are the tasks in your tasks!\");"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"            tasks.getNumItems();"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"            tasks.printTasks();"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        } else if (mDone.find()) {"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Good job, I\u0027ve marked the task as done!\");"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"            int n \u003d Integer.parseInt(mDone.group(2)) - 1;"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"            tasks.getAtInd(n).markAsDone();"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"            System.out.println(tasks.getAtInd(n));"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"        } else if (mTodo.find()) {"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"            System.out.println(mTodo.group(2));"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"            if (mTodo.group(2).equals(\"\")) {"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Todo cannot be empty!\");"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"            tasks.addTodo(mTodo.group(2));"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Got it!. I have added the following task:\");"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"            System.out.println(tasks.getAtInd(tasks.getNumItems() - 1));"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\");"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        } else if (mDeadline.find()) {"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"            if (mDeadline.group(2).equals(\"\")) {"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of a Deadline cannot be empty!\");"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"            System.out.println(mDeadline.group(4));"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"            tasks.addDeadline(mDeadline.group(2), mDeadline.group(4));"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Got it!. I have added the following task:\");"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"            System.out.println(tasks.getAtInd(tasks.getNumItems() - 1));"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\");"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"        } else if (mEvent.find()) {"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"            if (mEvent.group(2).equals(\"\")) {"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"                throw new DukeException(\"The description of an Event cannot be empty!\");"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"            tasks.addEvent(mEvent.group(2), mEvent.group(4));"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Got it!. I have added the following task:\");"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"            System.out.println(tasks.getAtInd(tasks.getNumItems() - 1));"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Now you have \" + tasks.getNumItems() + \" tasks in the tasks.\");"},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"        } else if (mDelete.find()) {"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Okay I have removed this task!\");"},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"            int n \u003d Integer.parseInt(mDelete.group(2)) - 1;"},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"            System.out.println(tasks.getAtInd(n));"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"            tasks.deleteTask(n);"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Now you have \" + tasks.getNumItems() + \" tasks in the list.\");"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"        } else if (mFind.find()) {"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"            System.out.println(\"Here are the matching tasks in your list!\");"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":"            String word \u003d mFind.group(2);"},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"            tasks.matchTasks(word);"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"            throw new DukeException(\"I don\u0027t know what that means!!!!\");"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":87}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":" * Deals with the loading and saving of tasks to the hard disk."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    protected String filePath;"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    protected File saveFile;"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    protected FileWriter filewriter;"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Storage object."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     * @param   filePath  File path to save task to hard disk."},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        this.saveFile \u003d new File(filePath);"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"     * Reads and adds saved tasks from the hard disk."},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"     * Creates a new save file if it does not exist."},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    public void initialise(TaskList tasks) throws IOException {"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        if (!saveFile.exists()) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"            boolean isCreated \u003d saveFile.createNewFile();"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"            if (isCreated) {"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"                System.out.println(\"New save file created!\");"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"            Scanner fileScanner \u003d new Scanner(saveFile);"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"            while (fileScanner.hasNext()) {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"                String taskStr \u003d fileScanner.nextLine();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"                char taskType \u003d taskStr.charAt(1);"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"                int len \u003d taskStr.length();"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"                if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"                    tasks.addTodo(taskStr.substring(7));"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027D\u0027){"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (by: \");"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"                    tasks.addDeadline(taskStr.substring(7, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027){"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"                    int ind \u003d taskStr.indexOf(\" (at: \");"},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"                    tasks.addEvent(taskStr.substring(7, ind + 1), taskStr.substring(ind + 6, len - 1));"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"                if (taskStr.charAt(4) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"                    tasks.getAtInd(tasks.getNumItems() - 1).markAsDone();"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"     * Saves all tasks in the TaskList to the harddrive."},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":"    public void finalise(TaskList tasks) throws IOException {"},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"        FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumItems(); i++) {"},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"            fw.write(tasks.getAtInd(i).save() + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"        fw.close();"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":71}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents tasks the user wants to keep track of."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Task object."},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"     * Checks and returns the status of the task."},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * @return task status."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        return isDone ? \"[X] \" : \"[ ] \";"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * Sets the task isDone status to be true."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"    public void markAsDone() {"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"     * Converts information about the task to be saved to hard disk."},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     * @return string containing information about the task."},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    public String save() {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        return toString();"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Task."},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"     * @return task completion status and description."},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":" * Manages a tasks of Tasks with the ability to add/remove tasks."},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    protected ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    protected int numItems;"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this TaskList object."},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    TaskList() {"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        this.numItems \u003d 0;"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"     * Returns the number of tasks in the TaskList."},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"     * @return the size of the TaskList."},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"    public int getNumItems() {"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"        return this.numItems;"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * Adds a Todo Task to the TaskList"},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"    public void addTodo(String str) {"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Todo(str));"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"     * Adds a Deadline Task to the TaskList"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"     * @param  by  deadline of task."},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"BigDoot"},"content":"    public void addDeadline(String str, String by) {"},{"lineNumber":41,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Deadline(str, by));"},{"lineNumber":42,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":43,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":45,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"BigDoot"},"content":"     * Adds an Event Task to the TaskList"},{"lineNumber":47,"author":{"gitId":"BigDoot"},"content":"     * @param  str description of the task."},{"lineNumber":48,"author":{"gitId":"BigDoot"},"content":"     * @param  at  location of Event task."},{"lineNumber":49,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"BigDoot"},"content":"    public void addEvent(String str, String at) {"},{"lineNumber":51,"author":{"gitId":"BigDoot"},"content":"        tasks.add(numItems, new Event(str, at));"},{"lineNumber":52,"author":{"gitId":"BigDoot"},"content":"        numItems++;"},{"lineNumber":53,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":55,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"BigDoot"},"content":"     * Prints all tasks in the TaskList"},{"lineNumber":57,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"BigDoot"},"content":"    public void printTasks() {"},{"lineNumber":59,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":60,"author":{"gitId":"BigDoot"},"content":"            System.out.println(i+1 + \".\" + tasks.get(i));"},{"lineNumber":61,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":64,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"BigDoot"},"content":"     * Returns the task at the given index in the TaskList."},{"lineNumber":66,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the wanted task."},{"lineNumber":67,"author":{"gitId":"BigDoot"},"content":"     * @return task at the given index in the TaskList."},{"lineNumber":68,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"BigDoot"},"content":"    public Task getAtInd(int n) {"},{"lineNumber":70,"author":{"gitId":"BigDoot"},"content":"        return tasks.get(n);"},{"lineNumber":71,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":73,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"BigDoot"},"content":"     * Deletes the task at the given index in the TaskList."},{"lineNumber":75,"author":{"gitId":"BigDoot"},"content":"     * @param n index of the task to be deleted."},{"lineNumber":76,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"BigDoot"},"content":"    public void deleteTask(int n) {"},{"lineNumber":78,"author":{"gitId":"BigDoot"},"content":"        tasks.remove(n);"},{"lineNumber":79,"author":{"gitId":"BigDoot"},"content":"        numItems--;"},{"lineNumber":80,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":82,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"BigDoot"},"content":"     * Prints the tasks which contain the given string."},{"lineNumber":84,"author":{"gitId":"BigDoot"},"content":"     * @param str given keyword string"},{"lineNumber":85,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"BigDoot"},"content":"    public void matchTasks(String str) {"},{"lineNumber":87,"author":{"gitId":"BigDoot"},"content":"        int n \u003d 0;"},{"lineNumber":88,"author":{"gitId":"BigDoot"},"content":"        for (int i \u003d 0; i \u003c numItems; i++) {"},{"lineNumber":89,"author":{"gitId":"BigDoot"},"content":"            if (tasks.get(i).toString().contains(str)) {"},{"lineNumber":90,"author":{"gitId":"BigDoot"},"content":"                System.out.println(n+1 + \".\" + tasks.get(i));"},{"lineNumber":91,"author":{"gitId":"BigDoot"},"content":"                n++;"},{"lineNumber":92,"author":{"gitId":"BigDoot"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"BigDoot"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":95}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Represents a Task Object that is to be done without any conditions."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Todo object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     * @param   description  Task Description."},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"     * Returns a string representation of the Todo Task."},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"     * @return type of task, task completion status and description."},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":" * Deals with the interactions with the user."},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":" */"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"     * Constructor for this Ui object."},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    public Ui () {"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"     * Greets the user."},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public void initialise() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"Hello I am\\n\" + logo);"},{"lineNumber":21,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":22,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"---------------------------------\");"},{"lineNumber":23,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":25,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"BigDoot"},"content":"     * Tells the user how many tasks they have currently."},{"lineNumber":27,"author":{"gitId":"BigDoot"},"content":"     * @param  tasks The TaskList object containing all tasks."},{"lineNumber":28,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"BigDoot"},"content":"    public void tasksLeft(TaskList tasks) {"},{"lineNumber":30,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"You currently have \" + tasks.getNumItems() + \" tasks.\");"},{"lineNumber":31,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":33,"author":{"gitId":"BigDoot"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"BigDoot"},"content":"     * Bids farewell to the user."},{"lineNumber":35,"author":{"gitId":"BigDoot"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"BigDoot"},"content":"    public void finalise() {"},{"lineNumber":37,"author":{"gitId":"BigDoot"},"content":"        System.out.println(\"Bye friend, see you soon!\");"},{"lineNumber":38,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":39}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"    public void toStringTest() {"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: Dec 1 2019)\", deadline.toString());"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"    public void saveTest() {"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        Deadline deadline \u003d new Deadline(\"test \", \"2019-12-01\");"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[D][ ] test (by: 2019-12-01)\", deadline.save());"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":3,"author":{"gitId":"BigDoot"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":5,"author":{"gitId":"BigDoot"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"BigDoot"},"content":"    public void getAtIndTest() {"},{"lineNumber":8,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":9,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test \");"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"        assertEquals(\"[T][ ] test \", taskList.getAtInd(0).toString());"},{"lineNumber":11,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"BigDoot"},"content":""},{"lineNumber":13,"author":{"gitId":"BigDoot"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"BigDoot"},"content":"    public void getNumItemsTest() {"},{"lineNumber":15,"author":{"gitId":"BigDoot"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":16,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test1 \");"},{"lineNumber":17,"author":{"gitId":"BigDoot"},"content":"        taskList.addTodo(\"test2 \");"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"        assertEquals(2, taskList.getNumItems());"},{"lineNumber":19,"author":{"gitId":"BigDoot"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"BigDoot"},"content":"}"}],"authorContributionMap":{"BigDoot":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BigDoot"},"content":"todo eat"}],"authorContributionMap":{"BigDoot":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"BigDoot"},"content":"javac  ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"BigDoot"},"content":"java ..\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"BigDoot":2,"-":19}}]
