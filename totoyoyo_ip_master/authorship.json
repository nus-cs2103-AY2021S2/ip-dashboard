[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"totoyoyo":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"    compile \u0027org.ocpsoft.prettytime:prettytime-nlp:5.0.0.Final\u0027"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    mainClassName \u003d \"gui.Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":"    enableAssertions \u003d true"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"totoyoyo":19,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"# Duke Task Manager"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"## User Guide : Features"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"### Add todo"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"Add a simple todo task"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"`todo \u003cTEXT\u003e `"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"Example : `todo go to school `"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"### Add event"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"Add an event with a date. This date can be written in natural English."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"`event \u003cTEXT\u003e /at \u003cTIME\u003e`"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"Example : `event attend birthday party /at tomorrow`"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"### Add deadline"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"Add a deadline with a due date. This date can be written in natural English."},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"`deadline \u003cTEXT\u003e /by \u003cTIME\u003e`"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"Example : `deadline finish swe hw /by monday`"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"### Show tasks using list"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"Show all task with an order"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"`list`"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"### Mark task as done"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"Mark any task as done"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"`done \u003cTASK_INDEX\u003e`"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"Example : `done 1`"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"### Delete task"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"Delete a task from the list"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"`delete \u003cTASK_INDEX\u003e`"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"Example : `delete 2`"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"### Clearing all tasks"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"Remove all tasks"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"`clear`"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"### Finding a task"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"Searching the tasks by description"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"`find \u003cSEARCH_TEXT\u003e`"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":"Example : `find birthday`"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"### Save"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"This manually saves the file. The file is saved automatically after every edit (except clear)."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"totoyoyo"},"content":"`save`"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"totoyoyo"},"content":"### Bye to exit or quit"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"totoyoyo"},"content":"Quits the program"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"totoyoyo"},"content":"`bye`"}],"authorContributionMap":{"totoyoyo":60,"-":16}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"[T][X] call mom"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":"[E][ ] party (at: 2021-02-24)"},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"[D][ ] swe hw (by: 2021-02-22)"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"[T][ ] sleep"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"[E][ ] buy shoes (at: 2021-02-21)"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"[D][ ] watch movie (by: 2021-02-22)"}],"authorContributionMap":{"totoyoyo":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.DukeException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.Parser;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import helper.command.Command;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":" * Main class"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    private TaskList tasks;"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    private Parser parser;"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    private boolean isExit \u003d false;"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"     * Initializing duke"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"     * @param filePath"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    public Duke(String filePath) {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"        } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"            ui.showError(e.showError());"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"        parser \u003d new Parser();"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"    public String getResponse(String input) {"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"        String response \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"        assert response.equals(\"\");"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"            Command c \u003d parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"            response \u003d c.execute(tasks, ui, storage);"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"            isExit \u003d c.isExit();"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"        } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"            response \u003d ui.showError(e.getMessage());"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"        return response;"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"    public boolean getIsExit() {"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"        return isExit;"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":56}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"        return new DialogBox(text, img);"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":60}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"            stage.setTitle(\"Duke Task Manager\");"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            stage.setOnCloseRequest(event -\u003e Platform.exit());"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":35}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"     * Starting the window"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke.\\n\" + \"Please enter something below.\";"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"        duke \u003d d;"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"        assert duke !\u003d null;"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"        userInput.clear();"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"        if (duke.getIsExit()) {"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"            Platform.exit();"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":62}},{"path":"src/main/java/helper/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":" * Exception class for duke"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"    private String error;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"     * Make duke exception"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"     * @param errorMessage"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"        super(errorMessage);"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        error \u003d errorMessage;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"     * Show the error"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * @return String error"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    public String showError() {"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"        return error;"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":26}},{"path":"src/main/java/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.command.ClearCommand;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.command.Command;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import helper.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import helper.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import helper.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import helper.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import helper.command.SaveCommand;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":" * Parsing class"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"     * Parses the user input for duke"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"     * @param s User input"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"     * @return Command to execute"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * @throws DukeException"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    public Command parse(String s) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"        String[] strings \u003d s.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"        String firstWord \u003d strings[0];"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"            switch (firstWord) {"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"            case \"bye\":"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"                return new ExitCommand();"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            case \"list\":"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"                return new ListCommand();"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"            case \"done\":"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"                return new DoneCommand(strings[1]);"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"            case \"delete\":"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"                return new DeleteCommand(strings[1]);"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"            case \"todo\":"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"                return new AddCommand(firstWord, strings[1]);"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"            case \"event\":"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"                return new AddCommand(firstWord, strings[1]);"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"            case \"deadline\":"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"                return new AddCommand(firstWord, strings[1]);"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"            case \"find\":"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"                return new FindCommand(strings[1]);"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"            case \"clear\":"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"                return new ClearCommand();"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"            case \"save\":"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"                return new SaveCommand();"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"            default:"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"                throw new DukeException(\"Weird keyword...\");"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"            throw new DukeException(\"Invalid Command\");"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":56}},{"path":"src/main/java/helper/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import java.time.ZoneId;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"import org.ocpsoft.prettytime.nlp.PrettyTimeParser;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"import task.Deadline;"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"import task.Event;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"import task.Task;"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"import task.Todo;"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":" * Handles storage"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    private String filePath;"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    public Storage(String filePath) {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"     * Load the saved tasks (wip)"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"     * @return the list of tasks"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"     * @throws DukeException"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"    public List\u003cTask\u003e load() throws DukeException {"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"            Scanner myScanner \u003d new Scanner(myFile);"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"            while (myScanner.hasNextLine()) {"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"                String line \u003d myScanner.nextLine();"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"                parseLine(line, taskList);"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"            throw new DukeException(\"No such file\");"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"        return taskList;"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"     * Parse each line in saved file and update taskList"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"     * @param line String in the file"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"     * @param taskList the task list"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"    private void parseLine(String line, List\u003cTask\u003e taskList) {"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d null;"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"        int index \u003d line.indexOf(\"] \", -1);"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"        String boxes \u003d line.substring(0, index + 1);"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"        if (boxes.contains(\"[T]\")) {"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":"            task \u003d new Todo(line.substring(index + 2));"},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"        } else if (boxes.contains(\"[D]\")) {"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":"            int dateIndex \u003d line.indexOf(\" (by: \");"},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":"            String stringBeforeDate \u003d line.substring(index + 2, dateIndex);"},{"lineNumber":65,"author":{"gitId":"totoyoyo"},"content":"            LocalDate date \u003d parseTime(line.substring(dateIndex));"},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"            task \u003d new Deadline(stringBeforeDate, date);"},{"lineNumber":67,"author":{"gitId":"totoyoyo"},"content":"        } else if (boxes.contains(\"[E]\")) {"},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"            int dateIndex \u003d line.indexOf(\" (at: \");"},{"lineNumber":69,"author":{"gitId":"totoyoyo"},"content":"            String stringBeforeDate \u003d line.substring(index + 2, dateIndex);"},{"lineNumber":70,"author":{"gitId":"totoyoyo"},"content":"            LocalDate date \u003d parseTime(line.substring(dateIndex));"},{"lineNumber":71,"author":{"gitId":"totoyoyo"},"content":"            task \u003d new Event(stringBeforeDate, date);"},{"lineNumber":72,"author":{"gitId":"totoyoyo"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"totoyoyo"},"content":"            return;"},{"lineNumber":74,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"totoyoyo"},"content":"        handleDone(boxes, task);"},{"lineNumber":76,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":77,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":79,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"totoyoyo"},"content":"     * Handles the doneness of tasks"},{"lineNumber":81,"author":{"gitId":"totoyoyo"},"content":"     * @param boxes"},{"lineNumber":82,"author":{"gitId":"totoyoyo"},"content":"     * @param task"},{"lineNumber":83,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"totoyoyo"},"content":"    private void handleDone(String boxes, Task task) {"},{"lineNumber":85,"author":{"gitId":"totoyoyo"},"content":"        if (boxes.contains(\"[X]\")) {"},{"lineNumber":86,"author":{"gitId":"totoyoyo"},"content":"            task.setDone(true);"},{"lineNumber":87,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":90,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"totoyoyo"},"content":"     * Helps parse the time"},{"lineNumber":92,"author":{"gitId":"totoyoyo"},"content":"     * @param s String with time info"},{"lineNumber":93,"author":{"gitId":"totoyoyo"},"content":"     * @return date"},{"lineNumber":94,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"totoyoyo"},"content":"    private LocalDate parseTime(String s) {"},{"lineNumber":96,"author":{"gitId":"totoyoyo"},"content":"        List\u003cDate\u003e dates \u003d new PrettyTimeParser().parse(s);"},{"lineNumber":97,"author":{"gitId":"totoyoyo"},"content":"        Date date \u003d dates.get(0);"},{"lineNumber":98,"author":{"gitId":"totoyoyo"},"content":"        return LocalDate.ofInstant(date.toInstant(), ZoneId.systemDefault());"},{"lineNumber":99,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":101,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":102,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":103,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"totoyoyo"},"content":"     * Save the tasks"},{"lineNumber":105,"author":{"gitId":"totoyoyo"},"content":"     * @param taskList Tasklist"},{"lineNumber":106,"author":{"gitId":"totoyoyo"},"content":"     * @throws DukeException"},{"lineNumber":107,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"totoyoyo"},"content":"    public void saveFile(TaskList taskList) throws DukeException {"},{"lineNumber":109,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"totoyoyo"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":111,"author":{"gitId":"totoyoyo"},"content":"            if (myFile.exists()) {"},{"lineNumber":112,"author":{"gitId":"totoyoyo"},"content":"                myFile.delete();"},{"lineNumber":113,"author":{"gitId":"totoyoyo"},"content":"            } else {"},{"lineNumber":114,"author":{"gitId":"totoyoyo"},"content":"                myFile.createNewFile();"},{"lineNumber":115,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"totoyoyo"},"content":"            FileWriter myWriter \u003d new FileWriter(\"duke.txt\");"},{"lineNumber":117,"author":{"gitId":"totoyoyo"},"content":"            for (Task t: taskList.getTaskList()) {"},{"lineNumber":118,"author":{"gitId":"totoyoyo"},"content":"                myWriter.write(t.toString() + System.lineSeparator());"},{"lineNumber":119,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"totoyoyo"},"content":"            myWriter.close();"},{"lineNumber":121,"author":{"gitId":"totoyoyo"},"content":"        } catch (IOException e) {"},{"lineNumber":122,"author":{"gitId":"totoyoyo"},"content":"            throw new DukeException(\"Cannot save file. Do you have it open?\");"},{"lineNumber":123,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":125,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":126,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":128,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":128}},{"path":"src/main/java/helper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":" * List of tasks"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"     * Get task from index"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"     * @param index"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"     * @return"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"    public Task get(int index) {"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"        assert taskList !\u003d null;"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"        return taskList.get(index);"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"     * Add task"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"     * @param task"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"    public void add(Task task) {"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"        assert taskList !\u003d null;"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"     * Remove task"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"     * @param index"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"    public void remove(int index) {"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"        assert taskList !\u003d null;"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"        taskList.remove(index);"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"     * @return Size of tasklist"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"    public int size() {"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"        assert taskList !\u003d null;"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"        return taskList.size();"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"    public void clear() {"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":"        taskList.clear();"},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"totoyoyo"},"content":"     * Get task list as a List of tasks"},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"     * @return List of tasks"},{"lineNumber":67,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":69,"author":{"gitId":"totoyoyo"},"content":"        assert taskList !\u003d null;"},{"lineNumber":70,"author":{"gitId":"totoyoyo"},"content":"        return taskList;"},{"lineNumber":71,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":72}},{"path":"src/main/java/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":" * Class to handle the printing and display"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     * Show error s"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"     * @param s error"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    public String showError(String s) {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"        return s;"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * Print list of tasks"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     * @param ls list of tasks"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    public String listOfTaskToString(List\u003cTask\u003e ls) {"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"        StringBuilder initString \u003d new StringBuilder();"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"        for (int i \u003d 0; i \u003c ls.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"            initString.append((i + 1)).append(\". \").append(ls.get(i)).append(\"\\n\");"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"        return initString.toString();"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":31}},{"path":"src/main/java/helper/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import org.ocpsoft.prettytime.nlp.PrettyTimeParser;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import helper.DukeException;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"import task.Deadline;"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"import task.Event;"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"import task.Todo;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":" * Commands for adds (todo..., deadline..., event...)"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"public class AddCommand extends Command {"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    private final String whichAdd;"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    private final String addString;"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"     * Initialize the command"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"     * @param whichAdd"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"     * @param description"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"    public AddCommand(String whichAdd, String description) {"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"        this.whichAdd \u003d whichAdd;"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"        this.addString \u003d description;"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"     * Executes the parsed command"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"     * @param tasks"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"     * @param ui"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"     * @param storage"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"     * @return string to print"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":"     * @throws DukeException"},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"        String stringToReturn \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"        switch (whichAdd) {"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"        case \"todo\":"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"            Todo todo \u003d new Todo(addString);"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"            tasks.add(todo);"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"            stringToReturn \u003d (\"added new todo: \" + todo);"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"        case \"event\":"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"            String[] eventInfo \u003d addString.split(\" /at \");"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"                LocalDate date \u003d parseTime(eventInfo[1]);"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"                Event event \u003d new Event(eventInfo[0], date);"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"                tasks.add(event);"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"                stringToReturn \u003d (\"added new event: \" + event);"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"            } catch (Exception e) {"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"                throw new DukeException(\"Invalid event\");"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"            break;"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":"        case \"deadline\":"},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":"            String[] deadlineInfo \u003d addString.split(\" /by \");"},{"lineNumber":65,"author":{"gitId":"totoyoyo"},"content":"            try {"},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"                LocalDate date \u003d parseTime(deadlineInfo[1]);"},{"lineNumber":67,"author":{"gitId":"totoyoyo"},"content":"                Deadline deadline \u003d new Deadline(deadlineInfo[0], date);"},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"                tasks.add(deadline);"},{"lineNumber":69,"author":{"gitId":"totoyoyo"},"content":"                stringToReturn \u003d (\"added new deadline: \" + deadline);"},{"lineNumber":70,"author":{"gitId":"totoyoyo"},"content":"            } catch (Exception e) {"},{"lineNumber":71,"author":{"gitId":"totoyoyo"},"content":"                throw new DukeException(\"Invalid deadline\");"},{"lineNumber":72,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"totoyoyo"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"totoyoyo"},"content":"        default:"},{"lineNumber":75,"author":{"gitId":"totoyoyo"},"content":"            throw new DukeException(\"Invalid add\");"},{"lineNumber":76,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"totoyoyo"},"content":"        storage.saveFile(tasks);"},{"lineNumber":78,"author":{"gitId":"totoyoyo"},"content":"        return stringToReturn;"},{"lineNumber":79,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":81,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":82,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"totoyoyo"},"content":"     * Helps parse the time"},{"lineNumber":84,"author":{"gitId":"totoyoyo"},"content":"     * @param s with time info"},{"lineNumber":85,"author":{"gitId":"totoyoyo"},"content":"     * @return date"},{"lineNumber":86,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"totoyoyo"},"content":"    private LocalDate parseTime(String s) {"},{"lineNumber":88,"author":{"gitId":"totoyoyo"},"content":"        List\u003cDate\u003e dates \u003d new PrettyTimeParser().parse(s);"},{"lineNumber":89,"author":{"gitId":"totoyoyo"},"content":"        Date date \u003d dates.get(0);"},{"lineNumber":90,"author":{"gitId":"totoyoyo"},"content":"        return LocalDate.ofInstant(date.toInstant(), ZoneId.systemDefault());"},{"lineNumber":91,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":93,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":93}},{"path":"src/main/java/helper/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.DukeException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"public class ClearCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"        tasks.clear();"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"        storage.saveFile(tasks);"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"        return \"Cleared the task list! Please save to store changes.\";"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":15}},{"path":"src/main/java/helper/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.DukeException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" * Commands"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    protected boolean isExit;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        return isExit;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":21}},{"path":"src/main/java/helper/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":" * Commands for deletes"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    private String deleteString;"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    public DeleteCommand(String s) {"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"        deleteString \u003d s;"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"     * Delete the task from the tasklist"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"     * @param tasks"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * @param ui"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     * @param storage"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"        String stringToReturn \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"            int index \u003d Integer.parseInt(deleteString) - 1;"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"            stringToReturn \u003d (\"OK! We removed task: \" + deleteString + \". \" + tasks.get(index));"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"            tasks.remove(index);"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            storage.saveFile(tasks);"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"            stringToReturn \u003d (\"Please use a good index. Our list starts at 1...\""},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"                    + \" and ends at \" + (tasks.size() + 1));"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        return stringToReturn;"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":40}},{"path":"src/main/java/helper/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" * Commands for done"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    private String doneString;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    public DoneCommand(String s) {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        doneString \u003d s;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"     * Set the task as done"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * @param tasks"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     * @param ui"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"     * @param storage"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"        String stringToReturn \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"            int index \u003d Integer.parseInt(doneString) - 1;"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"            tasks.get(index).setDone(true);"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"            stringToReturn \u003d (\"Good! We finished task: \" + doneString + \". \" + tasks.get(index));"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"            storage.saveFile(tasks);"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"            stringToReturn \u003d (\"Please use a good index. Our list starts at 1...\""},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"                    + \" and ends at \" + (tasks.size() + 1));"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        return stringToReturn;"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":39}},{"path":"src/main/java/helper/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":" * Command to end duke"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"     * Tells duke to exit"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     * @param tasks"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"     * @param ui"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"     * @param storage"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"        super.isExit \u003d true;"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"        String stringToReturn \u003d (\"Bye!!!\");"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"        return stringToReturn;"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":23}},{"path":"src/main/java/helper/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"import task.Task;"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    private String toFind;"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    public FindCommand(String toFind) {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"        this.toFind \u003d toFind;"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    private List\u003cTask\u003e filterTasks(List\u003cTask\u003e listTask) {"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"        return listTask.stream().filter(t -\u003e t.getDescription().contains(toFind))"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"                .collect(Collectors.toList());"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e cloneList \u003d new ArrayList\u003c\u003e(tasks.getTaskList());"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"        return ui.listOfTaskToString(filterTasks(cloneList));"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":30}},{"path":"src/main/java/helper/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":" * Command to list all tasks"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     * Tell the UI to print tasks"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"     * @param tasks"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"     * @param ui"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"     * @param storage"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"            return ui.listOfTaskToString(tasks.getTaskList());"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"            return \"Nothing to list...\";"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":25}},{"path":"src/main/java/helper/command/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper.command;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import helper.DukeException;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import helper.Storage;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import helper.TaskList;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import helper.Ui;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"public class SaveCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"        storage.saveFile(tasks);"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"        return \"Saved to file!\";"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":14}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":" * Deadline tasks"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"public class Deadline extends Task {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    protected LocalDate by;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"     * Make deadline"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     * @param description"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"     * @param by"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"        this.by \u003d by;"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":25}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":" * Event tasks"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"public class Event extends Task {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    protected LocalDate at;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"     * Make event task"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     * @param description"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"     * @param at"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"        this.at \u003d at;"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":25}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":" * Represents a task"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"     * @param description"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"     * Sets the task\u0027s doneness to a boolean"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"     * @param b"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    public void setDone(boolean b) {"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"        isDone \u003d b;"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"    public String getDescription() {"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"        return description;"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"        return (getStatusIcon() + \" \" + description);"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"    public String getStatusIcon() {"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return tick or X symbols"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":39}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":" * Todo tasks"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":" */"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"totoyoyo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"totoyoyo":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"        assertEquals(2, 2);"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    void main() {"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"    void loop() {"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":23}},{"path":"src/test/java/helper/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package helper;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"import task.Task;"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"import task.Todo;"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"class TaskListTest {"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"    private TaskList taskList \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    void get() {"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d new Todo(\"For testing\");"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"        Task task1 \u003d taskList.get(0);"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"        assertSame(task, task1);"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"totoyoyo"},"content":"    void add() {"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d new Todo(\"For testing\");"},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e listOfTasks \u003d taskList.getTaskList();"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"        assertTrue(listOfTasks.contains(task));"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"    void remove() {"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d new Todo(\"For testing\");"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"        taskList.remove(0);"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e listOfTasks \u003d taskList.getTaskList();"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"        assertTrue(listOfTasks.isEmpty());"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":"    void size() {"},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d new Todo(\"For testing\");"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"        int size \u003d taskList.size();"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"        assertEquals(1, size);"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"    void clear() {"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"        Task task0 \u003d new Todo(\"For testing\");"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"        Task task1 \u003d new Todo(\"For testing\");"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task0);"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task1);"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":"        taskList.clear();"},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e listOfTasks \u003d taskList.getTaskList();"},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"        assertTrue(listOfTasks.isEmpty());"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":"    void getTaskList() {"},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":"        Task task \u003d new Todo(\"For testing\");"},{"lineNumber":65,"author":{"gitId":"totoyoyo"},"content":"        taskList.add(task);"},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e listOfTasks \u003d taskList.getTaskList();"},{"lineNumber":67,"author":{"gitId":"totoyoyo"},"content":"        assertTrue(listOfTasks.contains(task));"},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":69}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    private LocalDate localDate \u003d LocalDate.of(2021, 2, 1);"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    private Deadline deadline \u003d new Deadline(\"description\", localDate);"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    void testToString() {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        assertEquals(\"[D][ ] description (by: 2021-02-01)\", deadline.toString());"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":19,"author":{"gitId":"totoyoyo"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"totoyoyo"},"content":"    void testDone() {"},{"lineNumber":21,"author":{"gitId":"totoyoyo"},"content":"        deadline.setDone(true);"},{"lineNumber":22,"author":{"gitId":"totoyoyo"},"content":"        assertEquals(\"[D][X] description (by: 2021-02-01)\", deadline.toString());"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"random task"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":"todo nothing"},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"done 0"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"deadline do hw /by 11"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"event meetup /at 12"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"list"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"bye"}],"authorContributionMap":{"totoyoyo":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"totoyoyo":1,"-":20}}]
