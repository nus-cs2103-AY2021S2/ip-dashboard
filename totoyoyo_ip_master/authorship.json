[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"    protected LocalDate by;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"import java.io.File;  // Import the File class"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"import java.io.IOException;  // Import the IOException class to handle errors"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    private List commands;"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":23,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":24,"author":{"gitId":"totoyoyo"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \"Please enter list below\";"},{"lineNumber":25,"author":{"gitId":"totoyoyo"},"content":"        dukePrint(greeting);"},{"lineNumber":26,"author":{"gitId":"totoyoyo"},"content":"        loop();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":29,"author":{"gitId":"totoyoyo"},"content":"//    private static class DukeException extends Exception {"},{"lineNumber":30,"author":{"gitId":"totoyoyo"},"content":"//        public DukeException(String errorMessage) {"},{"lineNumber":31,"author":{"gitId":"totoyoyo"},"content":"//            super(errorMessage);"},{"lineNumber":32,"author":{"gitId":"totoyoyo"},"content":"//        }"},{"lineNumber":33,"author":{"gitId":"totoyoyo"},"content":"//    }"},{"lineNumber":34,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":35,"author":{"gitId":"totoyoyo"},"content":"    private static void loadFile() {"},{"lineNumber":36,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"totoyoyo"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":38,"author":{"gitId":"totoyoyo"},"content":"            Scanner myScanner \u003d new Scanner(myFile);"},{"lineNumber":39,"author":{"gitId":"totoyoyo"},"content":"        } catch (Exception e) {"},{"lineNumber":40,"author":{"gitId":"totoyoyo"},"content":"            System.out.println(\"There is no file to load. No problem!\");"},{"lineNumber":41,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":43,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":45,"author":{"gitId":"totoyoyo"},"content":"    private static void saveFile(List\u003cTask\u003e lt) {"},{"lineNumber":46,"author":{"gitId":"totoyoyo"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"totoyoyo"},"content":"            File myFile \u003d new File(\"duke.txt\");"},{"lineNumber":48,"author":{"gitId":"totoyoyo"},"content":"            if (myFile.exists()) {"},{"lineNumber":49,"author":{"gitId":"totoyoyo"},"content":"                myFile.delete(); //you might want to check if delete was successfull"},{"lineNumber":50,"author":{"gitId":"totoyoyo"},"content":"            } else {"},{"lineNumber":51,"author":{"gitId":"totoyoyo"},"content":"                myFile.createNewFile();"},{"lineNumber":52,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"totoyoyo"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"totoyoyo"},"content":"            System.out.println(\"Something bad happened\");"},{"lineNumber":55,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":58,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":59,"author":{"gitId":"totoyoyo"},"content":"    public static void dukePrint(String s) {"},{"lineNumber":60,"author":{"gitId":"totoyoyo"},"content":"        System.out.println(\"\\n----------------------\");"},{"lineNumber":61,"author":{"gitId":"totoyoyo"},"content":"        System.out.println(s);"},{"lineNumber":62,"author":{"gitId":"totoyoyo"},"content":"        System.out.println(\"----------------------\\n\");"},{"lineNumber":63,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":65,"author":{"gitId":"totoyoyo"},"content":"    public static void dukePrint(List\u003cTask\u003e ls) {"},{"lineNumber":66,"author":{"gitId":"totoyoyo"},"content":"        System.out.println(\"\\n----------------------\");"},{"lineNumber":67,"author":{"gitId":"totoyoyo"},"content":"        for (int i \u003d 0 ; i \u003c ls.size(); i++) {"},{"lineNumber":68,"author":{"gitId":"totoyoyo"},"content":"            System.out.print(i+1);"},{"lineNumber":69,"author":{"gitId":"totoyoyo"},"content":"            System.out.println(\". \" + ls.get(i) );"},{"lineNumber":70,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"totoyoyo"},"content":"        System.out.println(\"----------------------\\n\");"},{"lineNumber":72,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":74,"author":{"gitId":"totoyoyo"},"content":"    public static void loop() {"},{"lineNumber":75,"author":{"gitId":"totoyoyo"},"content":"        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":76,"author":{"gitId":"totoyoyo"},"content":"        boolean end \u003d false;"},{"lineNumber":77,"author":{"gitId":"totoyoyo"},"content":"        boolean change \u003d false;"},{"lineNumber":78,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":79,"author":{"gitId":"totoyoyo"},"content":"        List\u003cTask\u003e myList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":80,"author":{"gitId":"totoyoyo"},"content":"        loadFile();"},{"lineNumber":81,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":82,"author":{"gitId":"totoyoyo"},"content":"        while(!end) {"},{"lineNumber":83,"author":{"gitId":"totoyoyo"},"content":"            change \u003d false;"},{"lineNumber":84,"author":{"gitId":"totoyoyo"},"content":"            String s \u003d input.nextLine();"},{"lineNumber":85,"author":{"gitId":"totoyoyo"},"content":"            if (s.equals(\"bye\")) {"},{"lineNumber":86,"author":{"gitId":"totoyoyo"},"content":"                end \u003d true;"},{"lineNumber":87,"author":{"gitId":"totoyoyo"},"content":"                dukePrint(\"Bye bye! See you later!\");"},{"lineNumber":88,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.equals(\"list\")) {"},{"lineNumber":89,"author":{"gitId":"totoyoyo"},"content":"                dukePrint(myList);"},{"lineNumber":90,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.matches(\"done \\\\d+\")) {"},{"lineNumber":91,"author":{"gitId":"totoyoyo"},"content":"                s \u003d s.replaceAll(\"done \",\"\");"},{"lineNumber":92,"author":{"gitId":"totoyoyo"},"content":"                int index \u003d Integer.parseInt(s) - 1;"},{"lineNumber":93,"author":{"gitId":"totoyoyo"},"content":"                try {"},{"lineNumber":94,"author":{"gitId":"totoyoyo"},"content":"                    myList.get(index).isDone \u003d true;"},{"lineNumber":95,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"Good! We finished task: \" + s + \". \" + myList.get(index));"},{"lineNumber":96,"author":{"gitId":"totoyoyo"},"content":"                    change \u003d true;"},{"lineNumber":97,"author":{"gitId":"totoyoyo"},"content":"                } catch (Exception e) {"},{"lineNumber":98,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"Uhhh.... Our list starts at 1...\" +"},{"lineNumber":99,"author":{"gitId":"totoyoyo"},"content":"                            \" and ends at \" + (myList.size() + 1));"},{"lineNumber":100,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.matches(\"delete \\\\d+\")) {"},{"lineNumber":102,"author":{"gitId":"totoyoyo"},"content":"                s \u003d s.replaceAll(\"delete \",\"\");"},{"lineNumber":103,"author":{"gitId":"totoyoyo"},"content":"                int index \u003d Integer.parseInt(s) - 1;"},{"lineNumber":104,"author":{"gitId":"totoyoyo"},"content":"                try {"},{"lineNumber":105,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"OK! We removed task: \" + s + \". \" + myList.get(index));"},{"lineNumber":106,"author":{"gitId":"totoyoyo"},"content":"                    myList.remove(index);"},{"lineNumber":107,"author":{"gitId":"totoyoyo"},"content":"                    change \u003d true;"},{"lineNumber":108,"author":{"gitId":"totoyoyo"},"content":"                } catch (Exception e) {"},{"lineNumber":109,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"Uhhh.... Our list starts at 1...\" +"},{"lineNumber":110,"author":{"gitId":"totoyoyo"},"content":"                            \" and ends at \" + (myList.size() + 1));"},{"lineNumber":111,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.matches(\"deadline .+?( /by ).*\")) {"},{"lineNumber":113,"author":{"gitId":"totoyoyo"},"content":"                s \u003d s.replaceAll(\"deadline \",\"\");"},{"lineNumber":114,"author":{"gitId":"totoyoyo"},"content":"                String[] deadlineInfo \u003d s.split(\" /by \");"},{"lineNumber":115,"author":{"gitId":"totoyoyo"},"content":"                try {"},{"lineNumber":116,"author":{"gitId":"totoyoyo"},"content":"                    LocalDate d1 \u003d LocalDate.parse(deadlineInfo[1]);"},{"lineNumber":117,"author":{"gitId":"totoyoyo"},"content":"                    Deadline t \u003d new Deadline(deadlineInfo[0],d1);"},{"lineNumber":118,"author":{"gitId":"totoyoyo"},"content":"                    myList.add(t);"},{"lineNumber":119,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"added new deadline: \" + t);"},{"lineNumber":120,"author":{"gitId":"totoyoyo"},"content":"                    change \u003d true;"},{"lineNumber":121,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":122,"author":{"gitId":"totoyoyo"},"content":"                catch (Exception e) {"},{"lineNumber":123,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"Deadline must have something after \\\" /by \\\"!\");"},{"lineNumber":124,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.matches(\"event .+?( /at ).*\")) {"},{"lineNumber":126,"author":{"gitId":"totoyoyo"},"content":"                s \u003d s.replaceAll(\"event \",\"\");"},{"lineNumber":127,"author":{"gitId":"totoyoyo"},"content":"                String[] eventInfo \u003d s.split(\" /at \");"},{"lineNumber":128,"author":{"gitId":"totoyoyo"},"content":"                try {"},{"lineNumber":129,"author":{"gitId":"totoyoyo"},"content":"                    LocalDate d1 \u003d LocalDate.parse(eventInfo[1]);"},{"lineNumber":130,"author":{"gitId":"totoyoyo"},"content":"                    Event t \u003d new Event(eventInfo[0],d1);"},{"lineNumber":131,"author":{"gitId":"totoyoyo"},"content":"                    myList.add(t);"},{"lineNumber":132,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"added new event: \" + t);"},{"lineNumber":133,"author":{"gitId":"totoyoyo"},"content":"                    change \u003d true;"},{"lineNumber":134,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":135,"author":{"gitId":"totoyoyo"},"content":"                catch (Exception e) {"},{"lineNumber":136,"author":{"gitId":"totoyoyo"},"content":"                    dukePrint(\"Event must have something after \\\" /at \\\"!\");"},{"lineNumber":137,"author":{"gitId":"totoyoyo"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"totoyoyo"},"content":"            } else if (s.matches(\"todo .*\")) {"},{"lineNumber":139,"author":{"gitId":"totoyoyo"},"content":"                s \u003d s.replaceAll(\"todo \",\"\");"},{"lineNumber":140,"author":{"gitId":"totoyoyo"},"content":"                Todo t \u003d new Todo(s);"},{"lineNumber":141,"author":{"gitId":"totoyoyo"},"content":"                myList.add(t);"},{"lineNumber":142,"author":{"gitId":"totoyoyo"},"content":"                dukePrint(\"added new todo: \" + t);"},{"lineNumber":143,"author":{"gitId":"totoyoyo"},"content":"                change \u003d true;"},{"lineNumber":144,"author":{"gitId":"totoyoyo"},"content":"            } else {"},{"lineNumber":145,"author":{"gitId":"totoyoyo"},"content":"//                throw new DukeException(\"I don\u0027t get it\");"},{"lineNumber":146,"author":{"gitId":"totoyoyo"},"content":"//                Task t \u003d new Task(s);"},{"lineNumber":147,"author":{"gitId":"totoyoyo"},"content":"//                myList.add(t);"},{"lineNumber":148,"author":{"gitId":"totoyoyo"},"content":"                dukePrint(\"Please use todo, deadline, or event!\");"},{"lineNumber":149,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":150,"author":{"gitId":"totoyoyo"},"content":"            if (change) {"},{"lineNumber":151,"author":{"gitId":"totoyoyo"},"content":"                saveFile(myList);"},{"lineNumber":152,"author":{"gitId":"totoyoyo"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"totoyoyo"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"totoyoyo":145,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"    protected LocalDate at;"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"totoyoyo"},"content":"        return (getStatusIcon() + \" \"+ description);"},{"lineNumber":13,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":15,"author":{"gitId":"totoyoyo"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"totoyoyo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return tick or X symbols"},{"lineNumber":17,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":18}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":""},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"totoyoyo"},"content":"}"}],"authorContributionMap":{"totoyoyo":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"totoyoyo"},"content":"random task"},{"lineNumber":2,"author":{"gitId":"totoyoyo"},"content":"todo nothing"},{"lineNumber":3,"author":{"gitId":"totoyoyo"},"content":"done 0"},{"lineNumber":4,"author":{"gitId":"totoyoyo"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"totoyoyo"},"content":"deadline do hw /by 11"},{"lineNumber":6,"author":{"gitId":"totoyoyo"},"content":"event meetup /at 12"},{"lineNumber":7,"author":{"gitId":"totoyoyo"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"totoyoyo"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"totoyoyo"},"content":"list"},{"lineNumber":10,"author":{"gitId":"totoyoyo"},"content":"bye"}],"authorContributionMap":{"totoyoyo":10}}]
