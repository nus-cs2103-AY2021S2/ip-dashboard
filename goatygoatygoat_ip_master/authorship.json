[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"goatygoatygoat":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"Duke Chatbot is a chatbot app for managing tasks including todos, events, deadlines."},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1 "},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"Adding a todo task."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"### `todo` - Adds a todo task"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"Adds a todo task to the list of tasks in the computer."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"`todo tutorial`"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 2"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"Adding an event task."},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"### `event` - Adds an event task"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"Adds an event task with date to the list of tasks in the computer. Date must be formatted in *YYYY-MM-DD*."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"`event meeting /at 2021-01-01`"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 3"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"Adding a deadline task."},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"Adds a deadline task with date to the list of tasks in the computer. Date must be formatted in *YYYY-MM-DD*."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"`deadline homework /by 2021-02-02`"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 4"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"Displays the saved task list in the computer."},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"### `list` - Displays the tasks saved"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"Displays all the tasks saved in the task list in the computer."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"`list`"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 5"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"Marking a task in the saved task list in the computer as done."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"### `done` - Marks a task as done"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"Marks a task saved in the computer as done. The task number from the task list must be stated in the command."},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"`done 1`"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 6"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"Deleting a task in the saved task list in the computer."},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"### `delete` - Deletes a task"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"Deletes a task from the task list saved in the computer. The task number from the task list must be stated in the command."},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"`delete 1`"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 7"},{"lineNumber":84,"author":{"gitId":"goatygoatygoat"},"content":"Finding a task."},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":86,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":87,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":88,"author":{"gitId":"goatygoatygoat"},"content":"### `find` - Find a task"},{"lineNumber":89,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"Finds a task in the saved task list in the computer. "},{"lineNumber":91,"author":{"gitId":"goatygoatygoat"},"content":"The search is case-sensitive, and the order of keywords does not matter."},{"lineNumber":92,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":93,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":94,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":95,"author":{"gitId":"goatygoatygoat"},"content":"`find meeting`"},{"lineNumber":96,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":97,"author":{"gitId":"goatygoatygoat"},"content":"### Feature 8"},{"lineNumber":98,"author":{"gitId":"goatygoatygoat"},"content":"Editing the date of an event/deadline task."},{"lineNumber":99,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":100,"author":{"gitId":"goatygoatygoat"},"content":"## Usage"},{"lineNumber":101,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":102,"author":{"gitId":"goatygoatygoat"},"content":"### `update` - Edits the date of an event/ deadline task"},{"lineNumber":103,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":104,"author":{"gitId":"goatygoatygoat"},"content":"Edits the date of an event/deadline task in the saved task list in the computer. Date must be formatted in *YYYY-MM-DD*. "},{"lineNumber":105,"author":{"gitId":"goatygoatygoat"},"content":"The task number from the task list must be stated in the command."},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"goatygoatygoat"},"content":"Example of usage:"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"goatygoatygoat"},"content":"`update 2 2021-03-03`"}],"authorContributionMap":{"-":21,"goatygoatygoat":88}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Command."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Executes the command given by the user."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks user has saved"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param ui Handles interaction with user."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param storage Handles saving tasks to computer."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    abstract String execute(TaskList tasks,Ui ui, Storage storage);"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":13}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task with a deadline."},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private LocalDate deadline;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline which has not been done."},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in String."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, String deadline) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in String."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, String deadline, boolean done) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d done;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in LocalDate."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, LocalDate deadline, boolean done) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d done;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * Marks task as done."},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Completed task."},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        return new Deadline(this.name, this.deadline.toString(), true);"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * Sets the deadline to a new deadline."},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date New deadline."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Deadline with new deadline."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    Task set(String date) {"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"        return new Deadline(this.name, date, this.isDone);"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of Deadline this and Object obj."},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the Deadline class and all attributes are equivalent,"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof Deadline) {"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"            Deadline deadline \u003d (Deadline) obj;"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"            return deadline.name.equals(this.name)"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 (deadline.deadline.equals(this.deadline))"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"                            \u0026\u0026 (deadline.isDone \u003d\u003d this.isDone);"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":84,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":86,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents a Deadline instance in String."},{"lineNumber":88,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of Deadline."},{"lineNumber":89,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":92,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.isDone) {"},{"lineNumber":93,"author":{"gitId":"goatygoatygoat"},"content":"            return String.format(\"[D][X] %s (by: %s)\","},{"lineNumber":94,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.name,"},{"lineNumber":95,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":96,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"goatygoatygoat"},"content":"        return String.format(\"[D][ ] %s (by: %s)\","},{"lineNumber":98,"author":{"gitId":"goatygoatygoat"},"content":"                             this.name,"},{"lineNumber":99,"author":{"gitId":"goatygoatygoat"},"content":"                             this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":100,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":101}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task with a deadline."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private String deadline;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DeadlineCommand."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    DeadlineCommand(String name, String deadline) {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new Deadline(this.name, this.deadline);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.addTask(task.toString(), tasks.size());"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DeadlineCommand this and Object obj."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DeadlineCommand class and all attributes are equivalent,"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DeadlineCommand) {"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"            DeadlineCommand deadlineCommand \u003d (DeadlineCommand) obj;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"            return deadlineCommand.name.equals(this.name)"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 deadlineCommand.deadline.equals(this.deadline);"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":47}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the deletion of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private int taskNo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DeleteCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param taskNo Number corresponding to the task to be deleted."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    DeleteCommand(int taskNo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String task \u003d tasks.get(this.taskNo - 1).toString();"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.remove(this.taskNo - 1);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.delete(task, tasks.size());"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DeleteCommand this and Object obj."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DeleteCommand class and all attributes are equivalent,"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DeleteCommand) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            DeleteCommand deleteCommand \u003d (DeleteCommand) obj;"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return deleteCommand.taskNo \u003d\u003d this.taskNo;"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":43}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":" * containing text from the speaker."},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"public class DialogBox extends HBox {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    private Label dialog;"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    private ImageView displayPicture;"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DialogBox."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @param text Text in DialogBox."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * @param img Image in Dialogbox."},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        displayPicture.setImage(img);"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"     * Displays a DialogBox of the user."},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     * @param text Text user has inputted."},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * @param img Image representing the user."},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Dialogbox containing user input and image."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"        return new DialogBox(text, img);"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"     * Displays a DialogBox of Duke."},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"     * @param text Text Duke chatbot has outputted."},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"     * @param img Image representing Duke chatbot."},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Dialogbox containing Duke output and image."},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"        db.flip();"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"        return db;"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":75}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the completion of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DoneCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private int taskNo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DoneCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param taskNo Number corresponding to the completed task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    DoneCommand(int taskNo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.set(this.taskNo - 1, tasks.get(this.taskNo - 1).done());"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.done(tasks.get(this.taskNo - 1).toString());"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DoneCommand this and Object obj."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DoneCommand class and all attributes are equivalent,"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DoneCommand) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"            DoneCommand doneCommand \u003d (DoneCommand) obj;"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            return doneCommand.taskNo \u003d\u003d this.taskNo;"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":" * Represents the chatbot Duke."},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private Image userimg \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    private Image dukeimg \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Duke."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    public Duke() {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasks());"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * Allows user to start chatting with Duke."},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * @param input Command from user."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks user has saved."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    public String chat(String input, TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        String s \u003d \"\";"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            s \u003d command.execute(tasks, this.ui, this.storage);"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            s \u003d this.ui.showError(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        return s;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"     * Gets the appropriate response from duke."},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"     * @param input Command given by user."},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duke Duke chatbot."},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Appropriate response given command."},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    public String getResponse(String input, Duke duke) {"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        return duke.chat(input, duke.tasks);"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"     * Allows other classes to access the Ui of duke."},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Ui of duke."},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"    public Ui getUi() {"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"        return this.ui;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":57,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task which is an event."},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private LocalDate duration;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event which has not been done."},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in String."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, String duration) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d LocalDate.parse(duration);"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in String."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, String duration, boolean done) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d LocalDate.parse(duration);"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d done;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in LocalDate."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, LocalDate duration, boolean done) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d duration;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d done;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * Marks task as done."},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Completed task."},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        return new Event(this.name, this.duration.toString(), true);"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * Sets the duration to a new duration."},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date New duration."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Event with new duration."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    Task set(String date) {"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"        return new Event(this.name, date, this.isDone);"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of Event this and Object obj."},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the Event class and all attributes are equivalent,"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof Event) {"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"            Event event \u003d (Event) obj;"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"            return event.name.equals(this.name)"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 (event.duration.equals(this.duration))"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"                            \u0026\u0026 (event.isDone \u003d\u003d this.isDone);"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":84,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":86,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents an Event instance in String."},{"lineNumber":88,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of Event."},{"lineNumber":89,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":92,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.isDone) {"},{"lineNumber":93,"author":{"gitId":"goatygoatygoat"},"content":"            return String.format(\"[E][X] %s (at: %s)\","},{"lineNumber":94,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.name,"},{"lineNumber":95,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.duration.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":96,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"goatygoatygoat"},"content":"        return String.format(\"[E][ ] %s (at: %s)\","},{"lineNumber":98,"author":{"gitId":"goatygoatygoat"},"content":"                             this.name,"},{"lineNumber":99,"author":{"gitId":"goatygoatygoat"},"content":"                             this.duration.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":100,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":101}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task which is an event."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class EventCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String event;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private String date;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for EventCommand."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param event Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date Date of task."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    EventCommand(String event, String date) {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.event \u003d event;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new Event(this.event, this.date);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.addTask(task.toString(), tasks.size());"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of EventCommand this and Object obj."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the EventCommand class and all attributes are equivalent,"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof EventCommand) {"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"            EventCommand eventCommand \u003d (EventCommand) obj;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"            return eventCommand.event.equals(this.event) \u0026\u0026 eventCommand.date.equals(this.date);"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":46}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the termination of the program."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ExitCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.bye();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ExitCommand this and Object obj."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ExitCommand class and all attributes are equivalent,"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ExitCommand) {"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":30}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the search of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class FindCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for FindCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    FindCommand(String name) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String string \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            int index \u003d tasks.get(i).toString().indexOf(this.name);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            if (index \u003e\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"                string +\u003d String.valueOf(i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.find(string);"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of FindCommand this and Object obj."},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the FindCommand class and all attributes are equivalent,"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof FindCommand) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"            FindCommand findCommand \u003d (FindCommand) obj;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"            return findCommand.name.equals(this.name);"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":47}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents an exception which occurs when a command is incomplete."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class IncompleteCommandException extends Exception {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for IncompleteCommandException."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    IncompleteCommandException() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        super(\"The description cannot be empty.\");"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":12}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":" * Launches the application."},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":11}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the display of saved tasks."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ListCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        String list \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"            list +\u003d String.valueOf(i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.list(list);"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ListCommand this and Object obj."},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ListCommand class and all attributes are equivalent,"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ListCommand) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":34}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * Initialises Duke chatbot and starts conversation with user."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * @param d Duke chatbot."},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(d.getUi().welcome(), dukeImage));"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        duke \u003d d;"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        String response \u003d duke.getResponse(input, duke);"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        if (response.equals(duke.getUi().bye())) {"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"            Platform.exit();"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":59}},{"path":"src/main/java/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents an exception which occurs when a command is invalid."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class NoSuchCommandException extends Exception {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for NoSuchCommandException."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    NoSuchCommandException() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Parser which parses user inputs."},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns the appropriate command after parsing the input."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param input User input."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Relevant command."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws IncompleteCommandException If command is incomplete."},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws NoSuchCommandException If command does not exist."},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    static Command parse(String input) throws IncompleteCommandException, NoSuchCommandException {"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        Command command;"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new ListCommand();"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new DoneCommand(Integer.parseInt(input.substring(5)));"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new DeleteCommand(Integer.parseInt(input.substring(7)));"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new FindCommand(input.substring(5));"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new ToDoCommand(input.substring(5));"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"update\")) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"                String substring \u003d input.substring(7);"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"                int index \u003d substring.indexOf(\" \");"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"                int taskNo \u003d Integer.parseInt(substring.substring(0, index));"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"                assert isValidDate(substring.substring(index + 1)) \u003d\u003d true;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new UpdateCommand(taskNo, substring.substring(index + 1));"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"                int index \u003d input.indexOf(\"/at\");"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"                assert isValidDate(input.substring(index + 4)) \u003d\u003d true;"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new EventCommand(input.substring(6, index - 1), input.substring(index + 4));"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"                int index \u003d input.indexOf(\"/by\");"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"                assert isValidDate(input.substring(index + 4)) \u003d\u003d true;"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new DeadlineCommand(input.substring(9, index - 1), input.substring(index + 4));"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"            throw new NoSuchCommandException();"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"        return command;"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks if date given in String is in the valid format."},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date Date given by user."},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"     * @return The validity of the date formatting."},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"    static boolean isValidDate(String date) {"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"            LocalDate.parse(date);"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"            return false;"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"        return true;"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":82}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Storage used for loading files from and saving files into the user\u0027s computer."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    private static final String CURR_DIR \u003d System.getProperty(\"user.dir\");"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    private static final Path PATH \u003d Paths.get(CURR_DIR, \"data\");"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    private static final Path FILE \u003d Paths.get(CURR_DIR, \"data\", \"duke.txt\");"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     * Loads saved tasks from the user\u0027s computer."},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * @return List of saved tasks."},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws IOException if exception occurs when method is running."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"            if (!Files.exists(PATH)) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"                Files.createDirectory(PATH);"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            if (!Files.exists(FILE)) {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"                Files.createFile(FILE);"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            Scanner sc \u003d new Scanner(FILE);"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"                String task \u003d sc.nextLine();"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"                if (!task.isEmpty()) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"                    if (task.startsWith(\"[T]\")) {"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new ToDo(task.substring(7), done));"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"                    } else if (task.startsWith(\"[E]\")) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"                        int index \u003d task.indexOf(\u0027(\u0027);"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"                        int endIndex \u003d task.indexOf(\u0027)\u0027);"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"                        LocalDate date \u003d LocalDate.parse(task.substring(index + 5, endIndex),"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"                                                         DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new Event(task.substring(7, index - 1), date, done));"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"                    } else {"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"                        int index \u003d task.indexOf(\u0027(\u0027);"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"                        int endIndex \u003d task.indexOf(\u0027)\u0027);"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"                        LocalDate date \u003d LocalDate.parse(task.substring(index + 5, endIndex),"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"                                                         DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new Event(task.substring(7, index - 1), date, done));"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"            sc.close();"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"            return tasks;"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e);"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"            throw e;"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"     * Saves tasks into the user\u0027s computer."},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks to be saved."},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"    public void saveTasks(TaskList tasks) {"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"            String string \u003d \"\";"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"                string +\u003d tasks.get(i) + \"\\n\";"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"            Files.writeString(FILE, string);"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":82}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Dummy method."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * @return New Task."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        return new Task();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * Dummy method."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * @return New Task."},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    Task set(String date) {"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        return new Task();"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":21}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a list of Tasks."},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for an empty TaskList."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    TaskList() {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for TaskList."},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Tasks to be placed in TaskList."},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * Adds a task into the TaskList."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Task to be added."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    void add(Task task) {"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.add(task);"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * Removes a task from the TaskList."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be removed."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    void remove(int index) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.remove(index);"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns a task from the TaskList."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be returned."},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Relevant task."},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    Task get(int index) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        return this.tasks.get(index);"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     * Replaces a task in the TaskList."},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be replaced."},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Task to replace existing task."},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    void set(int index, Task task) {"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.set(index, task);"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns the number of tasks in TaskList."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Number of tasks."},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    int size() {"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"        return this.tasks.size();"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":65}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task which needs to be done."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDo which has not been done."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    ToDo(String name) {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDo."},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    ToDo(String name, boolean done) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        this.isDone \u003d done;"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * Marks task as done."},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Completed task."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        return new ToDo(this.name, true);"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    Task set(String date) {"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        return this;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ToDo this and Object obj."},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ToDo class and all attributes are equivalent,"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ToDo) {"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"            ToDo toDo \u003d (ToDo) obj;"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"            return toDo.name.equals(this.name) \u0026\u0026 (toDo.isDone \u003d\u003d this.isDone);"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents a ToDo instance in String."},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of ToDo."},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.isDone) {"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"            return \"[T][X] \" + this.name;"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"        return \"[T][ ] \" + this.name;"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":73}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task to be done."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String todo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDoCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param todo Name of task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    ToDoCommand(String todo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.todo \u003d todo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new ToDo(this.todo);"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.addTask(task.toString(), tasks.size());"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ToDoCommand this and Object obj."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ToDoCommand class and all attributes are equivalent,"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ToDoCommand) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            ToDoCommand toDoCommand \u003d (ToDoCommand) obj;"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return toDoCommand.todo.equals(this.todo);"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":43}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represent a Ui used for interacting with the user."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Welcomes the user."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    String welcome() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Hello! I\u0027m Duke. What can I do for you?\\n\";"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * Bids the user farewell."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    String bye() {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     * Displays the saved tasks of the user."},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     * @param list Saved tasks"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    String list(String list) {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Here are the tasks in your list:\\n\" + list;"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task is completed."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Completed task."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    String done(String task) {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task is deleted."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Deleted task."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Number of saved tasks after deleting."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    String delete(String task, int tasks) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\""},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                + String.format(\"Now you have %s tasks in the list.\", tasks);"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user of saved tasks found."},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * @param string Saved tasks found."},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"    String find(String string) {"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Here are the matching tasks in your list:\\n\" + string;"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task has been saved."},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Saved task."},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Number of tasks after saving."},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"    String addTask(String task, int tasks) {"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\""},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"                + String.format(\"Now you have %s tasks in the list.\", tasks);"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    String updateTask(String task) {"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"        return \"Noted. I\u0027ve edited this task:\\n\" + task;"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user to provide valid input."},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     * @param errormsg Error Message."},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"    String showError(String errormsg) {"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"        return errormsg;"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":75}},{"path":"src/main/java/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the editing of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class UpdateCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private int taskNo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private String date;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for UpdateCommand."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param taskNo Number corresponding to task to be edited."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date Date for edited task."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    UpdateCommand(int taskNo, String date) {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d tasks.get(this.taskNo - 1).set(this.date);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.set(this.taskNo - 1, task);"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        return ui.updateTask(task.toString());"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of UpdateCommand this and Object obj."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the UpdateCommand class and all attributes are equivalent,"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof UpdateCommand) {"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"            UpdateCommand updateCommand \u003d (UpdateCommand) obj;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"            return updateCommand.taskNo \u003d\u003d this.taskNo"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 updateCommand.date.equals(this.date);"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"goatygoatygoat":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"\u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"\u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"goatygoatygoat":19}},{"path":"src/main/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class ParserTest {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_validInput_success() throws NoSuchCommandException, IncompleteCommandException {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ListCommand(), Parser.parse(\"list\"));"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DoneCommand(1), Parser.parse(\"done 1\"));"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new FindCommand(\"hello\"), Parser.parse(\"find hello\"));"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ToDoCommand(\"homework\"), Parser.parse(\"todo homework\"));"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new EventCommand(\"concert\", \"2020-12-09\"),"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"                Parser.parse(\"event concert /at 2020-12-09\"));"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DeadlineCommand(\"tutorial\", \"2021-01-01\"),"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"                Parser.parse(\"deadline tutorial /by 2021-01-01\"));"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_invalidInput_incompleteCommandExceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"hello\", Parser.parse(\"todo\"));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            fail();"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"The description cannot be empty.\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_invalidInput_noSuchCommandExceptionThrown() {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"hello\", Parser.parse(\"hehe\"));"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            fail();"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :(\", e.getMessage());"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":41}},{"path":"src/main/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    void get() {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Deadline(\"tutorial\", \"2020-01-01\", true));"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"homework\"));"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Event(\"concert\", \"2020-01-02\", true));"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new Deadline(\"tutorial\", \"2020-01-01\", true), new TaskList(tasks).get(0));"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ToDo(\"homework\"), new TaskList(tasks).get(1));"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new Event(\"concert\", \"2020-01-02\", true), new TaskList(tasks).get(2));"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    void size() {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Deadline(\"tutorial\", \"2020-01-01\", true));"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"homework\"));"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Event(\"concert\", \"2020-01-02\", true));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(3, tasks.size());"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"something\"));"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(4, tasks.size());"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"deadline return book /by 2021-01-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"event project meeting /at 2021-01-18"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"find book"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"bye"}],"authorContributionMap":{"goatygoatygoat":11}}]
