[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Command."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public abstract class Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Executes the command given by the user."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks user has saved"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param ui Handles interaction with user."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param storage Handles saving tasks to computer."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    abstract void execute(TaskList tasks,Ui ui, Storage storage);"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns an indication of whether user wants to exit the program."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether user wants to exit the program."},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    abstract boolean isExit();"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":19}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task with a deadline."},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private LocalDate deadline;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean done;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline which has not been done."},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in String."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, String deadline) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d false;"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in String."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, String deadline, boolean done) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d LocalDate.parse(deadline);"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d done;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Deadline."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task in LocalDate."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    Deadline(String name, LocalDate deadline, boolean done) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d done;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        return new Deadline(this.name, this.deadline.toString(), true);"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of Deadline this and Object obj."},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the Deadline class and all attributes are equivalent,"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof Deadline) {"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"            Deadline deadline \u003d (Deadline) obj;"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"            return deadline.name.equals(this.name)"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 (deadline.deadline.equals(this.deadline))"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"                            \u0026\u0026 (deadline.done \u003d\u003d this.done);"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents a Deadline instance in String."},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of Deadline."},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.done) {"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"            return String.format(\"[D][X] %s (by: %s)\","},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.name,"},{"lineNumber":84,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"goatygoatygoat"},"content":"        return String.format(\"[D][ ] %s (by: %s)\","},{"lineNumber":87,"author":{"gitId":"goatygoatygoat"},"content":"                             this.name,"},{"lineNumber":88,"author":{"gitId":"goatygoatygoat"},"content":"                             this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":89,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":90}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task with a deadline."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private String deadline;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DeadlineCommand."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @param deadline Deadline of task."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    DeadlineCommand(String name, String deadline) {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new Deadline(this.name, this.deadline);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        ui.addTask(task.toString(), tasks.size());"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DeadlineCommand this and Object obj."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DeadlineCommand class and all attributes are equivalent,"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DeadlineCommand) {"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"            DeadlineCommand deadlineCommand \u003d (DeadlineCommand) obj;"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"            return deadlineCommand.name.equals(this.name)"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 deadlineCommand.deadline.equals(this.deadline);"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":55}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the deletion of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private int taskNo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DeleteCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param taskNo Number corresponding to the task to be deleted."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    DeleteCommand(int taskNo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String task \u003d tasks.get(this.taskNo - 1).toString();"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.remove(this.taskNo - 1);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        ui.delete(task, tasks.size());"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DeleteCommand this and Object obj."},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DeleteCommand class and all attributes are equivalent,"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DeleteCommand) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"            DeleteCommand deleteCommand \u003d (DeleteCommand) obj;"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"            return deleteCommand.taskNo \u003d\u003d this.taskNo;"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":51}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the completion of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class DoneCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private int taskNo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for DoneCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param taskNo Number corresponding to the completed task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    DoneCommand(int taskNo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.taskNo \u003d taskNo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.set(this.taskNo - 1, tasks.get(this.taskNo - 1).done());"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        ui.done(tasks.get(this.taskNo - 1).toString());"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of DoneCommand this and Object obj."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the DoneCommand class and all attributes are equivalent,"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof DoneCommand) {"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"            DoneCommand doneCommand \u003d (DoneCommand) obj;"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"            return doneCommand.taskNo \u003d\u003d this.taskNo;"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":50}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":" * Represents the chatbot Duke."},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Duke."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    Duke() {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            this.tasks \u003d new TaskList(this.storage.loadTasks());"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        duke.chat(scanner, duke.tasks);"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * Allows user to start chatting with Duke."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * @param scanner For user to input commands."},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks user has saved."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws IOException If exception occurs when method is running."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"    public void chat(Scanner scanner, TaskList tasks) throws IOException {"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        this.ui.welcome();"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"        boolean isExit \u003d false;"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        while (!isExit) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"                String input \u003d scanner.nextLine();"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"                Command command \u003d Parser.parse(input);"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"                command.execute(tasks, this.ui, this.storage);"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"                isExit \u003d command.isExit();"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"                this.ui.showError(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":50,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task which is an event."},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    private LocalDate duration;"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean done;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event which has not been done."},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in String."},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, String duration) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d LocalDate.parse(duration);"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d false;"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in String."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, String duration, boolean done) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d LocalDate.parse(duration);"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d done;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for Event."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param duration Date of task in LocalDate."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    Event(String name, LocalDate duration, boolean done) {"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        this.duration \u003d duration;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d done;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        return new Event(this.name, this.duration.toString(), true);"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of Event this and Object obj."},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the Event class and all attributes are equivalent,"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof Event) {"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"            Event event \u003d (Event) obj;"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"            return event.name.equals(this.name)"},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"                    \u0026\u0026 (event.duration.equals(this.duration))"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"                            \u0026\u0026 (event.done \u003d\u003d this.done);"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents an Event instance in String."},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of Event."},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.done) {"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"            return String.format(\"[E][X] %s (at: %s)\","},{"lineNumber":83,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.name,"},{"lineNumber":84,"author":{"gitId":"goatygoatygoat"},"content":"                                 this.duration.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":85,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"goatygoatygoat"},"content":"        return String.format(\"[E][ ] %s (at: %s)\","},{"lineNumber":87,"author":{"gitId":"goatygoatygoat"},"content":"                             this.name,"},{"lineNumber":88,"author":{"gitId":"goatygoatygoat"},"content":"                             this.duration.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"},{"lineNumber":89,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":90}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task which is an event."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class EventCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String event;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private String date;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for EventCommand."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param event Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @param date Date of task."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    EventCommand(String event, String date) {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.event \u003d event;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new Event(this.event, this.date);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        ui.addTask(task.toString(), tasks.size());"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of EventCommand this and Object obj."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the EventCommand class and all attributes are equivalent,"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof EventCommand) {"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"            EventCommand eventCommand \u003d (EventCommand) obj;"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"            return eventCommand.event.equals(this.event) \u0026\u0026 eventCommand.date.equals(this.date);"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":54}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the termination of the program."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ExitCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        ui.bye();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        return true;"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ExitCommand this and Object obj."},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ExitCommand class and all attributes are equivalent,"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ExitCommand) {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":38}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the search of a task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class FindCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for FindCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    FindCommand(String name) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        String string \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            int index \u003d tasks.get(i).toString().indexOf(this.name);"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"            if (index \u003e\u003d 0) {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"                string +\u003d String.valueOf(i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        ui.find(string);"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of FindCommand this and Object obj."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the FindCommand class and all attributes are equivalent,"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof FindCommand) {"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"            FindCommand findCommand \u003d (FindCommand) obj;"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"            return findCommand.name.equals(this.name);"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":55}},{"path":"src/main/java/IncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents an exception which occurs when a command is incomplete."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class IncompleteCommandException extends Exception {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for IncompleteCommandException."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    IncompleteCommandException() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        super(\"The description cannot be empty.\");"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":12}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the display of saved tasks."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ListCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        String list \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"            list +\u003d String.valueOf(i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        ui.list(list);"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ListCommand this and Object obj."},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ListCommand class and all attributes are equivalent,"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ListCommand) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":42}},{"path":"src/main/java/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents an exception which occurs when a command is invalid."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class NoSuchCommandException extends Exception {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for NoSuchCommandException."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    NoSuchCommandException() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :(\");"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Parser which parses user inputs."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns the appropriate command after parsing the input."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * @param input User input."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Relevant command."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws IncompleteCommandException If command is incomplete."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws NoSuchCommandException If command does not exist."},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    static Command parse(String input) throws IncompleteCommandException, NoSuchCommandException {"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        Command command;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new ExitCommand();"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new ListCommand();"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new DoneCommand(Integer.parseInt(input.substring(5)));"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"            command \u003d new DeleteCommand(Integer.parseInt(input.substring(7)));"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new FindCommand(input.substring(5));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"todo\")) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new ToDoCommand(input.substring(5));"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"                int index \u003d input.indexOf(\"/at\");"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new EventCommand(input.substring(6, index - 1), input.substring(index + 4));"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"                int index \u003d input.indexOf(\"/by\");"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"                command \u003d new DeadlineCommand(input.substring(9, index - 1), input.substring(index + 4));"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"            } catch (Exception e) {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"                throw new IncompleteCommandException();"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"            throw new NoSuchCommandException();"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"        return command;"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":54}},{"path":"src/main/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class ParserTest {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_validInput_success() throws NoSuchCommandException, IncompleteCommandException {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ListCommand(), Parser.parse(\"list\"));"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DoneCommand(1), Parser.parse(\"done 1\"));"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DeleteCommand(1), Parser.parse(\"delete 1\"));"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new FindCommand(\"hello\"), Parser.parse(\"find hello\"));"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ToDoCommand(\"homework\"), Parser.parse(\"todo homework\"));"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new EventCommand(\"concert\", \"2020-12-09\"),"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"                     Parser.parse(\"event concert /at 2020-12-09\"));"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new DeadlineCommand(\"tutorial\", \"2021-01-01\"),"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"                     Parser.parse(\"deadline tutorial /by 2021-01-01\"));"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_invalidInput_incompleteCommandExceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"hello\", Parser.parse(\"todo\"));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"            fail();"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"The description cannot be empty.\", e.getMessage());"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    void parse_invalidInput_noSuchCommandExceptionThrown() {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"hello\", Parser.parse(\"hehe\"));"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            fail();"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"            assertEquals(\"I\u0027m sorry, but I don\u0027t know what that means :(\", e.getMessage());"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":41}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Storage used for loading files from and saving files into the user\u0027s computer."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    private static final String CURR_DIR \u003d System.getProperty(\"user.dir\");"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    private static final Path PATH \u003d Paths.get(CURR_DIR, \"data\");"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    private static final Path FILE \u003d Paths.get(CURR_DIR, \"data\", \"duke.txt\");"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     * Loads saved tasks from the user\u0027s computer."},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     * @return List of saved tasks."},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"     * @throws IOException if exception occurs when method is running."},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"            if (!Files.exists(PATH)) {"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"                Files.createDirectory(PATH);"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"            if (!Files.exists(FILE)) {"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"                Files.createFile(FILE);"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"            Scanner sc \u003d new Scanner(FILE);"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"                String task \u003d sc.nextLine();"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"                if (!task.isEmpty()) {"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"                    if (task.startsWith(\"[T]\")) {"},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new ToDo(task.substring(7), done));"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"                    } else if (task.startsWith(\"[E]\")) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"                        int index \u003d task.indexOf(\u0027(\u0027);"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"                        int endIndex \u003d task.indexOf(\u0027)\u0027);"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"                        LocalDate date \u003d LocalDate.parse(task.substring(index + 5, endIndex),"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"                                                         DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new Event(task.substring(7, index - 1), date, done));"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"                    } else {"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"                        boolean done \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"                        int index \u003d task.indexOf(\u0027(\u0027);"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"                        int endIndex \u003d task.indexOf(\u0027)\u0027);"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"                        LocalDate date \u003d LocalDate.parse(task.substring(index + 5, endIndex),"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"                                                         DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"                        tasks.add(new Event(task.substring(7, index - 1), date, done));"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"            sc.close();"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"            return tasks;"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e);"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"            throw e;"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":"     * Saves tasks into the user\u0027s computer."},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks List of tasks to be saved."},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"    public void saveTasks(TaskList tasks) {"},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"            String string \u003d \"\";"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"                string +\u003d tasks.get(i) + \"\\n\";"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"goatygoatygoat"},"content":"            Files.writeString(FILE, string);"},{"lineNumber":78,"author":{"gitId":"goatygoatygoat"},"content":"        } catch (Exception e) {"},{"lineNumber":79,"author":{"gitId":"goatygoatygoat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":80,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":82}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a Task."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Dummy method."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * @return New Task."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        return new Task();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":13}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a list of Tasks."},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for an empty TaskList."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    TaskList() {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for TaskList."},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Tasks to be placed in TaskList."},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"     * Adds a task into the TaskList."},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Task to be added."},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"    void add(Task task) {"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.add(task);"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"     * Removes a task from the TaskList."},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be removed."},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    void remove(int index) {"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.remove(index);"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns a task from the TaskList."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be returned."},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Relevant task."},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"    Task get(int index) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        return this.tasks.get(index);"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     * Replaces a task in the TaskList."},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"     * @param index Index of task to be replaced."},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Task to replace existing task."},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"    void set(int index, Task task) {"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        this.tasks.set(index, task);"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * Returns the number of tasks in TaskList."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Number of tasks."},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"    int size() {"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"        return this.tasks.size();"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":65}},{"path":"src/main/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"    void get() {"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Deadline(\"tutorial\", \"2020-01-01\", true));"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"homework\"));"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Event(\"concert\", \"2020-01-02\", true));"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new Deadline(\"tutorial\", \"2020-01-01\", true), new TaskList(tasks).get(0));"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new ToDo(\"homework\"), new TaskList(tasks).get(1));"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(new Event(\"concert\", \"2020-01-02\", true), new TaskList(tasks).get(2));"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"    void size() {"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Deadline(\"tutorial\", \"2020-01-01\", true));"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"homework\"));"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new Event(\"concert\", \"2020-01-02\", true));"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(3, tasks.size());"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(new ToDo(\"something\"));"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"        assertEquals(4, tasks.size());"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a task which needs to be done."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String name;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    private boolean done;"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDo which has not been done."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"    ToDo(String name) {"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d false;"},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDo."},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"     * @param name Name of task."},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"     * @param done Indicates if task has been done."},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"    ToDo(String name, boolean done) {"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        this.name \u003d name;"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"        this.done \u003d done;"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"    Task done() {"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"        return new ToDo(this.name, true);"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ToDo this and Object obj."},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ToDo class and all attributes are equivalent,"},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ToDo) {"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"            ToDo toDo \u003d (ToDo) obj;"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"            return toDo.name.equals(this.name) \u0026\u0026 (toDo.done \u003d\u003d this.done);"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"     * Represents a ToDo instance in String."},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"     * @return String representation of ToDo."},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"        if (this.done) {"},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"            return \"[T][X] \" + this.name;"},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"        return \"[T][ ] \" + this.name;"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":64}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represents a command involving the addition of a task to be done."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"    private String todo;"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     * Constructor for ToDoCommand."},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"     * @param todo Name of task."},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    ToDoCommand(String todo) {"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":"        this.todo \u003d todo;"},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":"    void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"        Task task \u003d new ToDo(this.todo);"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"        tasks.add(task);"},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"        ui.addTask(task.toString(), tasks.size());"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"     * {@inheritDoc}"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"    boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"     * Checks the equivalence of ToDoCommand this and Object obj."},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"     * If obj is an instance of the ToDoCommand class and all attributes are equivalent,"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":"     * it is equivalent to this."},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"     * @param obj the object which will be compared to this."},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * @return Indication of whether obj is equivalent to this."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"        if (obj \u003d\u003d this) {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"            return true;"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        } else if (obj instanceof ToDoCommand) {"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"            ToDoCommand toDoCommand \u003d (ToDoCommand) obj;"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"            return toDoCommand.todo.equals(this.todo);"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"        return false;"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":51}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":" * Represent a Ui used for interacting with the user."},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":" */"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"     * Welcomes the user."},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"    void welcome() {"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Hello! I\u0027m Duke. What can I do for you?\\n\");"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":13,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"goatygoatygoat"},"content":"     * Bids the user farewell."},{"lineNumber":15,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"goatygoatygoat"},"content":"    void bye() {"},{"lineNumber":17,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":18,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":20,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"goatygoatygoat"},"content":"     * Displays the saved tasks of the user."},{"lineNumber":22,"author":{"gitId":"goatygoatygoat"},"content":"     * @param list Saved tasks"},{"lineNumber":23,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"goatygoatygoat"},"content":"    void list(String list) {"},{"lineNumber":25,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":26,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(list);"},{"lineNumber":27,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":29,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task is completed."},{"lineNumber":31,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Completed task."},{"lineNumber":32,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"goatygoatygoat"},"content":"    void done(String task) {"},{"lineNumber":34,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":35,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(task + \"\\n\");"},{"lineNumber":36,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":38,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task is deleted."},{"lineNumber":40,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Deleted task."},{"lineNumber":41,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Number of saved tasks after deleting."},{"lineNumber":42,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"goatygoatygoat"},"content":"    void delete(String task, int tasks) {"},{"lineNumber":44,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":45,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(task);"},{"lineNumber":46,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(String.format(\"Now you have %s tasks in the list.\", tasks) + \"\\n\");"},{"lineNumber":47,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":49,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user of saved tasks found."},{"lineNumber":51,"author":{"gitId":"goatygoatygoat"},"content":"     * @param string Saved tasks found."},{"lineNumber":52,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"goatygoatygoat"},"content":"    void find(String string) {"},{"lineNumber":54,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":55,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(string);"},{"lineNumber":56,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":58,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user that a task has been saved."},{"lineNumber":60,"author":{"gitId":"goatygoatygoat"},"content":"     * @param task Saved task."},{"lineNumber":61,"author":{"gitId":"goatygoatygoat"},"content":"     * @param tasks Number of tasks after saving."},{"lineNumber":62,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"goatygoatygoat"},"content":"    void addTask(String task, int tasks) {"},{"lineNumber":64,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":65,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(task);"},{"lineNumber":66,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(String.format(\"Now you have %s tasks in the list.\", tasks) + \"\\n\");"},{"lineNumber":67,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"goatygoatygoat"},"content":""},{"lineNumber":69,"author":{"gitId":"goatygoatygoat"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"goatygoatygoat"},"content":"     * Reminds user to provide valid input."},{"lineNumber":71,"author":{"gitId":"goatygoatygoat"},"content":"     * @param errormsg Error Message."},{"lineNumber":72,"author":{"gitId":"goatygoatygoat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"goatygoatygoat"},"content":"    void showError(String errormsg) {"},{"lineNumber":74,"author":{"gitId":"goatygoatygoat"},"content":"        System.out.println(errormsg + \"\\n\");"},{"lineNumber":75,"author":{"gitId":"goatygoatygoat"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"goatygoatygoat"},"content":"}"}],"authorContributionMap":{"goatygoatygoat":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":2,"author":{"gitId":"goatygoatygoat"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"goatygoatygoat"},"content":"deadline return book /by 2021-01-15"},{"lineNumber":4,"author":{"gitId":"goatygoatygoat"},"content":"event project meeting /at 2021-01-18"},{"lineNumber":5,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":6,"author":{"gitId":"goatygoatygoat"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"goatygoatygoat"},"content":"blah"},{"lineNumber":8,"author":{"gitId":"goatygoatygoat"},"content":"find book"},{"lineNumber":9,"author":{"gitId":"goatygoatygoat"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"goatygoatygoat"},"content":"list"},{"lineNumber":11,"author":{"gitId":"goatygoatygoat"},"content":"bye"}],"authorContributionMap":{"goatygoatygoat":11}}]
