[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"# Chip the Squirrel"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"Chip the Squirrel is a personal assistant chatbot created from a greenfield Java project template as part of the software engineering module CS2103T. Inspired by the neat way squirrels organise their nut stashes, Chip will help you keep tasks neat and organised too!"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"![image of chip](docs/Ui.png)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"# User Guide"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"Instructions on how to use the app can be found in the [User Guide](http://samuelfangjw.github.io/ip/)."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"# Acknowledgements"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"Photo of User"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"by [Du≈°an Veverkolog](https://unsplash.com/@veverkolog?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"Photo of Chip"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"by [Demi-Felicia Vares](https://unsplash.com/@dfv?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"Photo of Background"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"by [Richard Loader](https://unsplash.com/@fhfpix?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"}],"authorContributionMap":{"-":4,"samuelfangjw":17}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    archiveBaseName \u003d \"chip\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"samuelfangjw":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"# Chip the Squirrel User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"Hi I\u0027m Chip the Squirrel, a personal assistant chatbot to help you keep track of your deadlines, events and todos."},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"![chip](./Ui.png)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"# Table of Contents"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"- [Chip the Squirrel User Guide](#chip-the-squirrel-user-guide)- "},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"- [Table of Contents](#table-of-contents)"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"- [Features](#features)"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    - [Command Format](#command-format)"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    - [Seeking Help](#seeking-help)"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    - [Quitting the Application](#quitting-the-application)"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    - [Adding Todos](#adding-todos)"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    - [Adding Deadlines](#adding-deadlines)"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    - [Adding Events](#adding-events)"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    - [List out all tasks](#list-out-all-tasks)"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    - [Mark task as done](#mark-task-as-done)"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    - [Deleting a task](#deleting-a-task)"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    - [Finding a task](#finding-a-task)"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"- [Saving your data](#saving-your-data)"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"- [Acknowledgements](#acknowledgements)"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"## Quick Start"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"1. Ensure you have `Java 11` or above installed in your Computer."},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"2. Download the latest chip.jar from [www.github.com/samuelfangjw/ip/releases](www.github.com/samuelfangjw/ip/releases)."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"3. Copy the file to the folder you want to use as the home folder for Chip the Squirrel."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds."},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"5. Type the command in the command box and press Enter to execute it."},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"6. Refer to `Features` below for details on available commands."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"# Features"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"Below are some commands that I understand. Commands are not case-sensitive, so I understand \u0027help\u0027, \u0027Help\u0027 and \u0027HELP\u0027."},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"We squirrels are smart creatures!"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"## Command Format"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"Words in `UPPER_CASE` are parameters to be supplied by the user."},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"`(Round Brackets)` are used to denote optional parameters."},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"`...` is used to denote that one or more parameters are accepted."},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"## Seeking Help"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"The help command helps you remember what each command does. Help is always a \u0027help\u0027 away!"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"### `help (COMMAND)` - get information about syntax"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"Typing `help` will display the commands that are available. Typing help followed by the name of the command will display"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"more info on how the command can be used."},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"(COMMAND) should be a valid command."},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"`help`"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"![help example](screenshots/help.png)"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"## Quitting the Application"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"The bye command quits the application. Don\u0027t worry I\u0027ll remember all your tasks the next time you come back!"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"### `bye` - quits the application"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"Typing `bye` will quit the application."},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"`bye`"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"Application quits."},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"## Adding Todos"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"Add a todo and I\u0027ll remember it for you!"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"### `todo DESCRIPTION` - Add a todo"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"Typing `todo` followed by a description adds a todo to your list of tasks."},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"DESCRIPTION can be made out of one or many words."},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"`todo Find Acorns`"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"![todo example](screenshots/todo.png)"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"## Adding Deadlines"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"Add a deadline and I\u0027ll remember it for you!"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"### `deadline DESCRIPTION /by DATE (TIME)` - Add a deadline"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"Typing `deadline` followed by a description, date and optional time field adds a deadline to your list of tasks."},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"DESCRIPTION can be made out of one or many words."},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"DATE should be in yyyy-mm-dd format"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"(TIME) is optional and should be in hh:mm format"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"`deadline Assignment 1 /by 2021-02-14 23:59`"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"![deadline example](screenshots/deadline.png)"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"## Adding Events"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"Add an event and I\u0027ll remember it for you!"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"### `event DESCRIPTION /at DATE (TIME)` - Add an  event"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"Typing `event` followed by a description, date and optional time field adds an event to your list of tasks."},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"DESCRIPTION can be made out of one or many words."},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"DATE should be in yyyy-mm-dd format"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"(TIME) is optional and should be in hh:mm format"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"`event Squirrel Appreciation Day /at 2021-01-21`"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"![event example](screenshots/event.png)"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"## List out all tasks"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"I can list out your task for you!"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"### `list` - Lists out all tasks"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"Displays a list of all tasks."},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"`list`"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"![list example](screenshots/list.png)"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"## Mark task as done"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"You can let me know what tasks you have completed!"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"### `done TASK_NUMBER` - Describe action"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"Typing `done` followed by the task number marks the task as done. A `[X]` signifies that a task has been completed. If"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"you are unsure of the task number, you can list out all tasks using the `list` command."},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"`done 1`"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"![done example](screenshots/done.png)"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"## Deleting a task"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"Let me know if you would like a task to be deleted forever. Don\u0027t worry any secrets are safe with me!"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"### `delete TASK_NUMBER` - Describe action"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"Typing `delete` followed by the task number deletes the task. If you are unsure of the task number, you can list out all"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"tasks using the `list` command."},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"Example of usage:"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"`delete 1`"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"Expected outcome:"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"![delete example](screenshots/delete.png)"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"## Finding a task"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"Let me know what you are looking for!"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"### `find SEARCH_PARAMETERS...` - Describe action"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"You can search for a task using the find command. One or more search parameters are accepted. The program will attempt"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"to find all tasks that contain any of the search parameters. Search parameters are case-insensitive."},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"`find birthday tree`"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"![find example](screenshots/find.png)"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"# Saving your data"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"I\u0027ll remember your tasks automatically, no need to worry!"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"# Acknowledgements"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"Photo of User"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"by [Du≈°an Veverkolog](https://unsplash.com/@veverkolog?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"Photo of Chip"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"by [Demi-Felicia Vares](https://unsplash.com/@dfv?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"Photo of Background"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"by [Richard Loader](https://unsplash.com/@fhfpix?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"on [Unsplash](https://unsplash.com/?utm_source\u003dunsplash\u0026utm_medium\u003dreferral\u0026utm_content\u003dcreditCopyText)"}],"authorContributionMap":{"-":20,"samuelfangjw":200}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import chip.Chip;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.ChipException;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import chip.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * A GUI for duke.Duke using FXML."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private Chip chip;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Constructor for Main class"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public Main() {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            chip \u003d new Chip(\"data/tasks.txt\");"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ChipException e) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void start(Stage stage) {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            stage.setResizable(false);"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            stage.setTitle(\"Chip the Squirrel\");"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChip(chip);"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            stage.show();"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":44}},{"path":"src/main/java/chip/Chip.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.ChipException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.IncompleteInputException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import chip.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import chip.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Task;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.HelpMessages;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Messages;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Main class of the application."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class Chip {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final TaskList taskList;"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Storage storage;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new instance of duke.Duke."},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @param filePath The save file path."},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public Chip(String filePath) throws ChipException {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        loadData();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a response from duke based on the input."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @param input User input."},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * @return Response from duke."},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public String getResponse(String input) {"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            String[] tokens \u003d Parser.splitIntoSubstrings(input);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            Command command \u003d Parser.parseCommand(tokens[0]);"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            return runUserCommand(command, tokens);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ChipException e) {"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            return e.getMessage();"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Loads data from save file."},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public void loadData() throws ChipException {"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            ArrayList\u003cTask\u003e tasks \u003d storage.load();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            taskList.setTaskList(tasks);"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            throw new ChipException(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Saves data to save file."},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public void saveData() throws ChipException {"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        storage.save(taskList.getTasks());"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    private String handleDone(Command command, String[] tokens) throws ChipException {"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            Task task \u003d taskList.markAsDone(Integer.parseInt(tokens[1]) - 1);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            return Messages.getSuccessfullyDoneMessage(task);"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            throw new IncompleteInputException(command);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    private String handleDelete(Command command, String[] tokens) throws ChipException {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"            Task task \u003d taskList.delete(Integer.parseInt(tokens[1]) - 1);"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            return Messages.getSuccessfullyDeletedMessage(taskList.getSize(), task);"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            throw new IncompleteInputException(command);"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    private String handleFind(String[] tokens) {"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        String[] searchParameters \u003d tokens[1].toLowerCase().split(\" \");"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        return Messages.getFilteredTasksMessage(taskList.getFilteredTaskList(searchParameters));"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    private String handleHelp(String[] tokens) {"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        boolean isDescriptionEmpty \u003d tokens.length \u003c 2;"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return isDescriptionEmpty ? HelpMessages.getMessage(\"\") : HelpMessages.getMessage(tokens[1]);"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    private String handleTask(Command command, String[] tokens) throws ChipException {"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            Task task \u003d taskList.addTask(command, tokens[1].trim());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            return Messages.getSuccessfullyAddedTaskMessage(taskList.getSize(), task);"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            throw new IncompleteInputException(command);"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     * Processes input after it is parsed by the parser."},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     * @param command Command that is to be executed."},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"     * @param tokens  Input String split into tokens."},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ChipException If command cannot be executed."},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    public String runUserCommand(Command command, String[] tokens) throws ChipException {"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        String message \u003d null;"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        case BYE:"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d Messages.getGoodbyeMessage();"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"            System.exit(0);"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        case DONE:"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d handleDone(command, tokens);"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        case DELETE:"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d handleDelete(command, tokens);"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        case FIND:"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d handleFind(tokens);"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        case LIST:"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d Messages.getAllTasksMessage(taskList.getTasks());"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        case HELP:"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d handleHelp(tokens);"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        case TODO: // Fall through"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        case DEADLINE: // Fall through"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        case EVENT:"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d handleTask(command, tokens);"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        default:"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"            assert false : \"command not recognised\";"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        saveData();"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        assert !message.equals(\"\") : \"message should not be empty string\";"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        return message;"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":1,"samuelfangjw":147}},{"path":"src/main/java/chip/exceptions/ChipException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Exceptions thrown by duke."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class ChipException extends Exception {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public ChipException(String message) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/chip/exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * Exception thrown when input is incomplete."},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class IncompleteInputException extends ChipException {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    private String message;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an instance of exception thrown when input is incomplete."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     * @param command Command that was called."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public IncompleteInputException(Command command) {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        super(\"\");"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        case TODO:"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"Todo requires a description :(\";"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        case EVENT:"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"Event requires a description and a date :(\";"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        case DEADLINE:"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"Deadline requires a description and a date :(\";"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        case DELETE:"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"Please enter a valid number after delete :(\";"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        case DONE:"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"Please enter a valid number after done :(\";"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        default:"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d \"I am not sure what happened. Please try again :(\";"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public String getMessage() {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return message;"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":44}},{"path":"src/main/java/chip/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" * Exception thrown when date is invalid."},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"public class InvalidDateException extends ChipException {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    public InvalidDateException(String invalidDate) {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        super(invalidDate + \" is not a valid date. Please try again :(\");"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/chip/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Exception thrown when input is invalid."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class InvalidInputException extends ChipException {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public InvalidInputException() {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Please enter a valid index :(\");"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public InvalidInputException(int maxIdx) {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Please enter a valid index between 1 and \" + maxIdx + \" :(\");"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":14}},{"path":"src/main/java/chip/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Exception thrown when command is unknown."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class UnknownCommandException extends ChipException {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public UnknownCommandException (String command) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Sorry I do not understand the command \\\"\" + command + \"\\\" :(\");"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/chip/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.parser;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.UnknownCommandException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Parse input."},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"     * Splits input into substrings."},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * @param input User input."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     * @return String[] array of substrings."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public static String[] splitIntoSubstrings(String input) {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return input.split(\" \", 2);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Parse user input."},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * @param commandString user input."},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * @return Command that has been parsed."},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * @throws UnknownCommandException If input cannot be parsed."},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static Command parseCommand(String commandString) throws UnknownCommandException {"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            return Command.valueOf(commandString.trim().toUpperCase());"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            throw new UnknownCommandException(commandString.trim());"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":34}},{"path":"src/main/java/chip/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.storage;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.ChipException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Event;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Task;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Todo;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Manages storage information for the program."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * File path of save file"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final String filePath;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * Creates new instance of Storage."},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * @param filePath File path of save file."},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public Storage(String filePath) {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Loads a list of tasks from the save file."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @return List of tasks."},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IOException   If file could not be read."},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ChipException If save file is corrupted."},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, ChipException {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        File dir \u003d new File(\"data\");"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (!dir.exists()) {"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            dir.mkdirs();"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        f.createNewFile();"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        Scanner sc \u003d new Scanner(f);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        while (sc.hasNext()) {"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            String input \u003d sc.nextLine().trim();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            if (!input.equals(\"\")) {"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                String[] tokens \u003d input.split(\"\\\\|\");"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                Command taskType \u003d Command.valueOf(tokens[0]);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                boolean isTimeFieldPresent \u003d tokens.length \u003e\u003d 5;"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                Task task;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                String date;"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                String time;"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                switch (taskType) {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                case EVENT:"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                    date \u003d tokens[3];"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                    time \u003d isTimeFieldPresent ? \" \" + tokens[4] : \"\";"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                    task \u003d new Event(tokens[2], date + time);"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                case DEADLINE:"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                    date \u003d tokens[3];"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                    time \u003d isTimeFieldPresent ? \" \" + tokens[4] : \"\";"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                    task \u003d new Deadline(tokens[2], date + time);"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                case TODO:"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                    task \u003d new Todo(tokens[2]);"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                default:"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"                    throw new ChipException(\"Sorry something when wrong loading your safe file :(\");"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                if (tokens[1].equals(\"true\")) {"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                    task.markAsDone();"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                tasks.add(task);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        return tasks;"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * Saves a list of tasks to the save file."},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * @param tasks List of tasks to be saved."},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ChipException If unable to save to file."},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws ChipException {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            f.createNewFile();"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"            FileWriter fw \u003d new FileWriter(filePath);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"            StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            for (Task task : tasks) {"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"                sb.append(task.serialise()).append(\u0027\\n\u0027);"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"            fw.write(sb.toString());"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"            fw.close();"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"            throw new ChipException(\"Something went wrong trying to save your data :(\");"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":117}},{"path":"src/main/java/chip/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.DateTime;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Deadline task."},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * Date the task is to be completed by."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalTime time;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Creates new instance of deadline."},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @param description Description of deadline."},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateTime Date and time the task is to be completed by."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public Deadline(String description, String dateTime) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        date \u003d DateTime.parseDate(dateTime);"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        time \u003d DateTime.parseTime(dateTime);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public String serialise() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String type \u003d \"DEADLINE\";"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(type).append(\u0027|\u0027)"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            .append(isDone).append(\u0027|\u0027)"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            .append(description).append(\u0027|\u0027)"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            .append(DateTime.serialiseDate(date)).append(\u0027|\u0027)"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            .append(DateTime.getTimeAsString(time));"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return sb.toString();"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : \" \" + time.toString();"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return String.format(\"[D] %s (by: %s%s)\", super.toString(), DateTime.getDateAsString(date), timeString);"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":48}},{"path":"src/main/java/chip/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.DateTime;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Event task."},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * Date of event"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalTime time;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Creates new instance of event."},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @param description Description of event."},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateTime Date and time of event."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public Event(String description, String dateTime) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        date \u003d DateTime.parseDate(dateTime);"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        time \u003d DateTime.parseTime(dateTime);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public String serialise() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String type \u003d \"EVENT\";"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(type).append(\u0027|\u0027)"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            .append(isDone).append(\u0027|\u0027)"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            .append(description).append(\u0027|\u0027)"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            .append(DateTime.serialiseDate(date)).append(\u0027|\u0027)"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            .append(DateTime.getTimeAsString(time));;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return sb.toString();"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        String timeString \u003d time \u003d\u003d null ? \"\" : \" \" + time.toString();"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return String.format(\"[E] %s (at: %s%s)\", super.toString(), DateTime.getDateAsString(date), timeString);"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":48}},{"path":"src/main/java/chip/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Task represents a task that is to be done."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"     * Description of task."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"     * Status of task."},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Creates new instance of a task."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param description Description of task."},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a status icon depending on status of task."},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * @return status icon."},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Marks task as done."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public void markAsDone() {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Returns String representation of task to be saved to save file."},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * @return String representation of task."},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public abstract String serialise();"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":53}},{"path":"src/main/java/chip/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.InvalidDateException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.InvalidInputException;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.UnknownCommandException;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Represents list of tasks."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class TaskList {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Lists of tasks."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new instance of TaskList."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public TaskList() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Updates tasks."},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * @param tasks new tasks."},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * Returns list of tasks."},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * @return List of tasks."},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return tasks;"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * @param command Command to determine type of task to add."},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * @param input Input string."},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * @return Task The task that was added."},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ArrayIndexOutOfBoundsException If input is not complete."},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidDateException If date is invalid."},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * @throws UnknownCommandException If command is invalid."},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public Task addTask(Command command, String input)"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        throws ArrayIndexOutOfBoundsException, InvalidDateException, UnknownCommandException {"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        String[] tokens;"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        case TODO:"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            task \u003d new Todo(input);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        case DEADLINE:"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            tokens \u003d input.split(\" /by \", 2);"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            input \u003d tokens[0];"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                task \u003d new Deadline(input, tokens[1]);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidDateException(tokens[1]);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        case EVENT:"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"            tokens \u003d input.split(\" /at \", 2);"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"            input \u003d tokens[0];"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            try {"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                task \u003d new Event(input, tokens[1]);"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidDateException(tokens[1]);"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        default:"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"            throw new UnknownCommandException(command.name());"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        tasks.add(task);"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        return task;"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * Marks a task as done."},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     * @param idx Index of task to mark as done."},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * @return Task that was marked as done."},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidInputException If index is not in valid range."},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    public Task markAsDone(int idx) throws InvalidInputException {"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            task \u003d tasks.get(idx);"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidInputException(tasks.size());"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        task.markAsDone();"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return task;"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes a task."},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"     * @param idx Index of task to be deleted."},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"     * @return Task that was deleted."},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * @throws InvalidInputException If index is not in valid range."},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    public Task delete(int idx) throws InvalidInputException {"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"            task \u003d tasks.get(idx);"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidInputException();"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"            } else {"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidInputException(tasks.size());"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        tasks.remove(idx);"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        return task;"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of tasks that matches any of the search parameters."},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     * @param searchParameters Strings to compare tasks with."},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"     * @return List of tasks."},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    public Task[] getFilteredTaskList(String... searchParameters) {"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        return tasks.stream().filter(x -\u003e Arrays.stream(searchParameters)"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"                    .anyMatch(x.description.toLowerCase()::contains)).toArray(Task[]::new);"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"     * Returns size of list of tasks."},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"     * @return size of list of tasks."},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    public int getSize() {"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        return tasks.size();"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":155}},{"path":"src/main/java/chip/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Todo task."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an instance of the todo task."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"     * @param description description of task"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public String serialise() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String type \u003d \"TODO\";"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(type).append(\u0027|\u0027).append(isDone).append(\u0027|\u0027).append(description);"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return sb.toString();"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":29}},{"path":"src/main/java/chip/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.ui;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        Circle clip \u003d new Circle(40, 40, 40);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private void flip() {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        Collections.reverse(tmp);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a dialog box formatted for the user input."},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * @param text Command the user input."},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     * @param img  Display image."},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     * @return A dialog box."},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        return new DialogBox(text, img);"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a dialog box formatted for the response."},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * @param text Response."},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * @param img  Display image."},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * @return A dialog box."},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    public static DialogBox getChipDialog(String text, Image img) {"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        db.flip();"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        return db;"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":78}},{"path":"src/main/java/chip/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.ui;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import chip.Chip;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Messages;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Controller for duke.ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Chip chip;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final Image chipImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaSquirrel.jpg\"));"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Initialize GUI from FXML."},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        displayChipMessage(Messages.getWelcomeMessage());"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void setChip(Chip d) {"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        chip \u003d d;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private void displayChipMessage(String response) {"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        dialogContainer.getChildren().add(DialogBox.getChipDialog(response, chipImage));"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        String input \u003d userInput.getText().trim();"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        if (!input.isEmpty()) {"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            String response \u003d chip.getResponse(input);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                DialogBox.getChipDialog(response, chipImage)"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            );"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"            userInput.clear();"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":63}},{"path":"src/main/java/chip/utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Commands to be executed."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    BYE,"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    DELETE,"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    DONE,"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    EVENT,"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    FIND,"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    HELP,"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    LIST,"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    TODO"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":16}},{"path":"src/main/java/chip/utils/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Format date and time."},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class DateTime {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * Returns String representation of input date."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * @param date Date to be converted to string."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * @return String representation of date."},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static String getDateAsString(LocalDate date) {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Returns String representation of input time."},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * @param time Time to be converted to string."},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @return String representation of time."},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTimeAsString(LocalTime time) {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        return time \u003d\u003d null ? \"\" : time.toString();"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Returns String representation of date to be saved in safe file."},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * @param date Date to be saved."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * @return String representation of date."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static String serialiseDate(LocalDate date) {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a LocalDate from an input string."},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * The input string may have an optional time field."},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * @param input String representation of date and time."},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @return LocalDate Date represented by the input string."},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public static LocalDate parseDate(String input) throws DateTimeParseException {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        String[] dateAndTime \u003d input.split(\" \");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return LocalDate.parse(dateAndTime[0]);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a LocalTime from an input string."},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * @param input String representation of date and time."},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * @return LocalTime Time represented by the input string or null if no time is found."},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public static LocalTime parseTime(String input) throws DateTimeParseException {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        String[] dateAndTime \u003d input.split(\" \");"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        boolean isTimeFieldPresent \u003d dateAndTime.length \u003e\u003d 2;"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        return isTimeFieldPresent ? LocalTime.parse(dateAndTime[1]) : null;"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":65}},{"path":"src/main/java/chip/utils/HelpMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.UnknownCommandException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import chip.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Formats help messages."},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class HelpMessages {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    private static final String[] AVAILABLE_COMMANDS \u003d"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"        {\"bye\", \"deadline\", \"delete\", \"done\", \"event\", \"help\", \"find\", \"list\", \"todo\"};"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String BYE_MESSAGE \u003d"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        \"Type \\\"bye\\\" to exit the application. Don\u0027t worry I\u0027ll remember your tasks!\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DEADLINE_MESSAGE \u003d"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        \"Keep track of your deadlines by typing the following:\\n\""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"\\\"deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e\\\"\\n\""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"            + \"\u003cdate\u003e should be in yyyy-mm-dd format\\n\""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"            + \"\u003ctime\u003e is optional and should be in hh:mm format\";"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DELETE_MESSAGE \u003d"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        \"Type \\\"delete \u003ctask_number\u003e\\\" to delete a task forever. \""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            + \"If you are not sure of the task number, try listing out your tasks.\";"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DONE_MESSAGE \u003d"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \"Type \\\"done \u003ctask_number\u003e\\\" and I\u0027ll mark your task as done. \""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"If you are not sure of the task number, try listing out your tasks.\";"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EVENT_MESSAGE \u003d"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \"Keep track of your events by typing the following:\\n\""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + \"\\\"event \u003cdescription\u003e /at \u003cdate\u003e \u003ctime\u003e\\\"\\n\""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"\u003cdate\u003e should be in yyyy-mm-dd format\\n\""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + \"\u003ctime\u003e is optional and should be in hh:mm format\";"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final String HELP_MESSAGE \u003d"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        \"Type \\\"help \u003ccommand\u003e\\\" to see get more information about a command. Available commands:\\n\";"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FIND_MESSAGE \u003d"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        \"Let me know which tasks you are looking for by typing the following:\\n\""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            + \"\\\"find \u003csubstring\u003e\\\"\\n\""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            + \"You may specify more than one space separated substrings to search for.\\n\""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            + \"I\u0027ll look through the tasks and see if there are any matches.\";"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    private static final String LIST_MESSAGE \u003d \"Type \\\"list\\\" to see a list of tasks you currently have.\";"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private static final String TODO_MESSAGE \u003d"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        \"Keep track of your todos by typing the following:\\n\""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            + \"\\\"todo \u003cdescription\u003e\\\"\";"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private static final String UNKNOWN_MESSAGE \u003d \"I do not understand that command. Try one of these instead:\\n\";"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a help message based on the command that is requested."},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * @param inputString command that the user has requested help on."},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @return message detailing help for the command requested."},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public static String getMessage(String inputString) {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (inputString.equals(\"\")) {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            return HELP_MESSAGE + String.join(\"\\n\", AVAILABLE_COMMANDS);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        Command command;"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            command \u003d Parser.parseCommand(inputString.trim().toUpperCase());"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        } catch (UnknownCommandException e) {"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            return UNKNOWN_MESSAGE + String.join(\"\\n\", AVAILABLE_COMMANDS);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        String message \u003d null;"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        case BYE:"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d BYE_MESSAGE;"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        case DONE:"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d DONE_MESSAGE;"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        case DELETE:"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d DELETE_MESSAGE;"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        case FIND:"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d FIND_MESSAGE;"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        case LIST:"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d LIST_MESSAGE;"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        case HELP:"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d HELP_MESSAGE + String.join(\"\\n\", AVAILABLE_COMMANDS);"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        case TODO:"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d TODO_MESSAGE;"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        case DEADLINE:"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d DEADLINE_MESSAGE;"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        case EVENT:"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"            message \u003d EVENT_MESSAGE;"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            break;"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        default:"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"            assert false : \"command not recognised\";"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        return message;"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":98}},{"path":"src/main/java/chip/utils/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import chip.task.Task;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Format messages to be send by program."},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class Messages {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String WELCOME_MESSAGE \u003d"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        \"Hello! I\u0027m Chip the Squirrel! How can I help you today? If you need any help, type \\\"help\\\".\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"Bye! Hope to see you again soon!\";"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static String joinStringsWithNewLines(String... strings) {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return String.join(\"\\n\", strings);"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a message to be shown after a task is successfully marked as done."},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * @param task task to be marked as done."},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * @return Message shown after task is successfully marked as done."},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static String getSuccessfullyDoneMessage(Task task) {"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        return joinStringsWithNewLines(\"Good Job! I\u0027ve marked this task as done!\","},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            task.toString());"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a message to be shown after a task is successfully deleted."},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * @param numTasks Number of tasks left in the list."},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * @param task Task that was deleted."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @return Message shown after task is successfully deleted."},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public static String getSuccessfullyDeletedMessage(int numTasks, Task task) {"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        String formattedTasksCount \u003d numTasks \u003e 1 ? String.format(\"%d tasks\", numTasks) : \"1 task\";"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return joinStringsWithNewLines(\"Got it! I\u0027ve removed this task:\","},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            \"  \" + task.toString(),"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            \"Now you have \" + formattedTasksCount + \" in the list.\");"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a string representation of list of tasks."},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Tasks should already be filtered by search command."},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * @param tasks List of tasks."},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @return string representation of list of tasks."},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public static String getFilteredTasksMessage(Task[] tasks) {"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        if (tasks.length \u003d\u003d 0) {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            return \"No matching tasks were found.\";"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            String[] outputArr \u003d new String[tasks.length + 1];"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"            outputArr[0] \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"            for (int i \u003d 0; i \u003c tasks.length; i++) {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                outputArr[i + 1] \u003d (i + 1) + \".\" + tasks[i].toString();"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            return joinStringsWithNewLines(outputArr);"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a string representation of list of all tasks."},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * @param tasks List of tasks."},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * @return string representation of list of tasks."},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public static String getAllTasksMessage(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        assert tasks !\u003d null : \"tasks should not be null\";"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            return \"You have not added any tasks.\";"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            String[] tasksArr \u003d new String[tasks.size()];"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                tasksArr[i] \u003d (i + 1) + \".\" + tasks.get(i).toString();"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            return joinStringsWithNewLines(tasksArr);"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a message to be shown after a task is successfully added."},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * @param numTasks Number of tasks left in the list."},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * @param task Task that was added."},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     * @return Message shown after task is successfully added."},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public static String getSuccessfullyAddedTaskMessage(int numTasks, Task task) {"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        String formattedTasksCount \u003d numTasks \u003e 1 ? String.format(\"%d tasks\", numTasks) : \"1 task\";"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        assert task !\u003d null : \"task should not be null\";"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        return joinStringsWithNewLines(\"Got it! I\u0027ve added this task:\","},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            \"  \" + task.toString(),"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            \"Now you have \" + formattedTasksCount + \" in the list.\");"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Returns message shown when user opens the application"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public static String getWelcomeMessage() {"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return WELCOME_MESSAGE;"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"     * Returns Message shown when user closes the application"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    public static String getGoodbyeMessage() {"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        return GOODBYE_MESSAGE;"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":118}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" prefWidth\u003d\"300.0\" spacing\u003d\"5.0\" style\u003d\"-fx-background-color: transparent;\" type\u003d\"HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"   \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"      \u003cjavafx.scene.layout.HBox alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"0.65\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" style\u003d\"-fx-border-color: #000000; -fx-border-radius: 15px; -fx-background-color: #000000; -fx-background-radius: 15px;\"\u003e"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"          \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"              \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"383.0\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"              \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/javafx.scene.layout.HBox\u003e"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\"\u003e"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/ImageView\u003e"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"   \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"   \u003cpadding\u003e"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"   \u003c/padding\u003e"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"samuelfangjw":27}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.effect.BoxBlur?\u003e"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@MainStyle.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chip.ui.MainWindow\"\u003e"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cchildren\u003e"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \u003cAnchorPane opacity\u003d\"0.95\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"anchorPane\"\u003e"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"         \u003ceffect\u003e"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"            \u003cBoxBlur height\u003d\"2.5\" width\u003d\"2.5\" /\u003e"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/effect\u003e"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/AnchorPane\u003e"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cGridPane layoutY\u003d\"558.0\" style\u003d\"-fx-border-color: #000000; -fx-border-radius: 5px; -fx-border-width: 1px;\"\u003e"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"         \u003ccolumnConstraints\u003e"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/columnConstraints\u003e"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"         \u003crowConstraints\u003e"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" vgrow\u003d\"SOMETIMES\" /\u003e"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/rowConstraints\u003e"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"         \u003cchildren\u003e"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"How can I help you today?\" style\u003d\"-fx-background-color: transparent; -fx-text-fill: #FFFFFF;\" /\u003e"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"              \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: transparent; -fx-text-fill: #FFFFFF;\" text\u003d\"Send\" GridPane.columnIndex\u003d\"1\" /\u003e"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/children\u003e"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/GridPane\u003e"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: transparent; -fx-background: transparent\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            \u003ccontent\u003e"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" /\u003e"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/content\u003e"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"         \u003cpadding\u003e"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets top\u003d\"5.0\" /\u003e"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"         \u003c/padding\u003e"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/children\u003e"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"samuelfangjw":43}},{"path":"src/test/java/chip/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.parser;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import chip.exceptions.UnknownCommandException;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import chip.utils.Command;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ParserTest {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public void parseCommand_validCommand_success() throws UnknownCommandException {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        String todo \u003d \"todo\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        String deadline \u003d \"deadline\";"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        String event \u003d \"event\";"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        String delete \u003d \"delete\";"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        String bye \u003d \"bye\";"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String done \u003d \"done\";"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        String list \u003d \"list\";"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.TODO, Parser.parseCommand(todo));"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.DEADLINE, Parser.parseCommand(deadline));"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.EVENT, Parser.parseCommand(event));"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.DELETE, Parser.parseCommand(delete));"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.BYE, Parser.parseCommand(bye));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.DONE, Parser.parseCommand(done));"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Command.LIST, Parser.parseCommand(list));"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":29}},{"path":"src/test/java/chip/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package chip.task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    public void serialise_isNotDone_success() {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadline \u003d new Deadline(\"Description\", \"2021-01-01 16:00\");"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(\"DEADLINE|false|Description|2021-01-01|16:00\", deadline.serialise());"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"todo todo one"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"event event /at 2020-12-01"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"event event one /at 2020-12-01"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"deadline deadline /by 2020-12-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"deadline deadline one /by 2020-12-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"done 5"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"todo"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"deadline"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"event"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"blah"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"done"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"delete"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"event no date"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"deadline no date"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"delete one"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"done one"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"bye"}],"authorContributionMap":{"samuelfangjw":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"java -classpath ..\\bin chip.Chip \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":20,"samuelfangjw":1}}]
