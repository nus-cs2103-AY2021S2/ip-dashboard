[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import Exceptions.DukeException;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"import Exceptions.IncompleteInputException;"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import Exceptions.UnknownCommandException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import Task.*;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import Utils.Command;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static Utils.Print.printWithIndentation;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String BOT_NAME \u003d \"Chip the Squirrel\";"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final TaskList taskList \u003d new TaskList();"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static void processInput(String input) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        String[] tokens \u003d input.split(\" \", 2);"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        Command command;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            command \u003d Command.valueOf(tokens[0].trim().toUpperCase());"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalArgumentException e){"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            throw new UnknownCommandException(tokens[0].trim());"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        switch(command) {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            case BYE:"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                printWithIndentation(\"Bye! Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                System.exit(0);"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            case DONE:"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                try {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                    taskList.markAsDone(Integer.parseInt(tokens[1]) - 1);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                    throw new IncompleteInputException(command);"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            case DELETE:"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                try {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                    taskList.delete(Integer.parseInt(tokens[1]) - 1);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                    throw new IncompleteInputException(command);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            case LIST:"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                taskList.printTasks();"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            default:"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                try {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                    taskList.addTask(command, tokens[1].trim());"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                    throw new IncompleteInputException(command);"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        printWithIndentation(\"Hello! I\u0027m \" + BOT_NAME + \"!\", \"What can I do for you today?\");"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        while (sc.hasNext()) {"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"            String input \u003d sc.nextLine().trim();"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            if (input.equals(\"\")) {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                continue;"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            try {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                processInput(input);"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                printWithIndentation(e.getMessage());"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"samuelfangjw":71}},{"path":"src/main/java/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":7}},{"path":"src/main/java/Exceptions/IncompleteInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import Utils.Command;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"public class IncompleteInputException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    String message;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public IncompleteInputException(Command command) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"\");"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"            case TODO:"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"Todo requires a description :(\";"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"            case EVENT:"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"Event requires a description and a date :(\";"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"            case DEADLINE:"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"Deadline requires a description and a date :(\";"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            case DELETE:"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"Please enter a valid number after delete :(\";"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            case DONE:"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"Please enter a valid number after done :(\";"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            default:"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                message \u003d \"I am not sure what happened. Please try again :(\";"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public String getMessage() {"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return message;"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":35}},{"path":"src/main/java/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class InvalidInputException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    public InvalidInputException() {"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Please enter a valid index :(\");"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    public InvalidInputException(int maxIdx) {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Please enter a valid index between 1 and \" + maxIdx + \" :(\");"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/Exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class UnknownCommandException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    public UnknownCommandException (String command) {"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Sorry I do not understand the command \\\"\" + command + \"\\\" :(\");"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":7}},{"path":"src/main/java/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    protected String by;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":15}},{"path":"src/main/java/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    protected String at;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    public Event(String description, String at) {"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        this.at \u003d at;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":15}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public void markAsDone() {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":24}},{"path":"src/main/java/Task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import Exceptions.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import Utils.Command;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static Utils.Print.printWithIndentation;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    ArrayList\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void printTasks() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            printWithIndentation(\"You have not added any tasks.\");"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            String[] tasksArr \u003d new String[taskList.size()];"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"                tasksArr[i] \u003d (i + 1) + \".\" + taskList.get(i).toString();"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            printWithIndentation(tasksArr);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void addTask(Command command, String input) throws ArrayIndexOutOfBoundsException {"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String[] tokens;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        switch (command) {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            case TODO:"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                task \u003d new Todo(input);"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            case DEADLINE:"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                tokens \u003d input.split(\" /by \", 2);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                input \u003d tokens[0];"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                task \u003d new Deadline(input, tokens[1]);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            case EVENT:"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                tokens \u003d input.split(\" /at \", 2);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                input \u003d tokens[0];"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                task \u003d new Event(input, tokens[1]);"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            default:"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                printWithIndentation(\"I do not understand.\");"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                return;"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        taskList.add(task);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        int numTasks \u003d  taskList.size();"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String formattedTasksCount \u003d numTasks \u003e 1 ? String.format(\"%d tasks\", numTasks) : \"1 task\";"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        printWithIndentation(\"Got it! I\u0027ve added this task:\","},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                \"  \" + task.toString(),"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                \"Now you have \" + formattedTasksCount + \" in the list.\");"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public void markAsDone(int idx) throws InvalidInputException {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"            task \u003d taskList.get(idx);"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            throw new InvalidInputException(taskList.size());"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        task.markAsDone();"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        printWithIndentation(\"Good Job! I\u0027ve marked this task as done!\", task.toString());"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    public void delete(int idx) throws InvalidInputException {"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        Task task;"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            task \u003d taskList.get(idx);"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            if (taskList.size() \u003d\u003d 0) {"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidInputException();"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                throw new InvalidInputException(taskList.size());"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        taskList.remove(idx);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        int numTasks \u003d  taskList.size();"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        String formattedTasksCount \u003d numTasks \u003e 1 ? String.format(\"%d tasks\", numTasks) : \"1 task\";"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        printWithIndentation(\"Got it! I\u0027ve removed this task:\","},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                \"  \" + task.toString(),"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"                \"Now you have \" + formattedTasksCount + \" in the list.\");"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":94}},{"path":"src/main/java/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Task;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":12}},{"path":"src/main/java/Utils/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public enum Command {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    BYE,"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    DEADLINE,"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    DELETE,"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    DONE,"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    EVENT,"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    LIST,"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    TODO"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/Utils/Print.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package Utils;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"public class Print {"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    private static final String LINE_BREAK \u003d \"------------------------------------------------------------\";"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INDENT \u003d \"    \";"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public static void printWithIndentation(String ... strings) {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        System.out.println(INDENT + LINE_BREAK);"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"        for (String s : strings) {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"            System.out.println(INDENT + s);"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        System.out.println(INDENT + LINE_BREAK);"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"todo todo one"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"event event /at Mon 12-4pm"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"event event one /at Tues 4-6pm"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"deadline deadline /by Mon 12-4pm"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"deadline deadline one /by Tues 4-6pm"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"done 5"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"delete 2"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"list"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"todo"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"deadline"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"event"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"blah"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"done"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"delete"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"event no date"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"deadline no date"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"delete one"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"done one"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"bye"}],"authorContributionMap":{"samuelfangjw":26}}]
